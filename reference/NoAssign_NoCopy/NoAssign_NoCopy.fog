

/*

You want to prevent access to copy and assign operations.

class UniqueColor {
private:
	UniqueColor(const UniqueColor&); // not implemented
	UniqueColor& operator=(const UniqueColor&); // not implemented
};
*/

auto declaration NoAssign() {
	private @Scope& operator=(const $Scope&) :{
		export/noimplementation;
		derived(true);
	};
};
auto declaration NoCopy() {
	private @{Scope}(const $Scope&) :{
		export/noimplementation;
		derived(true);
	};
};

class UniqueColor {
	export/interface "UniqueColor.hxx";
	export/implementation "UniqueColor.cxx";
	$NoCopy();
	$NoAssign();
	
};

class UniqueColorWithReflection : public UniqueColor {
	export/all ${Super};
	
	void NotImplemented();
};

void main() {
	UniqueColorWithReflection r;
	r.NotImplemented();
}
