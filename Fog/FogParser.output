

Terminals which are not used:

   BOOL
   CHAR
   DOUBLE
   FLOAT
   INT
   LONG
   SHORT
   SIGNED
   UNSIGNED
   VOID
   WCHAR_T
   NewLine
   ERROR
   NIL
   RAMMARG
   HASH_BLANK
   HASH_DEFINE
   HASH_ELIF
   HASH_ELSE
   HASH_ENDIF
   HASH_ERROR
   HASH_IF
   HASH_IFDEF
   HASH_IFNDEF
   HASH_INCLUDE
   HASH_LINE
   HASH_PRAGMA
   HASH_UNDEF
   HASH_HASH
   DI_HASH_HASH
   DI_HASH
   DI_SQUARE
   DI_ERAUQS
   DI_ECARB
   DEFINED
   DO_FUNCTION
   MacroId
   Punct
   Text
   REDUCE_HERE
   ' '


Conflict in state 48 between rule 24 and token '<' resolved as shift.
Conflict in state 51 between rule 798 and token BuiltInTypeSpecifier resolved as shift.
Conflict in state 101 between rule 33 and token SCOPE resolved as shift.
Conflict in state 147 between rule 79 and token INC resolved as reduce.
Conflict in state 147 between rule 79 and token DEC resolved as reduce.
Conflict in state 147 between rule 79 and token '[' resolved as reduce.
Conflict in state 147 between rule 79 and token '(' resolved as shift.
Conflict in state 147 between rule 79 and token '+' resolved as reduce.
Conflict in state 147 between rule 79 and token '-' resolved as reduce.
Conflict in state 147 between rule 79 and token '*' resolved as reduce.
Conflict in state 147 between rule 79 and token '&' resolved as reduce.
Conflict in state 204 between rule 330 and token StringLiteral resolved as shift.
Conflict in state 206 between rule 333 and token '/' resolved as shift.
Conflict in state 212 between rule 322 and token StringLiteral resolved as shift.
Conflict in state 213 between rule 334 and token '/' resolved as shift.
Conflict in state 285 between rule 22 and token ':' resolved as shift.
Conflict in state 318 between rule 321 and token ':' resolved as shift.
Conflict in state 324 between rule 576 and token CATCH resolved as shift.
Conflict in state 424 between rule 355 and token '{' resolved as shift.
Conflict in state 439 between rule 399 and token '*' resolved as shift.
Conflict in state 439 between rule 399 and token '&' resolved as shift.
Conflict in state 485 between rule 399 and token '*' resolved as shift.
Conflict in state 485 between rule 399 and token '&' resolved as shift.
Conflict in state 571 between rule 468 and token '{' resolved as shift.
Conflict in state 571 between rule 468 and token ':' resolved as shift.
Conflict in state 786 between rule 399 and token '*' resolved as shift.
Conflict in state 786 between rule 399 and token '&' resolved as shift.
Conflict in state 792 between rule 399 and token '*' resolved as shift.
Conflict in state 792 between rule 399 and token '&' resolved as shift.
Conflict in state 1333 between rule 238 and token ELSE resolved as shift.
Conflict in state 1489 between rule 812 and token ELSE resolved as shift.

Grammar
rule 1    identifier_word -> Identifier
rule 2    identifier_word -> MetaType
rule 3    identifier_word -> DERIVED
rule 4    identifier_word -> FILE
rule 5    identifier_word -> GUARD
rule 6    identifier_word -> IMPLEMENTATION
rule 7    identifier_word -> INCLUDE
rule 8    identifier_word -> INTERFACE
rule 9    identifier_word -> NOGUARD
rule 10   identifier_word -> NOIMPLEMENTATION
rule 11   identifier_word -> OVERLOAD
rule 12   identifier_word -> PATH
rule 13   identifier_word -> PREFIX
rule 14   identifier_word -> PURE
rule 15   identifier_word -> SUFFIX
rule 16   identifier_word -> ALL
rule 17   identifier_word -> PLACEHOLDER
rule 18   identifier_word -> PLACEMENT
rule 19   identifier_word -> NOAUTO
rule 20   identifier_word -> segment
rule 21   identifier_word -> utility
rule 22   identifier -> identifier_word
rule 23   identifier -> TreeLiteral
rule 24   id -> identifier
rule 25   id -> identifier template_test '+' template_argument_list '>'
rule 26   id -> identifier template_test '+' '>'
rule 27   id -> identifier template_test '-'
rule 28   id -> template_id
rule 29   template_test -> '<'
rule 30   global_scope -> SCOPE
rule 31   global_scope -> TEMPLATE global_scope
rule 32   id_scope -> id SCOPE
rule 33   nested_id -> id
rule 34   nested_id -> id_scope nested_id
rule 35   scoped_id -> nested_id
rule 36   scoped_id -> global_scope nested_id
rule 37   destructor_id -> '~' id
rule 38   destructor_id -> TEMPLATE destructor_id
rule 39   special_function_id -> conversion_function_id
rule 40   special_function_id -> operator_function_id
rule 41   special_function_id -> TEMPLATE special_function_id
rule 42   nested_special_function_id -> special_function_id
rule 43   nested_special_function_id -> id_scope destructor_id
rule 44   nested_special_function_id -> id_scope nested_special_function_id
rule 45   scoped_special_function_id -> nested_special_function_id
rule 46   scoped_special_function_id -> global_scope nested_special_function_id
rule 47   declarator_id -> scoped_id
rule 48   declarator_id -> scoped_special_function_id
rule 49   declarator_id -> destructor_id
rule 50   built_in_type_id -> built_in_type_specifier
rule 51   built_in_type_id -> built_in_type_id built_in_type_specifier
rule 52   pseudo_destructor_id -> built_in_type_id SCOPE '~' built_in_type_id
rule 53   pseudo_destructor_id -> '~' built_in_type_id
rule 54   pseudo_destructor_id -> TEMPLATE pseudo_destructor_id
rule 55   nested_pseudo_destructor_id -> pseudo_destructor_id
rule 56   nested_pseudo_destructor_id -> id_scope nested_pseudo_destructor_id
rule 57   scoped_pseudo_destructor_id -> nested_pseudo_destructor_id
rule 58   scoped_pseudo_destructor_id -> global_scope scoped_pseudo_destructor_id
rule 59   string -> StringLiteral
rule 60   literal -> IntegerLiteral
rule 61   literal -> CharacterLiteral
rule 62   literal -> FloatingLiteral
rule 63   literal -> string
rule 64   literal -> boolean_literal
rule 65   literal -> NumberLiteral
rule 66   string_expr -> string
rule 67   string_expr -> TreeLiteral
rule 68   boolean_literal -> FALSE
rule 69   boolean_literal -> TRUE
rule 70   translation_unit -> declaration_seq.opt
rule 71   translation_unit -> declaration_seq.opt util looping_declaration '#' bang error '#'
rule 72   translation_unit -> '$' tree_expression
rule 73   translation_unit -> '$' '{' tree_expression ecarb
rule 74   translation_unit -> '$' bang error
rule 75   translation_unit -> '$' '{' bang error ecarb
rule 76   primary_expression -> literal
rule 77   primary_expression -> THIS
rule 78   primary_expression -> suffix_decl_specified_ids
rule 79   primary_expression -> abstract_expression
rule 80   abstract_expression -> parenthesis_clause
rule 81   abstract_expression -> '[' expression.opt ']'
rule 82   abstract_expression -> TEMPLATE parenthesis_clause
rule 83   type1_parameters -> parameter_declaration_list ';'
rule 84   type1_parameters -> type1_parameters parameter_declaration_list ';'
rule 85   mark_type1 ->		/* empty */
rule 86   postfix_expression -> primary_expression
rule 87   postfix_expression -> postfix_expression parenthesis_clause mark_type1 '-'
rule 88   postfix_expression -> postfix_expression parenthesis_clause mark_type1 '+' type1_parameters mark '{' error
rule 89   postfix_expression -> postfix_expression parenthesis_clause mark_type1 '+' type1_parameters mark error
rule 90   postfix_expression -> postfix_expression parenthesis_clause mark_type1 '+' error
rule 91   postfix_expression -> postfix_expression '[' expression.opt ']'
rule 92   postfix_expression -> postfix_expression '.' declarator_id
rule 93   postfix_expression -> postfix_expression '.' scoped_pseudo_destructor_id
rule 94   postfix_expression -> postfix_expression ARROW declarator_id
rule 95   postfix_expression -> postfix_expression ARROW scoped_pseudo_destructor_id
rule 96   postfix_expression -> postfix_expression INC
rule 97   postfix_expression -> postfix_expression DEC
rule 98   postfix_expression -> DYNAMIC_CAST '<' type_id '>' '(' expression ')'
rule 99   postfix_expression -> STATIC_CAST '<' type_id '>' '(' expression ')'
rule 100  postfix_expression -> REINTERPRET_CAST '<' type_id '>' '(' expression ')'
rule 101  postfix_expression -> CONST_CAST '<' type_id '>' '(' expression ')'
rule 102  postfix_expression -> TYPEID parameters_clause
rule 103  expression_list.opt ->		/* empty */
rule 104  expression_list.opt -> expression_list
rule 105  expression_list -> assignment_expression
rule 106  expression_list -> expression_list ',' assignment_expression
rule 107  unary_expression -> postfix_expression
rule 108  unary_expression -> INC cast_expression
rule 109  unary_expression -> DEC cast_expression
rule 110  unary_expression -> ptr_operator cast_expression
rule 111  unary_expression -> suffix_decl_specified_scope star_ptr_operator cast_expression
rule 112  unary_expression -> '+' cast_expression
rule 113  unary_expression -> '-' cast_expression
rule 114  unary_expression -> '!' cast_expression
rule 115  unary_expression -> '~' cast_expression
rule 116  unary_expression -> SIZEOF unary_expression
rule 117  unary_expression -> new_expression
rule 118  unary_expression -> global_scope new_expression
rule 119  unary_expression -> delete_expression
rule 120  unary_expression -> global_scope delete_expression
rule 121  delete_expression -> DELETE cast_expression
rule 122  new_expression -> NEW new_type_id new_initializer.opt
rule 123  new_expression -> NEW parameters_clause new_type_id new_initializer.opt
rule 124  new_expression -> NEW parameters_clause
rule 125  new_expression -> NEW parameters_clause parameters_clause new_initializer.opt
rule 126  new_type_id -> type_specifier ptr_operator_seq.opt
rule 127  new_type_id -> type_specifier new_declarator
rule 128  new_type_id -> type_specifier new_type_id
rule 129  new_declarator -> ptr_operator new_declarator
rule 130  new_declarator -> direct_new_declarator
rule 131  direct_new_declarator -> '[' expression ']'
rule 132  direct_new_declarator -> direct_new_declarator '[' constant_expression ']'
rule 133  new_initializer.opt ->		/* empty */
rule 134  new_initializer.opt -> '(' expression_list.opt ')'
rule 135  cast_expression -> unary_expression
rule 136  cast_expression -> abstract_expression cast_expression
rule 137  pm_expression -> cast_expression
rule 138  pm_expression -> pm_expression DOT_STAR cast_expression
rule 139  pm_expression -> pm_expression ARROW_STAR cast_expression
rule 140  multiplicative_expression -> pm_expression
rule 141  multiplicative_expression -> multiplicative_expression star_ptr_operator pm_expression
rule 142  multiplicative_expression -> multiplicative_expression '/' pm_expression
rule 143  multiplicative_expression -> multiplicative_expression '%' pm_expression
rule 144  additive_expression -> multiplicative_expression
rule 145  additive_expression -> additive_expression '+' multiplicative_expression
rule 146  additive_expression -> additive_expression '-' multiplicative_expression
rule 147  shift_expression -> additive_expression
rule 148  shift_expression -> shift_expression SHL additive_expression
rule 149  shift_expression -> shift_expression SHR additive_expression
rule 150  relational_expression -> shift_expression
rule 151  relational_expression -> relational_expression '<' shift_expression
rule 152  relational_expression -> relational_expression '>' shift_expression
rule 153  relational_expression -> relational_expression LE shift_expression
rule 154  relational_expression -> relational_expression GE shift_expression
rule 155  equality_expression -> relational_expression
rule 156  equality_expression -> equality_expression EQ relational_expression
rule 157  equality_expression -> equality_expression NE relational_expression
rule 158  and_expression -> equality_expression
rule 159  and_expression -> and_expression '&' equality_expression
rule 160  exclusive_or_expression -> and_expression
rule 161  exclusive_or_expression -> exclusive_or_expression '^' and_expression
rule 162  inclusive_or_expression -> exclusive_or_expression
rule 163  inclusive_or_expression -> inclusive_or_expression '|' exclusive_or_expression
rule 164  logical_and_expression -> inclusive_or_expression
rule 165  logical_and_expression -> logical_and_expression LOG_AND inclusive_or_expression
rule 166  logical_or_expression -> logical_and_expression
rule 167  logical_or_expression -> logical_or_expression LOG_OR logical_and_expression
rule 168  conditional_expression -> logical_or_expression
rule 169  conditional_expression -> logical_or_expression '?' expression ':' assignment_expression
rule 170  assignment_expression -> conditional_expression
rule 171  assignment_expression -> logical_or_expression assignment_operator assignment_expression
rule 172  assignment_expression -> logical_or_expression '=' braced_initializer
rule 173  assignment_expression -> throw_expression
rule 174  assignment_operator -> '='
rule 175  assignment_operator -> ASS_ADD
rule 176  assignment_operator -> ASS_AND
rule 177  assignment_operator -> ASS_DIV
rule 178  assignment_operator -> ASS_MOD
rule 179  assignment_operator -> ASS_MUL
rule 180  assignment_operator -> ASS_OR
rule 181  assignment_operator -> ASS_SHL
rule 182  assignment_operator -> ASS_SHR
rule 183  assignment_operator -> ASS_SUB
rule 184  assignment_operator -> ASS_XOR
rule 185  expression.opt ->		/* empty */
rule 186  expression.opt -> expression
rule 187  expression -> assignment_expression
rule 188  expression -> expression_list ',' assignment_expression
rule 189  constant_expression -> conditional_expression
rule 190  templated_relational_expression -> shift_expression
rule 191  templated_relational_expression -> templated_relational_expression '<' shift_expression
rule 192  templated_relational_expression -> templated_relational_expression LE shift_expression
rule 193  templated_relational_expression -> templated_relational_expression GE shift_expression
rule 194  templated_equality_expression -> templated_relational_expression
rule 195  templated_equality_expression -> templated_equality_expression EQ templated_relational_expression
rule 196  templated_equality_expression -> templated_equality_expression NE templated_relational_expression
rule 197  templated_and_expression -> templated_equality_expression
rule 198  templated_and_expression -> templated_and_expression '&' templated_equality_expression
rule 199  templated_exclusive_or_expression -> templated_and_expression
rule 200  templated_exclusive_or_expression -> templated_exclusive_or_expression '^' templated_and_expression
rule 201  templated_inclusive_or_expression -> templated_exclusive_or_expression
rule 202  templated_inclusive_or_expression -> templated_inclusive_or_expression '|' templated_exclusive_or_expression
rule 203  templated_logical_and_expression -> templated_inclusive_or_expression
rule 204  templated_logical_and_expression -> templated_logical_and_expression LOG_AND templated_inclusive_or_expression
rule 205  templated_logical_or_expression -> templated_logical_and_expression
rule 206  templated_logical_or_expression -> templated_logical_or_expression LOG_OR templated_logical_and_expression
rule 207  templated_conditional_expression -> templated_logical_or_expression
rule 208  templated_conditional_expression -> templated_logical_or_expression '?' templated_expression ':' templated_assignment_expression
rule 209  templated_assignment_expression -> templated_conditional_expression
rule 210  templated_assignment_expression -> templated_logical_or_expression assignment_operator templated_assignment_expression
rule 211  templated_assignment_expression -> templated_throw_expression
rule 212  templated_expression -> templated_assignment_expression
rule 213  templated_expression -> templated_expression_list ',' templated_assignment_expression
rule 214  templated_expression_list -> templated_assignment_expression
rule 215  templated_expression_list -> templated_expression_list ',' templated_assignment_expression
rule 216  looping_statement -> start_search looped_statement
rule 217  looped_statement -> statement
rule 218  looped_statement -> advance_search '+' looped_statement
rule 219  looped_statement -> advance_search '-'
rule 220  statement -> control_statement
rule 221  statement -> compound_statement
rule 222  statement -> declaration_statement
rule 223  statement -> try_block
rule 224  statement -> AUTO control_statement
rule 225  statement -> AUTO meta_expression_statement
rule 226  control_statement -> labeled_statement
rule 227  control_statement -> selection_statement
rule 228  control_statement -> iteration_statement
rule 229  control_statement -> jump_statement
rule 230  labeled_statement -> identifier_word ':' looping_statement
rule 231  labeled_statement -> CASE constant_expression ':' looping_statement
rule 232  labeled_statement -> DEFAULT ':' looping_statement
rule 233  compound_statement -> '{' statement_seq.opt '}'
rule 234  compound_statement -> '{' statement_seq.opt looping_statement '#' bang error_ecarb
rule 235  statement_seq.opt ->		/* empty */
rule 236  statement_seq.opt -> statement_seq.opt looping_statement
rule 237  statement_seq.opt -> statement_seq.opt looping_statement '#' bang error ';'
rule 238  selection_statement -> IF '(' condition ')' looping_statement
rule 239  selection_statement -> IF '(' condition ')' looping_statement ELSE looping_statement
rule 240  selection_statement -> SWITCH '(' condition ')' looping_statement
rule 241  condition.opt ->		/* empty */
rule 242  condition.opt -> condition
rule 243  condition -> parameter_declaration_list
rule 244  iteration_statement -> WHILE '(' condition ')' looping_statement
rule 245  iteration_statement -> DO looping_statement WHILE '(' expression ')' ';'
rule 246  iteration_statement -> FOR '(' for_init_statement condition.opt ';' expression.opt ')' looping_statement
rule 247  for_init_statement -> simple_declaration
rule 248  jump_statement -> BREAK ';'
rule 249  jump_statement -> CONTINUE ';'
rule 250  jump_statement -> RETURN expression.opt ';'
rule 251  jump_statement -> GOTO identifier ';'
rule 252  declaration_statement -> block_declaration
rule 253  compound_declaration -> '{' nest declaration_seq.opt '}'
rule 254  compound_declaration -> '{' nest declaration_seq.opt util looping_declaration '#' bang error_ecarb
rule 255  declaration_seq.opt ->		/* empty */
rule 256  declaration_seq.opt -> declaration_seq.opt util looping_declaration
rule 257  declaration_seq.opt -> declaration_seq.opt util looping_declaration '#' bang error ';'
rule 258  looping_declaration -> start_search1 looped_declaration
rule 259  looped_declaration -> declaration
rule 260  looped_declaration -> advance_search '+' looped_declaration
rule 261  looped_declaration -> advance_search '-'
rule 262  lined_declaration -> line declaration
rule 263  declaration -> block_declaration
rule 264  declaration -> function_definition
rule 265  declaration -> template_declaration
rule 266  declaration -> explicit_specialization
rule 267  declaration -> specialised_declaration
rule 268  declaration -> accessibility_specifier
rule 269  declaration -> compound_declaration
rule 270  declaration -> meta_control_statement
rule 271  declaration -> AUTO meta_control_statement
rule 272  declaration -> AUTO meta_class_specifier semi
rule 273  declaration -> AUTO meta_expression_statement
rule 274  declaration -> AUTO meta_function_definition
rule 275  declaration -> syntax_macro_definition
rule 276  declaration -> include_declaration semi
rule 277  declaration -> file_dependency_declaration
rule 278  declaration -> file_placement_declaration
rule 279  declaration -> filespace_specifier semi
rule 280  specialised_declaration -> linkage_specification
rule 281  specialised_declaration -> namespace_declaration
rule 282  specialised_declaration -> namespace_definition
rule 283  specialised_declaration -> TEMPLATE specialised_declaration
rule 284  block_declaration -> simple_declaration
rule 285  block_declaration -> specialised_block_declaration
rule 286  specialised_block_declaration -> asm_definition
rule 287  specialised_block_declaration -> namespace_alias_definition
rule 288  specialised_block_declaration -> using_directive
rule 289  specialised_block_declaration -> TEMPLATE specialised_block_declaration
rule 290  simple_declaration -> ';'
rule 291  simple_declaration -> init_declaration ';'
rule 292  simple_declaration -> constructor_head ',' assignment_expression ';'
rule 293  simple_declaration -> init_declarations ';'
rule 294  simple_declaration -> decl_specifier_prefix simple_declaration
rule 295  suffix_built_in_decl_specifier.raw -> built_in_type_specifier
rule 296  suffix_built_in_decl_specifier.raw -> suffix_built_in_decl_specifier.raw built_in_type_specifier
rule 297  suffix_built_in_decl_specifier.raw -> suffix_built_in_decl_specifier.raw decl_specifier_suffix
rule 298  suffix_built_in_decl_specifier -> suffix_built_in_decl_specifier.raw
rule 299  suffix_built_in_decl_specifier -> TEMPLATE suffix_built_in_decl_specifier
rule 300  suffix_named_decl_specifier -> scoped_id
rule 301  suffix_named_decl_specifier -> elaborate_type_specifier
rule 302  suffix_named_decl_specifier -> suffix_named_decl_specifier decl_specifier_suffix
rule 303  suffix_named_decl_specifier.bi -> suffix_named_decl_specifier
rule 304  suffix_named_decl_specifier.bi -> suffix_named_decl_specifier suffix_built_in_decl_specifier.raw
rule 305  suffix_named_decl_specifiers -> suffix_named_decl_specifier.bi
rule 306  suffix_named_decl_specifiers -> suffix_named_decl_specifiers suffix_named_decl_specifier.bi
rule 307  suffix_named_decl_specifiers.sf -> scoped_special_function_id
rule 308  suffix_named_decl_specifiers.sf -> suffix_named_decl_specifiers
rule 309  suffix_named_decl_specifiers.sf -> suffix_named_decl_specifiers scoped_special_function_id
rule 310  suffix_decl_specified_ids -> suffix_built_in_decl_specifier
rule 311  suffix_decl_specified_ids -> suffix_built_in_decl_specifier suffix_named_decl_specifiers.sf
rule 312  suffix_decl_specified_ids -> suffix_named_decl_specifiers.sf
rule 313  suffix_decl_specified_scope -> suffix_named_decl_specifiers SCOPE
rule 314  suffix_decl_specified_scope -> suffix_built_in_decl_specifier suffix_named_decl_specifiers SCOPE
rule 315  suffix_decl_specified_scope -> suffix_built_in_decl_specifier SCOPE
rule 316  decl_specifier_affix -> storage_class_specifier
rule 317  decl_specifier_affix -> function_specifier
rule 318  decl_specifier_affix -> FRIEND
rule 319  decl_specifier_affix -> TYPEDEF
rule 320  decl_specifier_affix -> cv_qualifier
rule 321  decl_specifier_affix -> access_specifier
rule 322  decl_specifier_affix -> USING
rule 323  decl_specifier_suffix -> decl_specifier_affix
rule 324  decl_specifier_suffix -> AUTO
rule 325  decl_specifier_prefix -> decl_specifier_affix
rule 326  decl_specifier_prefix -> TEMPLATE decl_specifier_prefix
rule 327  storage_class_specifier -> REGISTER
rule 328  storage_class_specifier -> STATIC
rule 329  storage_class_specifier -> MUTABLE
rule 330  storage_class_specifier -> EXTERN
rule 331  storage_class_specifier -> '!' STATIC
rule 332  function_specifier -> EXPLICIT
rule 333  function_specifier -> INLINE
rule 334  function_specifier -> VIRTUAL
rule 335  function_specifier -> '!' INLINE
rule 336  function_specifier -> INLINE '/' IMPLEMENTATION
rule 337  function_specifier -> INLINE '/' INTERFACE
rule 338  function_specifier -> '!' VIRTUAL
rule 339  function_specifier -> VIRTUAL '/' PURE
rule 340  type_specifier -> simple_type_specifier
rule 341  type_specifier -> elaborate_type_specifier
rule 342  type_specifier -> cv_qualifier
rule 343  type_specifier -> '!' CONST
rule 344  type_specifier -> '!' VOLATILE
rule 345  elaborate_type_specifier -> class_specifier
rule 346  elaborate_type_specifier -> enum_specifier
rule 347  elaborate_type_specifier -> elaborated_type_specifier
rule 348  elaborate_type_specifier -> TEMPLATE elaborate_type_specifier
rule 349  simple_type_specifier -> scoped_id
rule 350  simple_type_specifier -> built_in_type_specifier
rule 351  built_in_type_specifier -> BuiltInTypeSpecifier
rule 352  elaborated_type_specifier -> elaborated_class_specifier
rule 353  elaborated_type_specifier -> elaborated_enum_specifier
rule 354  elaborated_type_specifier -> TYPENAME scoped_id
rule 355  elaborated_enum_specifier -> ENUM scoped_id
rule 356  enum_specifier -> ENUM scoped_id enumerator_clause
rule 357  enum_specifier -> ENUM enumerator_clause
rule 358  enumerator_clause -> '{' enumerator_list_ecarb
rule 359  enumerator_clause -> '{' enumerator_list enumerator_list_ecarb
rule 360  enumerator_clause -> '{' enumerator_list ',' enumerator_definition_ecarb
rule 361  enumerator_list_ecarb -> '}'
rule 362  enumerator_list_ecarb -> bang error_ecarb
rule 363  enumerator_definition_ecarb -> '}'
rule 364  enumerator_definition_ecarb -> bang error_ecarb
rule 365  enumerator_definition_filler ->		/* empty */
rule 366  enumerator_definition_filler -> bang error ','
rule 367  enumerator_list_head -> enumerator_definition_filler
rule 368  enumerator_list_head -> enumerator_list ',' enumerator_definition_filler
rule 369  enumerator_list -> enumerator_list_head enumerator_definition
rule 370  enumerator_definition -> enumerator
rule 371  enumerator_definition -> enumerator '=' constant_expression
rule 372  enumerator -> identifier
rule 373  namespace_definition -> NAMESPACE scoped_id compound_declaration
rule 374  namespace_definition -> NAMESPACE compound_declaration
rule 375  namespace_alias_definition -> NAMESPACE scoped_id '=' scoped_id ';'
rule 376  namespace_declaration -> NAMESPACE scoped_id ';'
rule 377  using_directive -> USING NAMESPACE scoped_id ';'
rule 378  asm_definition -> ASM '(' string ')' ';'
rule 379  linkage_specification -> EXTERN string looping_declaration
rule 380  init_declarations -> assignment_expression ',' init_declaration
rule 381  init_declarations -> init_declarations ',' init_declaration
rule 382  init_declarations -> init_object_declaration ',' init_declaration
rule 383  init_declarations -> constructor_head ',' bit_field_init_declaration
rule 384  init_declarations -> constructor_head ',' init_object_declaration
rule 385  init_declaration -> assignment_expression
rule 386  init_declaration -> bit_field_init_declaration
rule 387  init_declaration -> init_object_declaration
rule 388  init_object_declaration -> assignment_expression object_statements_clause
rule 389  init_object_declaration -> bit_field_init_declaration object_statements_clause
rule 390  star_ptr_operator -> '*'
rule 391  star_ptr_operator -> star_ptr_operator cv_qualifier
rule 392  nested_ptr_operator -> star_ptr_operator
rule 393  nested_ptr_operator -> id_scope nested_ptr_operator
rule 394  ptr_operator -> '&'
rule 395  ptr_operator -> nested_ptr_operator
rule 396  ptr_operator -> global_scope nested_ptr_operator
rule 397  ptr_operator_seq -> ptr_operator
rule 398  ptr_operator_seq -> ptr_operator ptr_operator_seq
rule 399  ptr_operator_seq.opt ->		/* empty */
rule 400  ptr_operator_seq.opt -> ptr_operator ptr_operator_seq.opt
rule 401  cv_qualifier_seq.opt ->		/* empty */
rule 402  cv_qualifier_seq.opt -> cv_qualifier_seq.opt cv_qualifier
rule 403  cv_qualifier -> CONST
rule 404  cv_qualifier -> VOLATILE
rule 405  type_id -> type_specifier abstract_declarator.opt
rule 406  type_id -> type_specifier type_id
rule 407  abstract_declarator.opt ->		/* empty */
rule 408  abstract_declarator.opt -> ptr_operator abstract_declarator.opt
rule 409  abstract_declarator.opt -> direct_abstract_declarator
rule 410  direct_abstract_declarator.opt ->		/* empty */
rule 411  direct_abstract_declarator.opt -> direct_abstract_declarator
rule 412  direct_abstract_declarator -> direct_abstract_declarator.opt parenthesis_clause
rule 413  direct_abstract_declarator -> direct_abstract_declarator.opt '[' ']'
rule 414  direct_abstract_declarator -> direct_abstract_declarator.opt '[' constant_expression ']'
rule 415  parenthesis_clause -> parameters_clause cv_qualifier_seq.opt
rule 416  parenthesis_clause -> parameters_clause cv_qualifier_seq.opt exception_specification
rule 417  parameters_clause -> '(' parameter_declaration_clause ')'
rule 418  parameter_declaration_clause ->		/* empty */
rule 419  parameter_declaration_clause -> parameter_declaration_list
rule 420  parameter_declaration_clause -> parameter_declaration_list ELLIPSIS
rule 421  parameter_declaration_list -> parameter_declaration
rule 422  parameter_declaration_list -> parameter_declaration_list ',' parameter_declaration
rule 423  abstract_pointer_declaration -> ptr_operator_seq
rule 424  abstract_pointer_declaration -> multiplicative_expression star_ptr_operator ptr_operator_seq.opt
rule 425  abstract_parameter_declaration -> abstract_pointer_declaration
rule 426  abstract_parameter_declaration -> and_expression '&'
rule 427  abstract_parameter_declaration -> and_expression '&' abstract_pointer_declaration
rule 428  special_parameter_declaration -> abstract_parameter_declaration
rule 429  special_parameter_declaration -> abstract_parameter_declaration '=' assignment_expression
rule 430  special_parameter_declaration -> ELLIPSIS
rule 431  parameter_declaration -> assignment_expression
rule 432  parameter_declaration -> special_parameter_declaration
rule 433  parameter_declaration -> decl_specifier_prefix parameter_declaration
rule 434  templated_parameter_declaration -> templated_assignment_expression
rule 435  templated_parameter_declaration -> templated_abstract_declaration
rule 436  templated_parameter_declaration -> templated_abstract_declaration '=' templated_assignment_expression
rule 437  templated_parameter_declaration -> decl_specifier_prefix templated_parameter_declaration
rule 438  templated_abstract_declaration -> abstract_pointer_declaration
rule 439  templated_abstract_declaration -> templated_and_expression '&'
rule 440  templated_abstract_declaration -> templated_and_expression '&' abstract_pointer_declaration
rule 441  function_definition -> ctor_definition
rule 442  function_definition -> func_definition
rule 443  func_definition -> assignment_expression function_try_block
rule 444  func_definition -> assignment_expression function_body
rule 445  func_definition -> decl_specifier_prefix func_definition
rule 446  ctor_definition -> constructor_head function_try_block
rule 447  ctor_definition -> constructor_head function_body
rule 448  ctor_definition -> decl_specifier_prefix ctor_definition
rule 449  constructor_head -> bit_field_init_declaration
rule 450  constructor_head -> constructor_head ',' assignment_expression
rule 451  function_try_block -> TRY function_block handler_seq
rule 452  function_block -> ctor_initializer.opt function_body
rule 453  function_body -> compound_statement
rule 454  initializer_clause -> assignment_expression
rule 455  initializer_clause -> braced_initializer
rule 456  braced_initializer -> '{' initializer_list '}'
rule 457  braced_initializer -> '{' initializer_list ',' '}'
rule 458  braced_initializer -> '{' '}'
rule 459  braced_initializer -> '{' looping_initializer_clause '#' bang error_ecarb
rule 460  braced_initializer -> '{' initializer_list ',' looping_initializer_clause '#' bang error_ecarb
rule 461  initializer_list -> looping_initializer_clause
rule 462  initializer_list -> initializer_list ',' looping_initializer_clause
rule 463  looping_initializer_clause -> start_search looped_initializer_clause
rule 464  looped_initializer_clause -> initializer_clause
rule 465  looped_initializer_clause -> advance_search '+' looped_initializer_clause
rule 466  looped_initializer_clause -> advance_search '-'
rule 467  colon_mark -> ':'
rule 468  elaborated_class_specifier -> class_key scoped_id
rule 469  elaborated_class_specifier -> class_key scoped_id colon_mark error
rule 470  class_specifier_head -> class_key scoped_id colon_mark base_specifier_list '{'
rule 471  class_specifier_head -> class_key ':' base_specifier_list '{'
rule 472  class_specifier_head -> class_key scoped_id '{'
rule 473  class_specifier_head -> class_key '{'
rule 474  class_key -> CLASS
rule 475  class_key -> STRUCT
rule 476  class_key -> UNION
rule 477  class_specifier -> class_specifier_head nest declaration_seq.opt '}'
rule 478  class_specifier -> class_specifier_head nest declaration_seq.opt util looping_declaration '#' bang error_ecarb
rule 479  accessibility_specifier -> access_specifier ':'
rule 480  bit_field_declaration -> assignment_expression ':' bit_field_width
rule 481  bit_field_declaration -> ':' bit_field_width
rule 482  bit_field_width -> logical_or_expression
rule 483  bit_field_width -> logical_or_expression '?' bit_field_width ':' bit_field_width
rule 484  bit_field_init_declaration -> bit_field_declaration
rule 485  bit_field_init_declaration -> bit_field_declaration '=' initializer_clause
rule 486  base_specifier_list -> base_specifier
rule 487  base_specifier_list -> base_specifier_list ',' base_specifier
rule 488  base_specifier -> scoped_id
rule 489  base_specifier -> access_specifier base_specifier
rule 490  base_specifier -> VIRTUAL base_specifier
rule 491  base_specifier -> '!' VIRTUAL base_specifier
rule 492  base_specifier -> AUTO base_specifier
rule 493  base_specifier -> built_in_type_id
rule 494  access_specifier -> PRIVATE
rule 495  access_specifier -> PROTECTED
rule 496  access_specifier -> PUBLIC
rule 497  conversion_function_id -> OPERATOR conversion_type_id
rule 498  conversion_type_id -> type_specifier ptr_operator_seq.opt
rule 499  conversion_type_id -> type_specifier conversion_type_id
rule 500  ctor_initializer.opt ->		/* empty */
rule 501  ctor_initializer.opt -> ctor_initializer
rule 502  ctor_initializer -> ':' mem_initializer_list
rule 503  ctor_initializer -> ':' mem_initializer_list bang error
rule 504  mem_initializer_list -> mem_initializer
rule 505  mem_initializer_list -> mem_initializer_list_head mem_initializer
rule 506  mem_initializer_list_head -> mem_initializer_list ','
rule 507  mem_initializer_list_head -> mem_initializer_list bang error ','
rule 508  mem_initializer_list_head -> mem_initializer_list bang error '#'
rule 509  mem_initializer -> mem_initializer_id '(' expression_list.opt ')'
rule 510  mem_initializer_id -> scoped_id
rule 511  operator_function_id -> OPERATOR operator
rule 512  operator -> NEW
rule 513  operator -> DELETE
rule 514  operator -> '+'
rule 515  operator -> '-'
rule 516  operator -> '*'
rule 517  operator -> '/'
rule 518  operator -> '%'
rule 519  operator -> '^'
rule 520  operator -> '&'
rule 521  operator -> '|'
rule 522  operator -> '~'
rule 523  operator -> '!'
rule 524  operator -> '='
rule 525  operator -> '<'
rule 526  operator -> '>'
rule 527  operator -> ASS_ADD
rule 528  operator -> ASS_SUB
rule 529  operator -> ASS_MUL
rule 530  operator -> ASS_DIV
rule 531  operator -> ASS_MOD
rule 532  operator -> ASS_XOR
rule 533  operator -> ASS_AND
rule 534  operator -> ASS_OR
rule 535  operator -> SHL
rule 536  operator -> SHR
rule 537  operator -> ASS_SHR
rule 538  operator -> ASS_SHL
rule 539  operator -> EQ
rule 540  operator -> NE
rule 541  operator -> LE
rule 542  operator -> GE
rule 543  operator -> LOG_AND
rule 544  operator -> LOG_OR
rule 545  operator -> INC
rule 546  operator -> DEC
rule 547  operator -> ','
rule 548  operator -> ARROW_STAR
rule 549  operator -> ARROW
rule 550  operator -> '(' ')'
rule 551  operator -> '[' ']'
rule 552  template_declaration -> template_parameter_clause declaration
rule 553  template_declaration -> EXPORT template_declaration
rule 554  template_declaration -> decl_specifier_prefix template_declaration
rule 555  template_parameter_clause -> TEMPLATE '<' template_parameter_list '>'
rule 556  template_parameter_list -> template_parameter
rule 557  template_parameter_list -> template_parameter_list ',' template_parameter
rule 558  template_parameter -> simple_type_parameter
rule 559  template_parameter -> simple_type_parameter '=' type_id
rule 560  template_parameter -> templated_type_parameter
rule 561  template_parameter -> templated_type_parameter '=' identifier
rule 562  template_parameter -> templated_parameter_declaration
rule 563  template_parameter -> bang error
rule 564  simple_type_parameter -> CLASS
rule 565  simple_type_parameter -> TYPENAME
rule 566  templated_type_parameter -> template_parameter_clause CLASS
rule 567  templated_type_parameter -> template_parameter_clause CLASS identifier
rule 568  template_id -> TEMPLATE identifier '<' template_argument_list '>'
rule 569  template_id -> TEMPLATE template_id
rule 570  template_argument_list -> template_argument
rule 571  template_argument_list -> template_argument_list ',' template_argument
rule 572  template_argument -> templated_parameter_declaration
rule 573  explicit_specialization -> TEMPLATE '<' '>' declaration
rule 574  explicit_specialization -> decl_specifier_prefix explicit_specialization
rule 575  try_block -> TRY compound_statement handler_seq
rule 576  handler_seq -> handler
rule 577  handler_seq -> handler handler_seq
rule 578  handler -> CATCH '(' exception_declaration ')' compound_statement
rule 579  exception_declaration -> parameter_declaration
rule 580  throw_expression -> THROW
rule 581  throw_expression -> THROW assignment_expression
rule 582  templated_throw_expression -> THROW
rule 583  templated_throw_expression -> THROW templated_assignment_expression
rule 584  exception_specification -> THROW '(' ')'
rule 585  exception_specification -> THROW '(' type_id_list ')'
rule 586  type_id_list -> type_id
rule 587  type_id_list -> type_id_list ',' type_id
rule 588  primary_tree_expression -> meta_scoped_id
rule 589  primary_tree_expression -> '(' tree_expression ')'
rule 590  postfix_tree_expression -> primary_tree_expression
rule 591  postfix_tree_expression -> primary_tree_expression NOAUTO
rule 592  postfix_tree_expression -> postfix_tree_expression '[' ']'
rule 593  postfix_tree_expression -> postfix_tree_expression '[' constant_expression ']'
rule 594  postfix_tree_expression -> postfix_tree_expression '(' tree_argument_list.opt ')'
rule 595  postfix_tree_expression -> postfix_tree_expression '.' scoped_id
rule 596  postfix_tree_expression -> postfix_tree_expression ARROW scoped_id
rule 597  tree_expression -> postfix_tree_expression
rule 598  tree_expression -> '*' tree_expression
rule 599  tree_argument_list.opt -> tree_arguments.head
rule 600  tree_argument_list.opt -> tree_arguments.head ',' tree_argument_list.opt
rule 601  tree_argument_list.opt -> tree_argument.ctors
rule 602  tree_argument.ctors -> constructor_head
rule 603  tree_argument.ctors -> decl_specifier_prefix tree_argument.ctors
rule 604  tree_arguments.head ->		/* empty */
rule 605  tree_arguments.head -> tree_argument.most
rule 606  tree_arguments.head -> assignment_expression
rule 607  tree_arguments.head -> func_definition
rule 608  tree_arguments.head -> tree_argument.ctors_comma_most
rule 609  tree_argument.ctors_comma_most -> constructor_head ',' tree_argument.most
rule 610  tree_argument.ctors_comma_most -> decl_specifier_prefix tree_argument.ctors_comma_most
rule 611  tree_argument.most -> terminated_tree_argument
rule 612  tree_argument.most -> ctor_definition
rule 613  tree_argument.most -> unterminated_tree_argument.most
rule 614  tree_argument.most -> unterminated_tree_argument.most ';'
rule 615  tree_argument.most -> tree_argument.misc
rule 616  tree_argument.most -> tree_argument.misc ';'
rule 617  tree_argument.misc -> decl_specifier_prefix
rule 618  tree_argument.misc -> init_object_declaration
rule 619  tree_argument.misc -> special_parameter_declaration
rule 620  tree_argument.misc -> decl_specifier_prefix assignment_expression
rule 621  tree_argument.misc -> decl_specifier_prefix tree_argument.misc
rule 622  looping_unterminated_tree_argument -> start_search looped_unterminated_tree_argument
rule 623  looped_unterminated_tree_argument -> unterminated_tree_argument
rule 624  looped_unterminated_tree_argument -> advance_search '+' looped_unterminated_tree_argument
rule 625  looping_tree_statement -> start_search looped_tree_statement
rule 626  looped_tree_statement -> tree_statement
rule 627  looped_tree_statement -> advance_search '+' looped_tree_statement
rule 628  looped_tree_statement -> advance_search '-'
rule 629  tree_statement -> ';'
rule 630  tree_statement -> terminated_tree_argument
rule 631  tree_statement -> unterminated_tree_argument ';'
rule 632  tree_statement -> function_definition
rule 633  compound_tree_statement -> '{' tree_statement_seq.opt '}'
rule 634  compound_tree_statement -> '{' tree_statement_seq.opt looping_unterminated_tree_argument '}'
rule 635  compound_tree_statement -> '{' tree_statement_seq.opt looping_unterminated_tree_argument '#' bang error_ecarb
rule 636  compound_tree_statement -> '{' tree_statement_seq.opt looping_tree_statement '#' bang error_ecarb
rule 637  tree_statement_seq.opt ->		/* empty */
rule 638  tree_statement_seq.opt -> tree_statement_seq.opt looping_tree_statement
rule 639  tree_statement_seq.opt -> tree_statement_seq.opt looping_tree_statement '#' bang error ';'
rule 640  terminated_tree_argument -> asm_definition
rule 641  terminated_tree_argument -> compound_tree_statement
rule 642  terminated_tree_argument -> explicit_specialization
rule 643  terminated_tree_argument -> file_dependency_declaration
rule 644  terminated_tree_argument -> file_placement_declaration
rule 645  terminated_tree_argument -> include_declaration semi
rule 646  terminated_tree_argument -> iteration_statement
rule 647  terminated_tree_argument -> labeled_statement
rule 648  terminated_tree_argument -> linkage_specification
rule 649  terminated_tree_argument -> namespace_alias_definition
rule 650  terminated_tree_argument -> namespace_declaration
rule 651  terminated_tree_argument -> namespace_definition
rule 652  terminated_tree_argument -> selection_statement
rule 653  terminated_tree_argument -> template_declaration
rule 654  terminated_tree_argument -> using_directive
rule 655  terminated_tree_argument -> AUTO meta_control_statement
rule 656  terminated_tree_argument -> AUTO meta_expression_statement
rule 657  terminated_tree_argument -> AUTO meta_function_definition
rule 658  terminated_tree_argument -> OPERATOR ';'
rule 659  unterminated_tree_argument -> unterminated_tree_argument.most
rule 660  unterminated_tree_argument -> simple_tree_declaration
rule 661  unterminated_tree_argument.most -> accessibility_specifier
rule 662  unterminated_tree_argument.most -> filespace_specifier
rule 663  unterminated_tree_argument.most -> function_try_block
rule 664  unterminated_tree_argument.most -> handler_seq
rule 665  unterminated_tree_argument.most -> AUTO meta_class_specifier
rule 666  unterminated_tree_argument.most -> simple_type_parameter
rule 667  unterminated_tree_argument.most -> reserved_id
rule 668  unterminated_tree_argument.most -> token.punct
rule 669  unterminated_tree_argument.most -> AUTO
rule 670  unterminated_tree_argument.most -> ENUM
rule 671  unterminated_tree_argument.most -> NAMESPACE
rule 672  unterminated_tree_argument.most -> STRUCT
rule 673  unterminated_tree_argument.most -> TEMPLATE
rule 674  unterminated_tree_argument.most -> UNION
rule 675  reserved_id -> ASM
rule 676  reserved_id -> BREAK
rule 677  reserved_id -> CASE
rule 678  reserved_id -> CONST_CAST
rule 679  reserved_id -> CONTINUE
rule 680  reserved_id -> DEFAULT
rule 681  reserved_id -> DELETE
rule 682  reserved_id -> DYNAMIC_CAST
rule 683  reserved_id -> ELSE
rule 684  reserved_id -> FOR
rule 685  reserved_id -> GOTO
rule 686  reserved_id -> IF
rule 687  reserved_id -> NEW
rule 688  reserved_id -> REINTERPRET_CAST
rule 689  reserved_id -> RETURN
rule 690  reserved_id -> SIZEOF
rule 691  reserved_id -> STATIC_CAST
rule 692  reserved_id -> SWITCH
rule 693  reserved_id -> TRY
rule 694  reserved_id -> TYPEID
rule 695  reserved_id -> WHILE
rule 696  reserved_id -> EXPORT
rule 697  token.punct -> SCOPE
rule 698  token.punct -> SHL
rule 699  token.punct -> SHR
rule 700  token.punct -> EQ
rule 701  token.punct -> NE
rule 702  token.punct -> LE
rule 703  token.punct -> GE
rule 704  token.punct -> LOG_AND
rule 705  token.punct -> LOG_OR
rule 706  token.punct -> INC
rule 707  token.punct -> DEC
rule 708  token.punct -> ARROW
rule 709  token.punct -> ARROW_STAR
rule 710  token.punct -> DOT_STAR
rule 711  token.punct -> ASS_ADD
rule 712  token.punct -> ASS_AND
rule 713  token.punct -> ASS_DIV
rule 714  token.punct -> ASS_MOD
rule 715  token.punct -> ASS_MUL
rule 716  token.punct -> ASS_OR
rule 717  token.punct -> ASS_SHL
rule 718  token.punct -> ASS_SHR
rule 719  token.punct -> ASS_SUB
rule 720  token.punct -> ASS_XOR
rule 721  token.punct -> '['
rule 722  token.punct -> ']'
rule 723  token.punct -> ':'
rule 724  token.punct -> '?'
rule 725  token.punct -> '.'
rule 726  token.punct -> '+'
rule 727  token.punct -> '-'
rule 728  token.punct -> '%'
rule 729  token.punct -> '^'
rule 730  token.punct -> '|'
rule 731  token.punct -> '~'
rule 732  token.punct -> '!'
rule 733  token.punct -> '='
rule 734  token.punct -> '<'
rule 735  token.punct -> '>'
rule 736  token.punct -> '\''
rule 737  token.punct -> '"'
rule 738  token.punct -> '\\'
rule 739  token.punct -> '@'
rule 740  token.punct -> '$'
rule 741  simple_tree_declaration -> decl_specifier_prefix
rule 742  simple_tree_declaration -> init_declaration
rule 743  simple_tree_declaration -> constructor_head ',' assignment_expression
rule 744  simple_tree_declaration -> init_declarations
rule 745  simple_tree_declaration -> special_parameter_declaration
rule 746  simple_tree_declaration -> decl_specifier_prefix simple_tree_declaration
rule 747  object_statements_clause -> ':' '{' object_statement_seq.opt '}'
rule 748  object_statements_clause -> ':' '{' object_statement_seq.opt looping_object_statement '#' bang error_ecarb
rule 749  object_statement_seq.opt ->		/* empty */
rule 750  object_statement_seq.opt -> object_statement_seq.opt looping_object_statement
rule 751  object_statement_seq.opt -> object_statement_seq.opt looping_object_statement '#' bang error ';'
rule 752  looping_object_statement -> start_search looped_object_statement
rule 753  looped_object_statement -> object_statement
rule 754  looped_object_statement -> advance_search '+' looped_object_statement
rule 755  looped_object_statement -> advance_search '-'
rule 756  object_statement -> ';'
rule 757  object_statement -> function_used_block
rule 758  object_statement -> '=' initializer_clause ';'
rule 759  object_statement -> '(' expression_list ')' ';'
rule 760  object_statement -> file_dependency_declaration
rule 761  object_statement -> file_placement_declaration
rule 762  object_statement -> filespace_specifier semi
rule 763  object_statement -> meta_control_statement
rule 764  object_statement -> AUTO meta_control_statement
rule 765  object_statement -> AUTO meta_expression_statement
rule 766  object_statement -> AUTO meta_function_definition
rule 767  object_statement -> derived_clause object_statement
rule 768  object_statement -> derived_clause ':' '{' object_statement_seq.opt '}'
rule 769  object_statement -> derived_clause ':' '{' object_statement_seq.opt looping_object_statement '#' bang error '#'
rule 770  function_used_block -> function_block
rule 771  function_used_block -> function_try_block
rule 772  function_used_block -> ctor_initializer ';'
rule 773  function_used_block -> USING file_id_list function_used_block
rule 774  function_used_block -> segment function_used_block
rule 775  segment -> BODY
rule 776  segment -> ENTRY
rule 777  segment -> EXIT
rule 778  segment -> POST
rule 779  segment -> PRE
rule 780  derived_clause -> DERIVED '(' meta_conditional_expression ')'
rule 781  meta_id -> id
rule 782  meta_id -> meta_simple_type
rule 783  meta_id -> AUTO
rule 784  meta_scope -> meta_id SCOPE
rule 785  meta_nested_id -> meta_id
rule 786  meta_nested_id -> meta_scope '~' meta_id
rule 787  meta_nested_id -> meta_scope meta_nested_id
rule 788  meta_scoped_id -> meta_nested_id
rule 789  meta_scoped_id -> global_scope meta_nested_id
rule 790  meta_class_specifier -> meta_class_key meta_nested_id compound_declaration
rule 791  meta_class_specifier -> meta_class_key meta_nested_id ':' base_specifier_list compound_declaration
rule 792  meta_class_key -> class_key
rule 793  meta_class_key -> NAMESPACE
rule 794  meta_non_class_key -> ENUM
rule 795  meta_non_class_key -> TYPEDEF
rule 796  meta_non_class_key -> TYPENAME
rule 797  meta_non_class_key -> USING
rule 798  meta_non_class_key -> built_in_type_id
rule 799  meta_simple_type -> meta_class_key
rule 800  meta_simple_type -> meta_non_class_key
rule 801  meta_type -> MetaType
rule 802  meta_type -> meta_simple_type
rule 803  meta_function_definition -> meta_fn_postfix_expression compound_tree_statement
rule 804  meta_function_definition -> '~' meta_fn_postfix_expression compound_tree_statement
rule 805  meta_function_definition -> CONST meta_function_definition
rule 806  meta_function_definition -> STATIC meta_function_definition
rule 807  meta_function_definition -> '!' STATIC meta_function_definition
rule 808  meta_control_statement -> line meta_control_statement1
rule 809  meta_control_statement1 -> CASE constant_expression ':' lined_declaration
rule 810  meta_control_statement1 -> DEFAULT ':' lined_declaration
rule 811  meta_control_statement1 -> DO lined_declaration WHILE '(' expression ')' semi
rule 812  meta_control_statement1 -> IF '(' condition ')' lined_declaration
rule 813  meta_control_statement1 -> IF '(' condition ')' lined_declaration ELSE lined_declaration
rule 814  meta_control_statement1 -> SWITCH '(' expression ')' lined_declaration
rule 815  meta_control_statement1 -> WHILE '(' condition ')' lined_declaration
rule 816  meta_control_statement1 -> FOR '(' for_init_statement condition.opt ';' expression.opt ')' lined_declaration
rule 817  meta_control_statement1 -> jump_statement
rule 818  meta_primary_head -> meta_scoped_id
rule 819  meta_primary_head -> MetaType meta_nested_id
rule 820  meta_primary_head -> meta_non_class_key meta_nested_id
rule 821  meta_primary_id -> meta_primary_head
rule 822  meta_primary_id -> meta_class_key meta_nested_id
rule 823  meta_primary_expression -> literal
rule 824  meta_primary_expression -> THIS
rule 825  meta_primary_expression -> meta_primary_id
rule 826  meta_primary_expression -> '(' tree_argument_list.opt ')'
rule 827  meta_fn_postfix_expression -> meta_postfix_expression '(' tree_argument_list.opt ')'
rule 828  meta_fn_postfix_expression -> meta_postfix_expression '[' ']'
rule 829  meta_postfix_expression -> meta_primary_expression
rule 830  meta_postfix_expression -> meta_fn_postfix_expression
rule 831  meta_postfix_expression -> meta_postfix_expression '[' expression ']'
rule 832  meta_postfix_expression -> meta_postfix_expression '.' declarator_id
rule 833  meta_postfix_expression -> meta_postfix_expression ARROW declarator_id
rule 834  meta_postfix_expression -> meta_postfix_expression INC
rule 835  meta_postfix_expression -> meta_postfix_expression DEC
rule 836  meta_unary_expression -> meta_postfix_expression
rule 837  meta_unary_expression -> INC meta_cast_expression
rule 838  meta_unary_expression -> DEC meta_cast_expression
rule 839  meta_unary_expression -> star_ptr_operator meta_cast_expression
rule 840  meta_unary_expression -> '&' meta_cast_expression
rule 841  meta_unary_expression -> '+' meta_cast_expression
rule 842  meta_unary_expression -> '-' meta_cast_expression
rule 843  meta_unary_expression -> '!' meta_cast_expression
rule 844  meta_unary_expression -> '~' meta_cast_expression
rule 845  meta_unary_expression -> SIZEOF unary_expression
rule 846  meta_cast_expression -> meta_unary_expression
rule 847  meta_pm_expression -> meta_cast_expression
rule 848  meta_multiplicative_expression -> meta_pm_expression
rule 849  meta_multiplicative_expression -> meta_multiplicative_expression star_ptr_operator meta_pm_expression
rule 850  meta_multiplicative_expression -> meta_multiplicative_expression '/' meta_pm_expression
rule 851  meta_multiplicative_expression -> meta_multiplicative_expression '%' meta_pm_expression
rule 852  meta_additive_expression -> meta_multiplicative_expression
rule 853  meta_additive_expression -> meta_additive_expression '+' meta_multiplicative_expression
rule 854  meta_additive_expression -> meta_additive_expression '-' meta_multiplicative_expression
rule 855  meta_shift_expression -> meta_additive_expression
rule 856  meta_shift_expression -> meta_shift_expression SHL meta_additive_expression
rule 857  meta_shift_expression -> meta_shift_expression SHR meta_additive_expression
rule 858  meta_relational_expression -> meta_shift_expression
rule 859  meta_relational_expression -> meta_relational_expression '<' meta_shift_expression
rule 860  meta_relational_expression -> meta_relational_expression '>' meta_shift_expression
rule 861  meta_relational_expression -> meta_relational_expression LE meta_shift_expression
rule 862  meta_relational_expression -> meta_relational_expression GE meta_shift_expression
rule 863  meta_equality_expression -> meta_relational_expression
rule 864  meta_equality_expression -> meta_equality_expression EQ meta_relational_expression
rule 865  meta_equality_expression -> meta_equality_expression NE meta_relational_expression
rule 866  meta_and_expression -> meta_equality_expression
rule 867  meta_and_expression -> meta_and_expression '&' meta_equality_expression
rule 868  meta_exclusive_or_expression -> meta_and_expression
rule 869  meta_exclusive_or_expression -> meta_exclusive_or_expression '^' meta_and_expression
rule 870  meta_inclusive_or_expression -> meta_exclusive_or_expression
rule 871  meta_inclusive_or_expression -> meta_inclusive_or_expression '|' meta_exclusive_or_expression
rule 872  meta_logical_and_expression -> meta_inclusive_or_expression
rule 873  meta_logical_and_expression -> meta_logical_and_expression LOG_AND meta_inclusive_or_expression
rule 874  meta_logical_or_expression -> meta_logical_and_expression
rule 875  meta_logical_or_expression -> meta_logical_or_expression LOG_OR meta_logical_and_expression
rule 876  meta_conditional_expression -> meta_logical_or_expression
rule 877  meta_conditional_expression -> meta_logical_or_expression '?' meta_conditional_expression ':' meta_conditional_expression
rule 878  meta_expression_statement -> meta_conditional_expression semi
rule 879  meta_expression_statement -> meta_primary_head object_statements_clause semi
rule 880  meta_expression_statement -> meta_class_key meta_nested_id object_statements_clause semi
rule 881  meta_expression_statement -> meta_postfix_expression '(' tree_argument_list.opt ')' object_statements_clause semi
rule 882  meta_expression_statement -> meta_postfix_expression '[' ']' object_statements_clause semi
rule 883  meta_expression_statement -> meta_postfix_expression '[' expression ']' object_statements_clause semi
rule 884  meta_expression_statement -> meta_logical_or_expression assignment_operator line tree_statement
rule 885  meta_expression_statement -> CONST meta_expression_statement
rule 886  meta_expression_statement -> STATIC meta_expression_statement
rule 887  meta_expression_statement -> '!' STATIC meta_expression_statement
rule 888  syntax_macro_definition -> EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' compound_tree_statement
rule 889  syntax_macro_definition -> EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' '[' ']' compound_tree_statement
rule 890  syntax_macro_definition -> EXPLICIT AUTO meta_type identifier '(' ')' compound_tree_statement
rule 891  syntax_macro_definition -> EXPLICIT AUTO meta_type identifier '(' ')' '[' ']' compound_tree_statement
rule 892  syntax_macro_parameter_list -> syntax_macro_parameter
rule 893  syntax_macro_parameter_list -> syntax_macro_parameter_list ',' syntax_macro_parameter
rule 894  syntax_macro_parameter -> meta_type identifier
rule 895  syntax_macro_parameter -> meta_type identifier '[' ']'
rule 896  syntax_macro_parameter -> identifier
rule 897  syntax_macro_parameter -> reserved_id
rule 898  syntax_macro_parameter -> token.punct
rule 899  syntax_macro_parameter -> ';'
rule 900  syntax_macro_parameter -> ','
rule 901  syntax_macro_parameter -> '{'
rule 902  syntax_macro_parameter -> '}'
rule 903  syntax_macro_parameter -> '('
rule 904  syntax_macro_parameter -> ')'
rule 905  syntax_macro_parameter -> bang error
rule 906  include_declaration -> USING string
rule 907  include_declaration -> USING '/' INCLUDE string_expr
rule 908  include_declaration -> USING '/' INCLUDE '/' utility string_expr
rule 909  include_declaration -> USING '/' utility string_expr
rule 910  utility -> EMIT
rule 911  utility -> FROZEN
rule 912  utility -> POOL
rule 913  utility -> UTILITY
rule 914  file_dependency_declaration -> using_implementation semi
rule 915  file_dependency_declaration -> using_interface semi
rule 916  using_implementation -> USING '/' IMPLEMENTATION file_use
rule 917  using_implementation -> USING '/' IMPLEMENTATION '=' file_use
rule 918  using_interface -> USING '/' INTERFACE file_use
rule 919  using_interface -> USING '/' INTERFACE '=' file_use
rule 920  file_use -> file_id
rule 921  file_use -> file_entity
rule 922  file_placement_declaration -> export_implementation semi
rule 923  file_placement_declaration -> export_interface semi
rule 924  file_placement_declaration -> export_all semi
rule 925  file_placement_declaration -> EXPORT '/' NOIMPLEMENTATION semi
rule 926  file_placement_declaration -> EXPORT '/' UTILITY semi
rule 927  export_implementation -> EXPORT '/' IMPLEMENTATION implementation_file
rule 928  export_implementation -> EXPORT '/' IMPLEMENTATION '=' implementation_file
rule 929  export_interface -> EXPORT '/' INTERFACE interface_file
rule 930  export_interface -> EXPORT '/' INTERFACE '=' interface_file
rule 931  export_all -> EXPORT '/' ALL interface_file
rule 932  export_all -> EXPORT '/' ALL '=' interface_file
rule 933  implementation_file -> file_id
rule 934  implementation_file -> file_entity
rule 935  interface_file -> file_id
rule 936  interface_file -> file_entity
rule 937  file_name -> string
rule 938  file_name -> file_name '/' INTERFACE
rule 939  file_name -> file_name '/' IMPLEMENTATION
rule 940  file_name -> file_name '/' TEMPLATE
rule 941  file_name -> file_name '/' utility
rule 942  file_name -> file_name '/' GUARD '=' string_expr
rule 943  file_name -> file_name '/' NOGUARD
rule 944  file_name -> file_name '/' PATH '=' string_expr
rule 945  file_name -> file_name '/' PREFIX '=' string_expr
rule 946  file_name -> file_name '/' SUFFIX '=' string_expr
rule 947  file_entity -> declarator_id
rule 948  file_entity -> elaborated_type_specifier
rule 949  file_entity -> NAMESPACE scoped_id
rule 950  file_id -> file_name
rule 951  file_id -> file_entity '/' IMPLEMENTATION
rule 952  file_id -> file_entity '/' INTERFACE
rule 953  file_id_list -> file_id
rule 954  file_id_list -> file_id_list ',' file_id
rule 955  filespace_specifier -> NAMESPACE '/' FILE file_name compound_declaration
rule 956  ecarb -> '}'
rule 957  ecarb -> '#'
rule 958  ecarb -> bang error '}'
rule 959  ecarb -> bang error ')'
rule 960  ecarb -> bang error '#'
rule 961  semi -> ';'
rule 962  semi -> '#'
rule 963  semi -> bang error_semi
rule 964  error_ecarb -> error '}'
rule 965  error_ecarb -> error '#'
rule 966  error_semi -> error ';'
rule 967  error_semi -> error '#'
rule 968  advance_search -> error
rule 969  bang ->		/* empty */
rule 970  line ->		/* empty */
rule 971  mark ->		/* empty */
rule 972  nest ->		/* empty */
rule 973  start_search ->		/* empty */
rule 974  start_search1 ->		/* empty */
rule 975  util ->		/* empty */

Terminals, with rules where they appear

$ (-1)
' ' (32)
'!' (33) 114 331 335 338 343 344 491 523 732 807 843 887
'"' (34) 737
'#' (35) 71 234 237 254 257 459 460 478 508 635 636 639 748 751 769
    957 960 962 965 967
'$' (36) 72 73 74 75 740
'%' (37) 143 518 728 851
'&' (38) 159 198 394 426 427 439 440 520 840 867
'\'' (39) 736
'(' (40) 98 99 100 101 134 238 239 240 244 245 246 378 417 509 550
    578 584 585 589 594 759 780 811 812 813 814 815 816 826 827 881
    888 889 890 891 903
')' (41) 98 99 100 101 134 238 239 240 244 245 246 378 417 509 550
    578 584 585 589 594 759 780 811 812 813 814 815 816 826 827 881
    888 889 890 891 904 959
'*' (42) 390 516 598
'+' (43) 25 26 88 89 90 112 145 218 260 465 514 624 627 726 754 841
    853
',' (44) 106 188 213 215 292 360 366 368 380 381 382 383 384 422 450
    457 460 462 487 506 507 547 557 571 587 600 609 743 893 900 954
'-' (45) 27 87 113 146 219 261 466 515 628 727 755 842 854
'.' (46) 92 93 595 725 832
'/' (47) 142 336 337 339 517 850 907 908 909 916 917 918 919 925 926
    927 928 929 930 931 932 938 939 940 941 942 943 944 945 946 951
    952 955
':' (58) 169 208 230 231 232 467 471 479 480 481 483 502 503 723 747
    748 768 769 791 809 810 877
';' (59) 83 84 237 245 246 248 249 250 251 257 290 291 292 293 375
    376 377 378 614 616 629 631 639 658 751 756 758 759 772 816 899
    961 966
'<' (60) 29 98 99 100 101 151 191 525 555 568 573 734 859
'=' (61) 172 174 371 375 429 436 485 524 559 561 733 758 917 919 928
    930 932 942 944 945 946
'>' (62) 25 26 98 99 100 101 152 526 555 568 573 735 860
'?' (63) 169 208 483 724 877
'@' (64) 739
'[' (91) 81 91 131 132 413 414 551 592 593 721 828 831 882 883 889
    891 895
'\\' (92) 738
']' (93) 81 91 131 132 413 414 551 592 593 722 828 831 882 883 889
    891 895
'^' (94) 161 200 519 729 869
'{' (123) 73 75 88 233 234 253 254 358 359 360 456 457 458 459 460
    470 471 472 473 633 634 635 636 747 748 768 769 901
'|' (124) 163 202 521 730 871
'}' (125) 233 253 361 363 456 457 458 477 633 634 747 768 902 956 958
    964
'~' (126) 37 52 53 115 522 731 786 804 844
error (256) 71 74 75 88 89 90 237 257 366 469 503 507 508 563 639 751
    769 905 958 959 960 964 965 966 967 968
ASM (258) 378 675
AUTO (259) 224 225 271 272 273 274 324 492 655 656 657 665 669 764
    765 766 783 888 889 890 891
BREAK (260) 248 676
CASE (261) 231 677 809
CATCH (262) 578
CLASS (263) 474 564 566 567
CONST (264) 343 403 805 885
CONST_CAST (265) 101 678
CONTINUE (266) 249 679
DEFAULT (267) 232 680 810
DELETE (268) 121 513 681
DO (269) 245 811
DYNAMIC_CAST (270) 98 682
ELSE (271) 239 683 813
ENUM (272) 355 356 357 670 794
EXPLICIT (273) 332 888 889 890 891
EXPORT (274) 553 696 925 926 927 928 929 930 931 932
EXTERN (275) 330 379
FALSE (276) 68
FOR (277) 246 684 816
FRIEND (278) 318
GOTO (279) 251 685
IF (280) 238 239 686 812 813
INLINE (281) 333 335 336 337
MUTABLE (282) 329
NAMESPACE (283) 373 374 375 376 377 671 793 949 955
NEW (284) 122 123 124 125 512 687
OPERATOR (285) 497 511 658
PRIVATE (286) 494
PROTECTED (287) 495
PUBLIC (288) 496
REGISTER (289) 327
REINTERPRET_CAST (290) 100 688
RETURN (291) 250 689
SIZEOF (292) 116 690 845
STATIC (293) 328 331 806 807 886 887
STATIC_CAST (294) 99 691
STRUCT (295) 475 672
SWITCH (296) 240 692 814
TEMPLATE (297) 31 38 41 54 82 283 289 299 326 348 555 568 569 573 673
    940
THIS (298) 77 824
THROW (299) 580 581 582 583 584 585
TRUE (300) 69
TRY (301) 451 575 693
TYPEDEF (302) 319 795
TYPEID (303) 102 694
TYPENAME (304) 354 565 796
UNION (305) 476 674
USING (306) 322 377 773 797 906 907 908 909 916 917 918 919
VIRTUAL (307) 334 338 339 490 491
VOLATILE (308) 344 404
WHILE (309) 244 245 695 811 815
ELLIPSIS (310) 420 430
SCOPE (311) 30 32 52 313 314 315 697 784
SHL (312) 148 535 698 856
SHR (313) 149 536 699 857
EQ (314) 156 195 539 700 864
NE (315) 157 196 540 701 865
LE (316) 153 192 541 702 861
GE (317) 154 193 542 703 862
LOG_AND (318) 165 204 543 704 873
LOG_OR (319) 167 206 544 705 875
INC (320) 96 108 545 706 834 837
DEC (321) 97 109 546 707 835 838
ARROW (322) 94 95 549 596 708 833
ARROW_STAR (323) 139 548 709
DOT_STAR (324) 138 710
ASS_ADD (325) 175 527 711
ASS_AND (326) 176 533 712
ASS_DIV (327) 177 530 713
ASS_MOD (328) 178 531 714
ASS_MUL (329) 179 529 715
ASS_OR (330) 180 534 716
ASS_SHL (331) 181 538 717
ASS_SHR (332) 182 537 718
ASS_SUB (333) 183 528 719
ASS_XOR (334) 184 532 720
BuiltInTypeSpecifier (335) 351
CharacterLiteral (336) 61
Identifier (337) 1
MetaType (338) 2 801 819
NewLine (339)
NumberLiteral (340) 65
StringLiteral (341) 59
TreeLiteral (342) 23 67
ERROR (343)
NIL (344)
RAMMARG (345)
BODY (346) 775
DERIVED (347) 3 780
EMIT (348) 910
ENTRY (349) 776
EXIT (350) 777
FILE (351) 4 955
FROZEN (352) 911
GUARD (353) 5 942
IMPLEMENTATION (354) 6 336 916 917 927 928 939 951
INCLUDE (355) 7 907 908
INTERFACE (356) 8 337 918 919 929 930 938 952
NOGUARD (357) 9 943
NOIMPLEMENTATION (358) 10 925
OVERLOAD (359) 11
PATH (360) 12 944
POOL (361) 912
POST (362) 778
PRE (363) 779
PREFIX (364) 13 945
PURE (365) 14 339
SUFFIX (366) 15 946
UTILITY (367) 913 926
ALL (368) 16 931 932
PLACEHOLDER (369) 17
PLACEMENT (370) 18
NOAUTO (371) 19 591
HASH_BLANK (372)
HASH_DEFINE (373)
HASH_ELIF (374)
HASH_ELSE (375)
HASH_ENDIF (376)
HASH_ERROR (377)
HASH_IF (378)
HASH_IFDEF (379)
HASH_IFNDEF (380)
HASH_INCLUDE (381)
HASH_LINE (382)
HASH_PRAGMA (383)
HASH_UNDEF (384)
HASH_HASH (385)
DI_HASH_HASH (386)
DI_HASH (387)
DI_SQUARE (388)
DI_ERAUQS (389)
DI_ECARB (390)
DEFINED (391)
DO_FUNCTION (392)
MacroId (393)
Punct (394)
Text (395)
SHIFT_THERE (396)
REDUCE_HERE_MOSTLY (397)
REDUCE_HERE (398)
BOOL (399)
CHAR (400)
DOUBLE (401)
FLOAT (402)
INT (403)
LONG (404)
SHORT (405)
SIGNED (406)
UNSIGNED (407)
VOID (408)
WCHAR_T (409)
IntegerLiteral (410) 60
FloatingLiteral (411) 62

Nonterminals, with rules where they appear

identifier_word (188)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
   , on right: 22 230
identifier (189)
    on left: 22 23, on right: 24 25 26 27 251 372 561 567 568 888 889
    890 891 894 895 896
id (190)
    on left: 24 25 26 27 28, on right: 32 33 37 781
template_test (191)
    on left: 29, on right: 25 26 27
global_scope (192)
    on left: 30 31, on right: 31 36 46 58 118 120 396 789
id_scope (193)
    on left: 32, on right: 34 43 44 56 393
nested_id (194)
    on left: 33 34, on right: 34 35 36
scoped_id (195)
    on left: 35 36, on right: 47 300 349 354 355 356 373 375 376 377
    468 469 470 472 488 510 595 596 949
destructor_id (196)
    on left: 37 38, on right: 38 43 49
special_function_id (197)
    on left: 39 40 41, on right: 41 42
nested_special_function_id (198)
    on left: 42 43 44, on right: 44 45 46
scoped_special_function_id (199)
    on left: 45 46, on right: 48 307 309
declarator_id (200)
    on left: 47 48 49, on right: 92 94 832 833 947
built_in_type_id (201)
    on left: 50 51, on right: 51 52 53 493 798
pseudo_destructor_id (202)
    on left: 52 53 54, on right: 54 55
nested_pseudo_destructor_id (203)
    on left: 55 56, on right: 56 57
scoped_pseudo_destructor_id (204)
    on left: 57 58, on right: 58 93 95
string (205)
    on left: 59, on right: 63 66 378 379 906 937
literal (206)
    on left: 60 61 62 63 64 65, on right: 76 823
string_expr (207)
    on left: 66 67, on right: 907 908 909 942 944 945 946
boolean_literal (208)
    on left: 68 69, on right: 64
translation_unit (209)
    on left: 70 71 72 73 74 75
primary_expression (210)
    on left: 76 77 78 79, on right: 86
abstract_expression (211)
    on left: 80 81 82, on right: 79 136
type1_parameters (212)
    on left: 83 84, on right: 84 88 89
mark_type1 (213)
    on left: 85, on right: 87 88 89 90
postfix_expression (214)
    on left: 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
   , on right: 87 88 89 90 91 92 93 94 95 96 97 107
expression_list.opt (215)
    on left: 103 104, on right: 134 509
expression_list (216)
    on left: 105 106, on right: 104 106 188 759
unary_expression (217)
    on left: 107 108 109 110 111 112 113 114 115 116 117 118 119 120
   , on right: 116 135 845
delete_expression (218)
    on left: 121, on right: 119 120
new_expression (219)
    on left: 122 123 124 125, on right: 117 118
new_type_id (220)
    on left: 126 127 128, on right: 122 123 128
new_declarator (221)
    on left: 129 130, on right: 127 129
direct_new_declarator (222)
    on left: 131 132, on right: 130 132
new_initializer.opt (223)
    on left: 133 134, on right: 122 123 125
cast_expression (224)
    on left: 135 136, on right: 108 109 110 111 112 113 114 115 121
    136 137 138 139
pm_expression (225)
    on left: 137 138 139, on right: 138 139 140 141 142 143
multiplicative_expression (226)
    on left: 140 141 142 143, on right: 141 142 143 144 145 146 424
additive_expression (227)
    on left: 144 145 146, on right: 145 146 147 148 149
shift_expression (228)
    on left: 147 148 149, on right: 148 149 150 151 152 153 154 190
    191 192 193
relational_expression (229)
    on left: 150 151 152 153 154, on right: 151 152 153 154 155 156
    157
equality_expression (230)
    on left: 155 156 157, on right: 156 157 158 159
and_expression (231)
    on left: 158 159, on right: 159 160 161 426 427
exclusive_or_expression (232)
    on left: 160 161, on right: 161 162 163
inclusive_or_expression (233)
    on left: 162 163, on right: 163 164 165
logical_and_expression (234)
    on left: 164 165, on right: 165 166 167
logical_or_expression (235)
    on left: 166 167, on right: 167 168 169 171 172 482 483
conditional_expression (236)
    on left: 168 169, on right: 170 189
assignment_expression (237)
    on left: 170 171 172 173, on right: 105 106 169 171 187 188 292
    380 385 388 429 431 443 444 450 454 480 581 606 620 743
assignment_operator (238)
    on left: 174 175 176 177 178 179 180 181 182 183 184,
    on right: 171 210 884
expression.opt (239)
    on left: 185 186, on right: 81 91 246 250 816
expression (240)
    on left: 187 188, on right: 98 99 100 101 131 169 186 245 811 814
    831 883
constant_expression (241)
    on left: 189, on right: 132 231 371 414 593 809
templated_relational_expression (242)
    on left: 190 191 192 193, on right: 191 192 193 194 195 196
templated_equality_expression (243)
    on left: 194 195 196, on right: 195 196 197 198
templated_and_expression (244)
    on left: 197 198, on right: 198 199 200 439 440
templated_exclusive_or_expression (245)
    on left: 199 200, on right: 200 201 202
templated_inclusive_or_expression (246)
    on left: 201 202, on right: 202 203 204
templated_logical_and_expression (247)
    on left: 203 204, on right: 204 205 206
templated_logical_or_expression (248)
    on left: 205 206, on right: 206 207 208 210
templated_conditional_expression (249)
    on left: 207 208, on right: 209
templated_assignment_expression (250)
    on left: 209 210 211, on right: 208 210 212 213 214 215 434 436
    583
templated_expression (251)
    on left: 212 213, on right: 208
templated_expression_list (252)
    on left: 214 215, on right: 213 215
looping_statement (253)
    on left: 216, on right: 230 231 232 234 236 237 238 239 240 244
    245 246
looped_statement (254)
    on left: 217 218 219, on right: 216 218
statement (255)
    on left: 220 221 222 223 224 225, on right: 217
control_statement (256)
    on left: 226 227 228 229, on right: 220 224
labeled_statement (257)
    on left: 230 231 232, on right: 226 647
compound_statement (258)
    on left: 233 234, on right: 221 453 575 578
statement_seq.opt (259)
    on left: 235 236 237, on right: 233 234 236 237
selection_statement (260)
    on left: 238 239 240, on right: 227 652
condition.opt (261)
    on left: 241 242, on right: 246 816
condition (262)
    on left: 243, on right: 238 239 240 242 244 812 813 815
iteration_statement (263)
    on left: 244 245 246, on right: 228 646
for_init_statement (264)
    on left: 247, on right: 246 816
jump_statement (265)
    on left: 248 249 250 251, on right: 229 817
declaration_statement (266)
    on left: 252, on right: 222
compound_declaration (267)
    on left: 253 254, on right: 269 373 374 790 791 955
declaration_seq.opt (268)
    on left: 255 256 257, on right: 70 71 253 254 256 257 477 478
looping_declaration (269)
    on left: 258, on right: 71 254 256 257 379 478
looped_declaration (270)
    on left: 259 260 261, on right: 258 260
lined_declaration (271)
    on left: 262, on right: 809 810 811 812 813 814 815 816
declaration (272)
    on left: 263 264 265 266 267 268 269 270 271 272 273 274 275 276
    277 278 279, on right: 259 262 552 573
specialised_declaration (273)
    on left: 280 281 282 283, on right: 267 283
block_declaration (274)
    on left: 284 285, on right: 252 263
specialised_block_declaration (275)
    on left: 286 287 288 289, on right: 285 289
simple_declaration (276)
    on left: 290 291 292 293 294, on right: 247 284 294
suffix_built_in_decl_specifier.raw (277)
    on left: 295 296 297, on right: 296 297 298 304
suffix_built_in_decl_specifier (278)
    on left: 298 299, on right: 299 310 311 314 315
suffix_named_decl_specifier (279)
    on left: 300 301 302, on right: 302 303 304
suffix_named_decl_specifier.bi (280)
    on left: 303 304, on right: 305 306
suffix_named_decl_specifiers (281)
    on left: 305 306, on right: 306 308 309 313 314
suffix_named_decl_specifiers.sf (282)
    on left: 307 308 309, on right: 311 312
suffix_decl_specified_ids (283)
    on left: 310 311 312, on right: 78
suffix_decl_specified_scope (284)
    on left: 313 314 315, on right: 111
decl_specifier_affix (285)
    on left: 316 317 318 319 320 321 322, on right: 323 325
decl_specifier_suffix (286)
    on left: 323 324, on right: 297 302
decl_specifier_prefix (287)
    on left: 325 326, on right: 294 326 433 437 445 448 554 574 603
    610 617 620 621 741 746
storage_class_specifier (288)
    on left: 327 328 329 330 331, on right: 316
function_specifier (289)
    on left: 332 333 334 335 336 337 338 339, on right: 317
type_specifier (290)
    on left: 340 341 342 343 344, on right: 126 127 128 405 406 498
    499
elaborate_type_specifier (291)
    on left: 345 346 347 348, on right: 301 341 348
simple_type_specifier (292)
    on left: 349 350, on right: 340
built_in_type_specifier (293)
    on left: 351, on right: 50 51 295 296 350
elaborated_type_specifier (294)
    on left: 352 353 354, on right: 347 948
elaborated_enum_specifier (295)
    on left: 355, on right: 353
enum_specifier (296)
    on left: 356 357, on right: 346
enumerator_clause (297)
    on left: 358 359 360, on right: 356 357
enumerator_list_ecarb (298)
    on left: 361 362, on right: 358 359
enumerator_definition_ecarb (299)
    on left: 363 364, on right: 360
enumerator_definition_filler (300)
    on left: 365 366, on right: 367 368
enumerator_list_head (301)
    on left: 367 368, on right: 369
enumerator_list (302)
    on left: 369, on right: 359 360 368
enumerator_definition (303)
    on left: 370 371, on right: 369
enumerator (304)
    on left: 372, on right: 370 371
namespace_definition (305)
    on left: 373 374, on right: 282 651
namespace_alias_definition (306)
    on left: 375, on right: 287 649
namespace_declaration (307)
    on left: 376, on right: 281 650
using_directive (308)
    on left: 377, on right: 288 654
asm_definition (309)
    on left: 378, on right: 286 640
linkage_specification (310)
    on left: 379, on right: 280 648
init_declarations (311)
    on left: 380 381 382 383 384, on right: 293 381 744
init_declaration (312)
    on left: 385 386 387, on right: 291 380 381 382 742
init_object_declaration (313)
    on left: 388 389, on right: 382 384 387 618
star_ptr_operator (314)
    on left: 390 391, on right: 111 141 391 392 424 839 849
nested_ptr_operator (315)
    on left: 392 393, on right: 393 395 396
ptr_operator (316)
    on left: 394 395 396, on right: 110 129 397 398 400 408
ptr_operator_seq (317)
    on left: 397 398, on right: 398 423
ptr_operator_seq.opt (318)
    on left: 399 400, on right: 126 400 424 498
cv_qualifier_seq.opt (319)
    on left: 401 402, on right: 402 415 416
cv_qualifier (320)
    on left: 403 404, on right: 320 342 391 402
type_id (321)
    on left: 405 406, on right: 98 99 100 101 406 559 586 587
abstract_declarator.opt (322)
    on left: 407 408 409, on right: 405 408
direct_abstract_declarator.opt (323)
    on left: 410 411, on right: 412 413 414
direct_abstract_declarator (324)
    on left: 412 413 414, on right: 409 411
parenthesis_clause (325)
    on left: 415 416, on right: 80 82 87 88 89 90 412
parameters_clause (326)
    on left: 417, on right: 102 123 124 125 415 416
parameter_declaration_clause (327)
    on left: 418 419 420, on right: 417
parameter_declaration_list (328)
    on left: 421 422, on right: 83 84 243 419 420 422
abstract_pointer_declaration (329)
    on left: 423 424, on right: 425 427 438 440
abstract_parameter_declaration (330)
    on left: 425 426 427, on right: 428 429
special_parameter_declaration (331)
    on left: 428 429 430, on right: 432 619 745
parameter_declaration (332)
    on left: 431 432 433, on right: 421 422 433 579
templated_parameter_declaration (333)
    on left: 434 435 436 437, on right: 437 562 572
templated_abstract_declaration (334)
    on left: 438 439 440, on right: 435 436
function_definition (335)
    on left: 441 442, on right: 264 632
func_definition (336)
    on left: 443 444 445, on right: 442 445 607
ctor_definition (337)
    on left: 446 447 448, on right: 441 448 612
constructor_head (338)
    on left: 449 450, on right: 292 383 384 446 447 450 602 609 743
function_try_block (339)
    on left: 451, on right: 443 446 663 771
function_block (340)
    on left: 452, on right: 451 770
function_body (341)
    on left: 453, on right: 444 447 452
initializer_clause (342)
    on left: 454 455, on right: 464 485 758
braced_initializer (343)
    on left: 456 457 458 459 460, on right: 172 455
initializer_list (344)
    on left: 461 462, on right: 456 457 460 462
looping_initializer_clause (345)
    on left: 463, on right: 459 460 461 462
looped_initializer_clause (346)
    on left: 464 465 466, on right: 463 465
colon_mark (347)
    on left: 467, on right: 469 470
elaborated_class_specifier (348)
    on left: 468 469, on right: 352
class_specifier_head (349)
    on left: 470 471 472 473, on right: 477 478
class_key (350)
    on left: 474 475 476, on right: 468 469 470 471 472 473 792
class_specifier (351)
    on left: 477 478, on right: 345
accessibility_specifier (352)
    on left: 479, on right: 268 661
bit_field_declaration (353)
    on left: 480 481, on right: 484 485
bit_field_width (354)
    on left: 482 483, on right: 480 481 483
bit_field_init_declaration (355)
    on left: 484 485, on right: 383 386 389 449
base_specifier_list (356)
    on left: 486 487, on right: 470 471 487 791
base_specifier (357)
    on left: 488 489 490 491 492 493, on right: 486 487 489 490 491
    492
access_specifier (358)
    on left: 494 495 496, on right: 321 479 489
conversion_function_id (359)
    on left: 497, on right: 39
conversion_type_id (360)
    on left: 498 499, on right: 497 499
ctor_initializer.opt (361)
    on left: 500 501, on right: 452
ctor_initializer (362)
    on left: 502 503, on right: 501 772
mem_initializer_list (363)
    on left: 504 505, on right: 502 503 506 507 508
mem_initializer_list_head (364)
    on left: 506 507 508, on right: 505
mem_initializer (365)
    on left: 509, on right: 504 505
mem_initializer_id (366)
    on left: 510, on right: 509
operator_function_id (367)
    on left: 511, on right: 40
operator (368)
    on left: 512 513 514 515 516 517 518 519 520 521 522 523 524 525
    526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541
    542 543 544 545 546 547 548 549 550 551, on right: 511
template_declaration (369)
    on left: 552 553 554, on right: 265 553 554 653
template_parameter_clause (370)
    on left: 555, on right: 552 566 567
template_parameter_list (371)
    on left: 556 557, on right: 555 557
template_parameter (372)
    on left: 558 559 560 561 562 563, on right: 556 557
simple_type_parameter (373)
    on left: 564 565, on right: 558 559 666
templated_type_parameter (374)
    on left: 566 567, on right: 560 561
template_id (375)
    on left: 568 569, on right: 28 569
template_argument_list (376)
    on left: 570 571, on right: 25 568 571
template_argument (377)
    on left: 572, on right: 570 571
explicit_specialization (378)
    on left: 573 574, on right: 266 574 642
try_block (379)
    on left: 575, on right: 223
handler_seq (380)
    on left: 576 577, on right: 451 575 577 664
handler (381)
    on left: 578, on right: 576 577
exception_declaration (382)
    on left: 579, on right: 578
throw_expression (383)
    on left: 580 581, on right: 173
templated_throw_expression (384)
    on left: 582 583, on right: 211
exception_specification (385)
    on left: 584 585, on right: 416
type_id_list (386)
    on left: 586 587, on right: 585 587
primary_tree_expression (387)
    on left: 588 589, on right: 590 591
postfix_tree_expression (388)
    on left: 590 591 592 593 594 595 596, on right: 592 593 594 595
    596 597
tree_expression (389)
    on left: 597 598, on right: 72 73 589 598
tree_argument_list.opt (390)
    on left: 599 600 601, on right: 594 600 826 827 881
tree_argument.ctors (391)
    on left: 602 603, on right: 601 603
tree_arguments.head (392)
    on left: 604 605 606 607 608, on right: 599 600
tree_argument.ctors_comma_most (393)
    on left: 609 610, on right: 608 610
tree_argument.most (394)
    on left: 611 612 613 614 615 616, on right: 605 609
tree_argument.misc (395)
    on left: 617 618 619 620 621, on right: 615 616 621
looping_unterminated_tree_argument (396)
    on left: 622, on right: 634 635
looped_unterminated_tree_argument (397)
    on left: 623 624, on right: 622 624
looping_tree_statement (398)
    on left: 625, on right: 636 638 639
looped_tree_statement (399)
    on left: 626 627 628, on right: 625 627
tree_statement (400)
    on left: 629 630 631 632, on right: 626 884
compound_tree_statement (401)
    on left: 633 634 635 636, on right: 641 803 804 888 889 890 891
tree_statement_seq.opt (402)
    on left: 637 638 639, on right: 633 634 635 636 638 639
terminated_tree_argument (403)
    on left: 640 641 642 643 644 645 646 647 648 649 650 651 652 653
    654 655 656 657 658, on right: 611 630
unterminated_tree_argument (404)
    on left: 659 660, on right: 623 631
unterminated_tree_argument.most (405)
    on left: 661 662 663 664 665 666 667 668 669 670 671 672 673 674
   , on right: 613 614 659
reserved_id (406)
    on left: 675 676 677 678 679 680 681 682 683 684 685 686 687 688
    689 690 691 692 693 694 695 696, on right: 667 897
token.punct (407)
    on left: 697 698 699 700 701 702 703 704 705 706 707 708 709 710
    711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726
    727 728 729 730 731 732 733 734 735 736 737 738 739 740,
    on right: 668 898
simple_tree_declaration (408)
    on left: 741 742 743 744 745 746, on right: 660 746
object_statements_clause (409)
    on left: 747 748, on right: 388 389 879 880 881 882 883
object_statement_seq.opt (410)
    on left: 749 750 751, on right: 747 748 750 751 768 769
looping_object_statement (411)
    on left: 752, on right: 748 750 751 769
looped_object_statement (412)
    on left: 753 754 755, on right: 752 754
object_statement (413)
    on left: 756 757 758 759 760 761 762 763 764 765 766 767 768 769
   , on right: 753 767
function_used_block (414)
    on left: 770 771 772 773 774, on right: 757 773 774
segment (415)
    on left: 775 776 777 778 779, on right: 20 774
derived_clause (416)
    on left: 780, on right: 767 768 769
meta_id (417)
    on left: 781 782 783, on right: 784 785 786
meta_scope (418)
    on left: 784, on right: 786 787
meta_nested_id (419)
    on left: 785 786 787, on right: 787 788 789 790 791 819 820 822
    880
meta_scoped_id (420)
    on left: 788 789, on right: 588 818
meta_class_specifier (421)
    on left: 790 791, on right: 272 665
meta_class_key (422)
    on left: 792 793, on right: 790 791 799 822 880
meta_non_class_key (423)
    on left: 794 795 796 797 798, on right: 800 820
meta_simple_type (424)
    on left: 799 800, on right: 782 802
meta_type (425)
    on left: 801 802, on right: 888 889 890 891 894 895
meta_function_definition (426)
    on left: 803 804 805 806 807, on right: 274 657 766 805 806 807
meta_control_statement (427)
    on left: 808, on right: 270 271 655 763 764
meta_control_statement1 (428)
    on left: 809 810 811 812 813 814 815 816 817, on right: 808
meta_primary_head (429)
    on left: 818 819 820, on right: 821 879
meta_primary_id (430)
    on left: 821 822, on right: 825
meta_primary_expression (431)
    on left: 823 824 825 826, on right: 829
meta_fn_postfix_expression (432)
    on left: 827 828, on right: 803 804 830
meta_postfix_expression (433)
    on left: 829 830 831 832 833 834 835, on right: 827 828 831 832
    833 834 835 836 881 882 883
meta_unary_expression (434)
    on left: 836 837 838 839 840 841 842 843 844 845,
    on right: 846
meta_cast_expression (435)
    on left: 846, on right: 837 838 839 840 841 842 843 844 847
meta_pm_expression (436)
    on left: 847, on right: 848 849 850 851
meta_multiplicative_expression (437)
    on left: 848 849 850 851, on right: 849 850 851 852 853 854
meta_additive_expression (438)
    on left: 852 853 854, on right: 853 854 855 856 857
meta_shift_expression (439)
    on left: 855 856 857, on right: 856 857 858 859 860 861 862
meta_relational_expression (440)
    on left: 858 859 860 861 862, on right: 859 860 861 862 863 864
    865
meta_equality_expression (441)
    on left: 863 864 865, on right: 864 865 866 867
meta_and_expression (442)
    on left: 866 867, on right: 867 868 869
meta_exclusive_or_expression (443)
    on left: 868 869, on right: 869 870 871
meta_inclusive_or_expression (444)
    on left: 870 871, on right: 871 872 873
meta_logical_and_expression (445)
    on left: 872 873, on right: 873 874 875
meta_logical_or_expression (446)
    on left: 874 875, on right: 875 876 877 884
meta_conditional_expression (447)
    on left: 876 877, on right: 780 877 878
meta_expression_statement (448)
    on left: 878 879 880 881 882 883 884 885 886 887,
    on right: 225 273 656 765 885 886 887
syntax_macro_definition (449)
    on left: 888 889 890 891, on right: 275
syntax_macro_parameter_list (450)
    on left: 892 893, on right: 888 889 893
syntax_macro_parameter (451)
    on left: 894 895 896 897 898 899 900 901 902 903 904 905,
    on right: 892 893
include_declaration (452)
    on left: 906 907 908 909, on right: 276 645
utility (453)
    on left: 910 911 912 913, on right: 21 908 909 941
file_dependency_declaration (454)
    on left: 914 915, on right: 277 643 760
using_implementation (455)
    on left: 916 917, on right: 914
using_interface (456)
    on left: 918 919, on right: 915
file_use (457)
    on left: 920 921, on right: 916 917 918 919
file_placement_declaration (458)
    on left: 922 923 924 925 926, on right: 278 644 761
export_implementation (459)
    on left: 927 928, on right: 922
export_interface (460)
    on left: 929 930, on right: 923
export_all (461)
    on left: 931 932, on right: 924
implementation_file (462)
    on left: 933 934, on right: 927 928
interface_file (463)
    on left: 935 936, on right: 929 930 931 932
file_name (464)
    on left: 937 938 939 940 941 942 943 944 945 946,
    on right: 938 939 940 941 942 943 944 945 946 950 955
file_entity (465)
    on left: 947 948 949, on right: 921 934 936 951 952
file_id (466)
    on left: 950 951 952, on right: 920 933 935 953 954
file_id_list (467)
    on left: 953 954, on right: 773 954
filespace_specifier (468)
    on left: 955, on right: 279 662 762
ecarb (469)
    on left: 956 957 958 959 960, on right: 73 75
semi (470)
    on left: 961 962 963, on right: 272 276 279 645 762 811 878 879
    880 881 882 883 914 915 922 923 924 925 926
error_ecarb (471)
    on left: 964 965, on right: 234 254 362 364 459 460 478 635 636
    748
error_semi (472)
    on left: 966 967, on right: 963
advance_search (473)
    on left: 968, on right: 218 219 260 261 465 466 624 627 628 754
    755
bang (474)
    on left: 969, on right: 71 74 75 234 237 254 257 362 364 366 459
    460 478 503 507 508 563 635 636 639 748 751 769 905 958 959 960
    963
line (475)
    on left: 970, on right: 262 808 884
mark (476)
    on left: 971, on right: 88 89
nest (477)
    on left: 972, on right: 253 254 477 478
start_search (478)
    on left: 973, on right: 216 463 622 625 752
start_search1 (479)
    on left: 974, on right: 258
util (480)
    on left: 975, on right: 71 254 256 257 478


state 0

    '$' 	shift, and go to state 1

    $default	reduce using rule 255 (declaration_seq.opt)

    translation_unit	go to state 1592
    declaration_seq.opt	go to state 2



state 1

    translation_unit  ->  '$' . tree_expression   (rule 72)
    translation_unit  ->  '$' . '{' tree_expression ecarb   (rule 73)
    translation_unit  ->  '$' . bang error   (rule 74)
    translation_unit  ->  '$' . '{' bang error ecarb   (rule 75)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 44
    '(' 	shift, and go to state 45
    '*' 	shift, and go to state 46

    $default	reduce using rule 969 (bang)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    primary_tree_expression	go to state 55
    postfix_tree_expression	go to state 56
    tree_expression	go to state 57
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 62
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66
    bang	go to state 67



state 2

    translation_unit  ->  declaration_seq.opt .   (rule 70)
    translation_unit  ->  declaration_seq.opt . util looping_declaration '#' bang error '#'   (rule 71)
    declaration_seq.opt  ->  declaration_seq.opt . util looping_declaration   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt . util looping_declaration '#' bang error ';'   (rule 257)

    $   	reduce using rule 70 (translation_unit)
    REGISTER	reduce using rule 70 (translation_unit)
    TYPEID	reduce using rule 70 (translation_unit)
    UTILITY	reduce using rule 70 (translation_unit)
    NIL 	reduce using rule 70 (translation_unit)
    ']' 	reduce using rule 70 (translation_unit)
    $default	reduce using rule 975 (util)

    util	go to state 68



state 3

    class_key  ->  CLASS .   (rule 474)

    $default	reduce using rule 474 (class_key)



state 4

    meta_non_class_key  ->  ENUM .   (rule 794)

    $default	reduce using rule 794 (meta_non_class_key)



state 5

    meta_class_key  ->  NAMESPACE .   (rule 793)

    $default	reduce using rule 793 (meta_class_key)



state 6

    class_key  ->  STRUCT .   (rule 475)

    $default	reduce using rule 475 (class_key)



state 7

    meta_non_class_key  ->  TYPENAME .   (rule 796)

    $default	reduce using rule 796 (meta_non_class_key)



state 8

    class_key  ->  UNION .   (rule 476)

    $default	reduce using rule 476 (class_key)



state 9

    meta_id  ->  AUTO .   (rule 783)

    $default	reduce using rule 783 (meta_id)



state 10

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 11

    meta_non_class_key  ->  TYPEDEF .   (rule 795)

    $default	reduce using rule 795 (meta_non_class_key)



state 12

    meta_non_class_key  ->  USING .   (rule 797)

    $default	reduce using rule 797 (meta_non_class_key)



state 13

    built_in_type_specifier  ->  BuiltInTypeSpecifier .   (rule 351)

    $default	reduce using rule 351 (built_in_type_specifier)



state 14

    identifier_word  ->  MetaType .   (rule 2)

    $default	reduce using rule 2 (identifier_word)



state 15

    identifier  ->  TreeLiteral .   (rule 23)

    $default	reduce using rule 23 (identifier)



state 16

    identifier_word  ->  DERIVED .   (rule 3)

    $default	reduce using rule 3 (identifier_word)



state 17

    identifier_word  ->  FILE .   (rule 4)

    $default	reduce using rule 4 (identifier_word)



state 18

    identifier_word  ->  GUARD .   (rule 5)

    $default	reduce using rule 5 (identifier_word)



state 19

    identifier_word  ->  IMPLEMENTATION .   (rule 6)

    $default	reduce using rule 6 (identifier_word)



state 20

    identifier_word  ->  INCLUDE .   (rule 7)

    $default	reduce using rule 7 (identifier_word)



state 21

    identifier_word  ->  INTERFACE .   (rule 8)

    $default	reduce using rule 8 (identifier_word)



state 22

    identifier_word  ->  ALL .   (rule 16)

    $default	reduce using rule 16 (identifier_word)



state 23

    identifier_word  ->  PLACEHOLDER .   (rule 17)

    $default	reduce using rule 17 (identifier_word)



state 24

    identifier_word  ->  PLACEMENT .   (rule 18)

    $default	reduce using rule 18 (identifier_word)



state 25

    identifier_word  ->  NOAUTO .   (rule 19)

    $default	reduce using rule 19 (identifier_word)



state 26

    identifier_word  ->  NOGUARD .   (rule 9)

    $default	reduce using rule 9 (identifier_word)



state 27

    identifier_word  ->  NOIMPLEMENTATION .   (rule 10)

    $default	reduce using rule 10 (identifier_word)



state 28

    identifier_word  ->  OVERLOAD .   (rule 11)

    $default	reduce using rule 11 (identifier_word)



state 29

    identifier_word  ->  PATH .   (rule 12)

    $default	reduce using rule 12 (identifier_word)



state 30

    identifier_word  ->  PREFIX .   (rule 13)

    $default	reduce using rule 13 (identifier_word)



state 31

    identifier_word  ->  PURE .   (rule 14)

    $default	reduce using rule 14 (identifier_word)



state 32

    identifier_word  ->  SUFFIX .   (rule 15)

    $default	reduce using rule 15 (identifier_word)



state 33

    segment  ->  BODY .   (rule 775)

    $default	reduce using rule 775 (segment)



state 34

    segment  ->  ENTRY .   (rule 776)

    $default	reduce using rule 776 (segment)



state 35

    segment  ->  EXIT .   (rule 777)

    $default	reduce using rule 777 (segment)



state 36

    segment  ->  POST .   (rule 778)

    $default	reduce using rule 778 (segment)



state 37

    segment  ->  PRE .   (rule 779)

    $default	reduce using rule 779 (segment)



state 38

    utility  ->  EMIT .   (rule 910)

    $default	reduce using rule 910 (utility)



state 39

    utility  ->  FROZEN .   (rule 911)

    $default	reduce using rule 911 (utility)



state 40

    utility  ->  POOL .   (rule 912)

    $default	reduce using rule 912 (utility)



state 41

    utility  ->  UTILITY .   (rule 913)

    $default	reduce using rule 913 (utility)



state 42

    global_scope  ->  SCOPE .   (rule 30)

    $default	reduce using rule 30 (global_scope)



state 43

    identifier_word  ->  Identifier .   (rule 1)

    $default	reduce using rule 1 (identifier_word)



state 44

    translation_unit  ->  '$' '{' . tree_expression ecarb   (rule 73)
    translation_unit  ->  '$' '{' . bang error ecarb   (rule 75)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 45
    '*' 	shift, and go to state 46

    $default	reduce using rule 969 (bang)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    primary_tree_expression	go to state 55
    postfix_tree_expression	go to state 56
    tree_expression	go to state 72
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 62
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66
    bang	go to state 73



state 45

    primary_tree_expression  ->  '(' . tree_expression ')'   (rule 589)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 45
    '*' 	shift, and go to state 46

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    primary_tree_expression	go to state 55
    postfix_tree_expression	go to state 56
    tree_expression	go to state 74
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 62
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 46

    tree_expression  ->  '*' . tree_expression   (rule 598)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 45
    '*' 	shift, and go to state 46

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    primary_tree_expression	go to state 55
    postfix_tree_expression	go to state 56
    tree_expression	go to state 75
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 62
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 47

    identifier  ->  identifier_word .   (rule 22)

    $default	reduce using rule 22 (identifier)



state 48

    id  ->  identifier .   (rule 24)
    id  ->  identifier . template_test '+' template_argument_list '>'   (rule 25)
    id  ->  identifier . template_test '+' '>'   (rule 26)
    id  ->  identifier . template_test '-'   (rule 27)

    '<' 	shift, and go to state 76

    $default	reduce using rule 24 (id)

    template_test	go to state 77



state 49

    meta_id  ->  id .   (rule 781)

    $default	reduce using rule 781 (meta_id)



state 50

    meta_scoped_id  ->  global_scope . meta_nested_id   (rule 789)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 79
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 51

    built_in_type_id  ->  built_in_type_id . built_in_type_specifier   (rule 51)
    meta_non_class_key  ->  built_in_type_id .   (rule 798)

    BuiltInTypeSpecifier	shift, and go to state 13

    $default	reduce using rule 798 (meta_non_class_key)

    built_in_type_specifier	go to state 80



state 52

    built_in_type_id  ->  built_in_type_specifier .   (rule 50)

    $default	reduce using rule 50 (built_in_type_id)



state 53

    meta_class_key  ->  class_key .   (rule 792)

    $default	reduce using rule 792 (meta_class_key)



state 54

    id  ->  template_id .   (rule 28)

    $default	reduce using rule 28 (id)



state 55

    postfix_tree_expression  ->  primary_tree_expression .   (rule 590)
    postfix_tree_expression  ->  primary_tree_expression . NOAUTO   (rule 591)

    NOAUTO	shift, and go to state 81

    $default	reduce using rule 590 (postfix_tree_expression)



state 56

    postfix_tree_expression  ->  postfix_tree_expression . '[' ']'   (rule 592)
    postfix_tree_expression  ->  postfix_tree_expression . '[' constant_expression ']'   (rule 593)
    postfix_tree_expression  ->  postfix_tree_expression . '(' tree_argument_list.opt ')'   (rule 594)
    postfix_tree_expression  ->  postfix_tree_expression . '.' scoped_id   (rule 595)
    postfix_tree_expression  ->  postfix_tree_expression . ARROW scoped_id   (rule 596)
    tree_expression  ->  postfix_tree_expression .   (rule 597)

    ARROW	shift, and go to state 82
    '[' 	shift, and go to state 83
    '(' 	shift, and go to state 84
    '.' 	shift, and go to state 85

    $default	reduce using rule 597 (tree_expression)



state 57

    translation_unit  ->  '$' tree_expression .   (rule 72)

    $default	reduce using rule 72 (translation_unit)



state 58

    identifier_word  ->  segment .   (rule 20)

    $default	reduce using rule 20 (identifier_word)



state 59

    meta_scope  ->  meta_id . SCOPE   (rule 784)
    meta_nested_id  ->  meta_id .   (rule 785)

    SCOPE	shift, and go to state 86

    $default	reduce using rule 785 (meta_nested_id)



state 60

    meta_nested_id  ->  meta_scope . '~' meta_id   (rule 786)
    meta_nested_id  ->  meta_scope . meta_nested_id   (rule 787)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 87

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 88
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 61

    meta_scoped_id  ->  meta_nested_id .   (rule 788)

    $default	reduce using rule 788 (meta_scoped_id)



state 62

    primary_tree_expression  ->  meta_scoped_id .   (rule 588)

    $default	reduce using rule 588 (primary_tree_expression)



state 63

    meta_simple_type  ->  meta_class_key .   (rule 799)

    $default	reduce using rule 799 (meta_simple_type)



state 64

    meta_simple_type  ->  meta_non_class_key .   (rule 800)

    $default	reduce using rule 800 (meta_simple_type)



state 65

    meta_id  ->  meta_simple_type .   (rule 782)

    $default	reduce using rule 782 (meta_id)



state 66

    identifier_word  ->  utility .   (rule 21)

    $default	reduce using rule 21 (identifier_word)



state 67

    translation_unit  ->  '$' bang . error   (rule 74)

    error	shift, and go to state 89



state 68

    translation_unit  ->  declaration_seq.opt util . looping_declaration '#' bang error '#'   (rule 71)
    declaration_seq.opt  ->  declaration_seq.opt util . looping_declaration   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt util . looping_declaration '#' bang error ';'   (rule 257)

    $default	reduce using rule 974 (start_search1)

    looping_declaration	go to state 90
    start_search1	go to state 91



state 69

    template_id  ->  TEMPLATE identifier . '<' template_argument_list '>'   (rule 568)

    '<' 	shift, and go to state 92



state 70

    global_scope  ->  TEMPLATE global_scope .   (rule 31)

    $default	reduce using rule 31 (global_scope)



state 71

    template_id  ->  TEMPLATE template_id .   (rule 569)

    $default	reduce using rule 569 (template_id)



state 72

    translation_unit  ->  '$' '{' tree_expression . ecarb   (rule 73)

    '}' 	shift, and go to state 93
    '#' 	shift, and go to state 94

    $default	reduce using rule 969 (bang)

    ecarb	go to state 95
    bang	go to state 96



state 73

    translation_unit  ->  '$' '{' bang . error ecarb   (rule 75)

    error	shift, and go to state 97



state 74

    primary_tree_expression  ->  '(' tree_expression . ')'   (rule 589)

    ')' 	shift, and go to state 98



state 75

    tree_expression  ->  '*' tree_expression .   (rule 598)

    $default	reduce using rule 598 (tree_expression)



state 76

    template_test  ->  '<' .   (rule 29)

    $default	reduce using rule 29 (template_test)



state 77

    id  ->  identifier template_test . '+' template_argument_list '>'   (rule 25)
    id  ->  identifier template_test . '+' '>'   (rule 26)
    id  ->  identifier template_test . '-'   (rule 27)

    '+' 	shift, and go to state 99
    '-' 	shift, and go to state 100



state 78

    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 69
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 79

    meta_scoped_id  ->  global_scope meta_nested_id .   (rule 789)

    $default	reduce using rule 789 (meta_scoped_id)



state 80

    built_in_type_id  ->  built_in_type_id built_in_type_specifier .   (rule 51)

    $default	reduce using rule 51 (built_in_type_id)



state 81

    postfix_tree_expression  ->  primary_tree_expression NOAUTO .   (rule 591)

    $default	reduce using rule 591 (postfix_tree_expression)



state 82

    postfix_tree_expression  ->  postfix_tree_expression ARROW . scoped_id   (rule 596)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 105
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 83

    postfix_tree_expression  ->  postfix_tree_expression '[' . ']'   (rule 592)
    postfix_tree_expression  ->  postfix_tree_expression '[' . constant_expression ']'   (rule 593)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    ']' 	shift, and go to state 129
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 163
    conditional_expression	go to state 164
    constant_expression	go to state 165
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 84

    postfix_tree_expression  ->  postfix_tree_expression '(' . tree_argument_list.opt ')'   (rule 594)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    $default	reduce using rule 604 (tree_arguments.head)

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 290
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 295
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    func_definition	go to state 311
    ctor_definition	go to state 312
    constructor_head	go to state 313
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    tree_argument_list.opt	go to state 326
    tree_argument.ctors	go to state 327
    tree_arguments.head	go to state 328
    tree_argument.ctors_comma_most	go to state 329
    tree_argument.most	go to state 330
    tree_argument.misc	go to state 331
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 333
    unterminated_tree_argument.most	go to state 334
    reserved_id	go to state 335
    token.punct	go to state 336
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345



state 85

    postfix_tree_expression  ->  postfix_tree_expression '.' . scoped_id   (rule 595)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 346
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 86

    meta_scope  ->  meta_id SCOPE .   (rule 784)

    $default	reduce using rule 784 (meta_scope)



state 87

    meta_nested_id  ->  meta_scope '~' . meta_id   (rule 786)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 347
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 88

    meta_nested_id  ->  meta_scope meta_nested_id .   (rule 787)

    $default	reduce using rule 787 (meta_nested_id)



state 89

    translation_unit  ->  '$' bang error .   (rule 74)

    $default	reduce using rule 74 (translation_unit)



state 90

    translation_unit  ->  declaration_seq.opt util looping_declaration . '#' bang error '#'   (rule 71)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration .   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration . '#' bang error ';'   (rule 257)

    '#' 	shift, and go to state 348

    $default	reduce using rule 256 (declaration_seq.opt)



state 91

    looping_declaration  ->  start_search1 . looped_declaration   (rule 258)

    error	shift, and go to state 349
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 350
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 351
    EXPLICIT	shift, and go to state 352
    EXPORT	shift, and go to state 353
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 354
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 356
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359


    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    compound_declaration	go to state 361
    looped_declaration	go to state 362
    declaration	go to state 363
    specialised_declaration	go to state 364
    block_declaration	go to state 365
    specialised_block_declaration	go to state 366
    simple_declaration	go to state 367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 368
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 369
    namespace_alias_definition	go to state 370
    namespace_declaration	go to state 371
    using_directive	go to state 372
    asm_definition	go to state 373
    linkage_specification	go to state 374
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    function_definition	go to state 378
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 381
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 382
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 384
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 385
    throw_expression	go to state 325
    segment	go to state 58
    meta_control_statement	go to state 386
    syntax_macro_definition	go to state 387
    include_declaration	go to state 388
    utility	go to state 66
    file_dependency_declaration	go to state 389
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 390
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 391
    advance_search	go to state 392
    line	go to state 393



state 92

    template_id  ->  TEMPLATE identifier '<' . template_argument_list '>'   (rule 568)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 401
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 407
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 408
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 409
    templated_parameter_declaration	go to state 410
    templated_abstract_declaration	go to state 411
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    template_argument_list	go to state 413
    template_argument	go to state 414
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 93

    ecarb  ->  '}' .   (rule 956)

    $default	reduce using rule 956 (ecarb)



state 94

    ecarb  ->  '#' .   (rule 957)

    $default	reduce using rule 957 (ecarb)



state 95

    translation_unit  ->  '$' '{' tree_expression ecarb .   (rule 73)

    $default	reduce using rule 73 (translation_unit)



state 96

    ecarb  ->  bang . error '}'   (rule 958)
    ecarb  ->  bang . error ')'   (rule 959)
    ecarb  ->  bang . error '#'   (rule 960)

    error	shift, and go to state 416



state 97

    translation_unit  ->  '$' '{' bang error . ecarb   (rule 75)

    '}' 	shift, and go to state 93
    '#' 	shift, and go to state 94

    $default	reduce using rule 969 (bang)

    ecarb	go to state 417
    bang	go to state 96



state 98

    primary_tree_expression  ->  '(' tree_expression ')' .   (rule 589)

    $default	reduce using rule 589 (primary_tree_expression)



state 99

    id  ->  identifier template_test '+' . template_argument_list '>'   (rule 25)
    id  ->  identifier template_test '+' . '>'   (rule 26)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359
    '>' 	shift, and go to state 418

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 401
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 407
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 408
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 409
    templated_parameter_declaration	go to state 410
    templated_abstract_declaration	go to state 411
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    template_argument_list	go to state 419
    template_argument	go to state 414
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 100

    id  ->  identifier template_test '-' .   (rule 27)

    $default	reduce using rule 27 (id)



state 101

    id_scope  ->  id . SCOPE   (rule 32)
    nested_id  ->  id .   (rule 33)

    SCOPE	shift, and go to state 420

    $default	reduce using rule 33 (nested_id)



state 102

    scoped_id  ->  global_scope . nested_id   (rule 36)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 103
    nested_id	go to state 421
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 103

    nested_id  ->  id_scope . nested_id   (rule 34)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 103
    nested_id	go to state 422
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 104

    scoped_id  ->  nested_id .   (rule 35)

    $default	reduce using rule 35 (scoped_id)



state 105

    postfix_tree_expression  ->  postfix_tree_expression ARROW scoped_id .   (rule 596)

    $default	reduce using rule 596 (postfix_tree_expression)



state 106

    elaborated_enum_specifier  ->  ENUM . scoped_id   (rule 355)
    enum_specifier  ->  ENUM . scoped_id enumerator_clause   (rule 356)
    enum_specifier  ->  ENUM . enumerator_clause   (rule 357)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 423

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 424
    enumerator_clause	go to state 425
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 107

    elaborated_type_specifier  ->  TYPENAME . scoped_id   (rule 354)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 426
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 108

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    abstract_expression  ->  TEMPLATE . parenthesis_clause   (rule 82)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 427
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    parenthesis_clause	go to state 431
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 109

    postfix_expression  ->  CONST_CAST . '<' type_id '>' '(' expression ')'   (rule 101)

    '<' 	shift, and go to state 432



state 110

    delete_expression  ->  DELETE . cast_expression   (rule 121)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 433
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 111

    postfix_expression  ->  DYNAMIC_CAST . '<' type_id '>' '(' expression ')'   (rule 98)

    '<' 	shift, and go to state 434



state 112

    boolean_literal  ->  FALSE .   (rule 68)

    $default	reduce using rule 68 (boolean_literal)



state 113

    new_expression  ->  NEW . new_type_id new_initializer.opt   (rule 122)
    new_expression  ->  NEW . parameters_clause new_type_id new_initializer.opt   (rule 123)
    new_expression  ->  NEW . parameters_clause   (rule 124)
    new_expression  ->  NEW . parameters_clause parameters_clause new_initializer.opt   (rule 125)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    new_type_id	go to state 438
    type_specifier	go to state 439
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    parameters_clause	go to state 444
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 114

    conversion_function_id  ->  OPERATOR . conversion_type_id   (rule 497)
    operator_function_id  ->  OPERATOR . operator   (rule 511)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    DELETE	shift, and go to state 445
    NEW 	shift, and go to state 446
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    SHL 	shift, and go to state 447
    SHR 	shift, and go to state 448
    EQ  	shift, and go to state 449
    NE  	shift, and go to state 450
    LE  	shift, and go to state 451
    GE  	shift, and go to state 452
    LOG_AND	shift, and go to state 453
    LOG_OR	shift, and go to state 454
    INC 	shift, and go to state 455
    DEC 	shift, and go to state 456
    ARROW	shift, and go to state 457
    ARROW_STAR	shift, and go to state 458
    ASS_ADD	shift, and go to state 459
    ASS_AND	shift, and go to state 460
    ASS_DIV	shift, and go to state 461
    ASS_MOD	shift, and go to state 462
    ASS_MUL	shift, and go to state 463
    ASS_OR	shift, and go to state 464
    ASS_SHL	shift, and go to state 465
    ASS_SHR	shift, and go to state 466
    ASS_SUB	shift, and go to state 467
    ASS_XOR	shift, and go to state 468
    Identifier	shift, and go to state 43
    '[' 	shift, and go to state 469
    '(' 	shift, and go to state 470
    '+' 	shift, and go to state 471
    '-' 	shift, and go to state 472
    '*' 	shift, and go to state 473
    '/' 	shift, and go to state 474
    '%' 	shift, and go to state 475
    '^' 	shift, and go to state 476
    '&' 	shift, and go to state 477
    '|' 	shift, and go to state 478
    '~' 	shift, and go to state 479
    '!' 	shift, and go to state 480
    '=' 	shift, and go to state 481
    '<' 	shift, and go to state 482
    '>' 	shift, and go to state 483
    ',' 	shift, and go to state 484

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 485
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_type_id	go to state 486
    operator	go to state 487
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 115

    postfix_expression  ->  REINTERPRET_CAST . '<' type_id '>' '(' expression ')'   (rule 100)

    '<' 	shift, and go to state 488



state 116

    unary_expression  ->  SIZEOF . unary_expression   (rule 116)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 489
    postfix_expression	go to state 148
    unary_expression	go to state 490
    delete_expression	go to state 150
    new_expression	go to state 151
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 117

    postfix_expression  ->  STATIC_CAST . '<' type_id '>' '(' expression ')'   (rule 99)

    '<' 	shift, and go to state 491



state 118

    primary_expression  ->  THIS .   (rule 77)

    $default	reduce using rule 77 (primary_expression)



state 119

    boolean_literal  ->  TRUE .   (rule 69)

    $default	reduce using rule 69 (boolean_literal)



state 120

    postfix_expression  ->  TYPEID . parameters_clause   (rule 102)

    '(' 	shift, and go to state 130

    parameters_clause	go to state 492



state 121

    literal  ->  FloatingLiteral .   (rule 62)

    $default	reduce using rule 62 (literal)



state 122

    literal  ->  IntegerLiteral .   (rule 60)

    $default	reduce using rule 60 (literal)



state 123

    unary_expression  ->  INC . cast_expression   (rule 108)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 493
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 124

    unary_expression  ->  DEC . cast_expression   (rule 109)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 494
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 125

    literal  ->  CharacterLiteral .   (rule 61)

    $default	reduce using rule 61 (literal)



state 126

    literal  ->  NumberLiteral .   (rule 65)

    $default	reduce using rule 65 (literal)



state 127

    string  ->  StringLiteral .   (rule 59)

    $default	reduce using rule 59 (string)



state 128

    abstract_expression  ->  '[' . expression.opt ']'   (rule 81)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 185 (expression.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression.opt	go to state 497
    expression	go to state 498
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 129

    postfix_tree_expression  ->  postfix_tree_expression '[' ']' .   (rule 592)

    $default	reduce using rule 592 (postfix_tree_expression)



state 130

    parameters_clause  ->  '(' . parameter_declaration_clause ')'   (rule 417)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 418 (parameter_declaration_clause)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_clause	go to state 501
    parameter_declaration_list	go to state 502
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 131

    unary_expression  ->  '+' . cast_expression   (rule 112)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 505
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 132

    unary_expression  ->  '-' . cast_expression   (rule 113)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 506
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 133

    star_ptr_operator  ->  '*' .   (rule 390)

    $default	reduce using rule 390 (star_ptr_operator)



state 134

    ptr_operator  ->  '&' .   (rule 394)

    $default	reduce using rule 394 (ptr_operator)



state 135

    unary_expression  ->  '~' . cast_expression   (rule 115)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 507
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 136

    unary_expression  ->  '!' . cast_expression   (rule 114)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 508
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 137

    scoped_id  ->  global_scope . nested_id   (rule 36)
    scoped_special_function_id  ->  global_scope . nested_special_function_id   (rule 46)
    unary_expression  ->  global_scope . new_expression   (rule 118)
    unary_expression  ->  global_scope . delete_expression   (rule 120)
    ptr_operator  ->  global_scope . nested_ptr_operator   (rule 396)

    TEMPLATE	shift, and go to state 509
    DELETE	shift, and go to state 110
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 138
    nested_id	go to state 421
    special_function_id	go to state 140
    nested_special_function_id	go to state 510
    delete_expression	go to state 511
    new_expression	go to state 512
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 513
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 138

    nested_id  ->  id_scope . nested_id   (rule 34)
    nested_special_function_id  ->  id_scope . destructor_id   (rule 43)
    nested_special_function_id  ->  id_scope . nested_special_function_id   (rule 44)
    nested_ptr_operator  ->  id_scope . nested_ptr_operator   (rule 393)

    TEMPLATE	shift, and go to state 514
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 138
    nested_id	go to state 422
    destructor_id	go to state 516
    special_function_id	go to state 140
    nested_special_function_id	go to state 517
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 518
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 139

    suffix_named_decl_specifier  ->  scoped_id .   (rule 300)

    $default	reduce using rule 300 (suffix_named_decl_specifier)



state 140

    nested_special_function_id  ->  special_function_id .   (rule 42)

    $default	reduce using rule 42 (nested_special_function_id)



state 141

    scoped_special_function_id  ->  nested_special_function_id .   (rule 45)

    $default	reduce using rule 45 (scoped_special_function_id)



state 142

    suffix_named_decl_specifiers.sf  ->  scoped_special_function_id .   (rule 307)

    $default	reduce using rule 307 (suffix_named_decl_specifiers.sf)



state 143

    literal  ->  string .   (rule 63)

    $default	reduce using rule 63 (literal)



state 144

    primary_expression  ->  literal .   (rule 76)

    $default	reduce using rule 76 (primary_expression)



state 145

    literal  ->  boolean_literal .   (rule 64)

    $default	reduce using rule 64 (literal)



state 146

    postfix_expression  ->  primary_expression .   (rule 86)

    $default	reduce using rule 86 (postfix_expression)



state 147

    primary_expression  ->  abstract_expression .   (rule 79)
    cast_expression  ->  abstract_expression . cast_expression   (rule 136)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 130
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 79 (primary_expression)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 519
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 148

    postfix_expression  ->  postfix_expression . parenthesis_clause mark_type1 '-'   (rule 87)
    postfix_expression  ->  postfix_expression . parenthesis_clause mark_type1 '+' type1_parameters mark '{' error   (rule 88)
    postfix_expression  ->  postfix_expression . parenthesis_clause mark_type1 '+' type1_parameters mark error   (rule 89)
    postfix_expression  ->  postfix_expression . parenthesis_clause mark_type1 '+' error   (rule 90)
    postfix_expression  ->  postfix_expression . '[' expression.opt ']'   (rule 91)
    postfix_expression  ->  postfix_expression . '.' declarator_id   (rule 92)
    postfix_expression  ->  postfix_expression . '.' scoped_pseudo_destructor_id   (rule 93)
    postfix_expression  ->  postfix_expression . ARROW declarator_id   (rule 94)
    postfix_expression  ->  postfix_expression . ARROW scoped_pseudo_destructor_id   (rule 95)
    postfix_expression  ->  postfix_expression . INC   (rule 96)
    postfix_expression  ->  postfix_expression . DEC   (rule 97)
    unary_expression  ->  postfix_expression .   (rule 107)

    INC 	shift, and go to state 520
    DEC 	shift, and go to state 521
    ARROW	shift, and go to state 522
    '[' 	shift, and go to state 523
    '(' 	shift, and go to state 130
    '.' 	shift, and go to state 524

    $default	reduce using rule 107 (unary_expression)

    parenthesis_clause	go to state 525
    parameters_clause	go to state 183



state 149

    cast_expression  ->  unary_expression .   (rule 135)

    $default	reduce using rule 135 (cast_expression)



state 150

    unary_expression  ->  delete_expression .   (rule 119)

    $default	reduce using rule 119 (unary_expression)



state 151

    unary_expression  ->  new_expression .   (rule 117)

    $default	reduce using rule 117 (unary_expression)



state 152

    pm_expression  ->  cast_expression .   (rule 137)

    $default	reduce using rule 137 (pm_expression)



state 153

    pm_expression  ->  pm_expression . DOT_STAR cast_expression   (rule 138)
    pm_expression  ->  pm_expression . ARROW_STAR cast_expression   (rule 139)
    multiplicative_expression  ->  pm_expression .   (rule 140)

    ARROW_STAR	shift, and go to state 526
    DOT_STAR	shift, and go to state 527

    $default	reduce using rule 140 (multiplicative_expression)



state 154

    multiplicative_expression  ->  multiplicative_expression . star_ptr_operator pm_expression   (rule 141)
    multiplicative_expression  ->  multiplicative_expression . '/' pm_expression   (rule 142)
    multiplicative_expression  ->  multiplicative_expression . '%' pm_expression   (rule 143)
    additive_expression  ->  multiplicative_expression .   (rule 144)

    '*' 	shift, and go to state 133
    '/' 	shift, and go to state 528
    '%' 	shift, and go to state 529

    $default	reduce using rule 144 (additive_expression)

    star_ptr_operator	go to state 530



state 155

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 145)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 146)
    shift_expression  ->  additive_expression .   (rule 147)

    '+' 	shift, and go to state 531
    '-' 	shift, and go to state 532

    $default	reduce using rule 147 (shift_expression)



state 156

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    relational_expression  ->  shift_expression .   (rule 150)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 150 (relational_expression)



state 157

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 151)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 152)
    relational_expression  ->  relational_expression . LE shift_expression   (rule 153)
    relational_expression  ->  relational_expression . GE shift_expression   (rule 154)
    equality_expression  ->  relational_expression .   (rule 155)

    LE  	shift, and go to state 535
    GE  	shift, and go to state 536
    '<' 	shift, and go to state 537
    '>' 	shift, and go to state 538

    $default	reduce using rule 155 (equality_expression)



state 158

    equality_expression  ->  equality_expression . EQ relational_expression   (rule 156)
    equality_expression  ->  equality_expression . NE relational_expression   (rule 157)
    and_expression  ->  equality_expression .   (rule 158)

    EQ  	shift, and go to state 539
    NE  	shift, and go to state 540

    $default	reduce using rule 158 (and_expression)



state 159

    and_expression  ->  and_expression . '&' equality_expression   (rule 159)
    exclusive_or_expression  ->  and_expression .   (rule 160)

    '&' 	shift, and go to state 541

    $default	reduce using rule 160 (exclusive_or_expression)



state 160

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 161)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 162)

    '^' 	shift, and go to state 542

    $default	reduce using rule 162 (inclusive_or_expression)



state 161

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 163)
    logical_and_expression  ->  inclusive_or_expression .   (rule 164)

    '|' 	shift, and go to state 543

    $default	reduce using rule 164 (logical_and_expression)



state 162

    logical_and_expression  ->  logical_and_expression . LOG_AND inclusive_or_expression   (rule 165)
    logical_or_expression  ->  logical_and_expression .   (rule 166)

    LOG_AND	shift, and go to state 544

    $default	reduce using rule 166 (logical_or_expression)



state 163

    logical_or_expression  ->  logical_or_expression . LOG_OR logical_and_expression   (rule 167)
    conditional_expression  ->  logical_or_expression .   (rule 168)
    conditional_expression  ->  logical_or_expression . '?' expression ':' assignment_expression   (rule 169)

    LOG_OR	shift, and go to state 545
    '?' 	shift, and go to state 546

    $default	reduce using rule 168 (conditional_expression)



state 164

    constant_expression  ->  conditional_expression .   (rule 189)

    $default	reduce using rule 189 (constant_expression)



state 165

    postfix_tree_expression  ->  postfix_tree_expression '[' constant_expression . ']'   (rule 593)

    ']' 	shift, and go to state 547



state 166

    suffix_built_in_decl_specifier.raw  ->  suffix_built_in_decl_specifier.raw . built_in_type_specifier   (rule 296)
    suffix_built_in_decl_specifier.raw  ->  suffix_built_in_decl_specifier.raw . decl_specifier_suffix   (rule 297)
    suffix_built_in_decl_specifier  ->  suffix_built_in_decl_specifier.raw .   (rule 298)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 548
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    BuiltInTypeSpecifier	shift, and go to state 13
    '!' 	shift, and go to state 549

    $default	reduce using rule 298 (suffix_built_in_decl_specifier)

    decl_specifier_affix	go to state 550
    decl_specifier_suffix	go to state 551
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    built_in_type_specifier	go to state 552
    cv_qualifier	go to state 307
    access_specifier	go to state 412



state 167

    suffix_decl_specified_ids  ->  suffix_built_in_decl_specifier .   (rule 310)
    suffix_decl_specified_ids  ->  suffix_built_in_decl_specifier . suffix_named_decl_specifiers.sf   (rule 311)
    suffix_decl_specified_scope  ->  suffix_built_in_decl_specifier . suffix_named_decl_specifiers SCOPE   (rule 314)
    suffix_decl_specified_scope  ->  suffix_built_in_decl_specifier . SCOPE   (rule 315)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 553
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 554
    Identifier	shift, and go to state 43

    $default	reduce using rule 310 (suffix_decl_specified_ids)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 557
    suffix_named_decl_specifiers.sf	go to state 558
    elaborate_type_specifier	go to state 174
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 168

    suffix_named_decl_specifier  ->  suffix_named_decl_specifier . decl_specifier_suffix   (rule 302)
    suffix_named_decl_specifier.bi  ->  suffix_named_decl_specifier .   (rule 303)
    suffix_named_decl_specifier.bi  ->  suffix_named_decl_specifier . suffix_built_in_decl_specifier.raw   (rule 304)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 548
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    BuiltInTypeSpecifier	shift, and go to state 13
    '!' 	shift, and go to state 549

    $default	reduce using rule 303 (suffix_named_decl_specifier.bi)

    suffix_built_in_decl_specifier.raw	go to state 559
    decl_specifier_affix	go to state 550
    decl_specifier_suffix	go to state 560
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    built_in_type_specifier	go to state 175
    cv_qualifier	go to state 307
    access_specifier	go to state 412



state 169

    suffix_named_decl_specifiers  ->  suffix_named_decl_specifier.bi .   (rule 305)

    $default	reduce using rule 305 (suffix_named_decl_specifiers)



state 170

    suffix_named_decl_specifiers  ->  suffix_named_decl_specifiers . suffix_named_decl_specifier.bi   (rule 306)
    suffix_named_decl_specifiers.sf  ->  suffix_named_decl_specifiers .   (rule 308)
    suffix_named_decl_specifiers.sf  ->  suffix_named_decl_specifiers . scoped_special_function_id   (rule 309)
    suffix_decl_specified_scope  ->  suffix_named_decl_specifiers . SCOPE   (rule 313)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 553
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 561
    Identifier	shift, and go to state 43

    $default	reduce using rule 308 (suffix_named_decl_specifiers.sf)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 562
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 563
    elaborate_type_specifier	go to state 174
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 171

    suffix_decl_specified_ids  ->  suffix_named_decl_specifiers.sf .   (rule 312)

    $default	reduce using rule 312 (suffix_decl_specified_ids)



state 172

    primary_expression  ->  suffix_decl_specified_ids .   (rule 78)

    $default	reduce using rule 78 (primary_expression)



state 173

    unary_expression  ->  suffix_decl_specified_scope . star_ptr_operator cast_expression   (rule 111)

    '*' 	shift, and go to state 133

    star_ptr_operator	go to state 564



state 174

    suffix_named_decl_specifier  ->  elaborate_type_specifier .   (rule 301)

    $default	reduce using rule 301 (suffix_named_decl_specifier)



state 175

    suffix_built_in_decl_specifier.raw  ->  built_in_type_specifier .   (rule 295)

    $default	reduce using rule 295 (suffix_built_in_decl_specifier.raw)



state 176

    elaborate_type_specifier  ->  elaborated_type_specifier .   (rule 347)

    $default	reduce using rule 347 (elaborate_type_specifier)



state 177

    elaborated_type_specifier  ->  elaborated_enum_specifier .   (rule 353)

    $default	reduce using rule 353 (elaborated_type_specifier)



state 178

    elaborate_type_specifier  ->  enum_specifier .   (rule 346)

    $default	reduce using rule 346 (elaborate_type_specifier)



state 179

    star_ptr_operator  ->  star_ptr_operator . cv_qualifier   (rule 391)
    nested_ptr_operator  ->  star_ptr_operator .   (rule 392)

    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200

    $default	reduce using rule 392 (nested_ptr_operator)

    cv_qualifier	go to state 565



state 180

    ptr_operator  ->  nested_ptr_operator .   (rule 395)

    $default	reduce using rule 395 (ptr_operator)



state 181

    unary_expression  ->  ptr_operator . cast_expression   (rule 110)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 566
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 182

    abstract_expression  ->  parenthesis_clause .   (rule 80)

    $default	reduce using rule 80 (abstract_expression)



state 183

    parenthesis_clause  ->  parameters_clause . cv_qualifier_seq.opt   (rule 415)
    parenthesis_clause  ->  parameters_clause . cv_qualifier_seq.opt exception_specification   (rule 416)

    $default	reduce using rule 401 (cv_qualifier_seq.opt)

    cv_qualifier_seq.opt	go to state 567



state 184

    elaborated_type_specifier  ->  elaborated_class_specifier .   (rule 352)

    $default	reduce using rule 352 (elaborated_type_specifier)



state 185

    class_specifier  ->  class_specifier_head . nest declaration_seq.opt '}'   (rule 477)
    class_specifier  ->  class_specifier_head . nest declaration_seq.opt util looping_declaration '#' bang error_ecarb   (rule 478)

    $default	reduce using rule 972 (nest)

    nest	go to state 568



state 186

    elaborated_class_specifier  ->  class_key . scoped_id   (rule 468)
    elaborated_class_specifier  ->  class_key . scoped_id colon_mark error   (rule 469)
    class_specifier_head  ->  class_key . scoped_id colon_mark base_specifier_list '{'   (rule 470)
    class_specifier_head  ->  class_key . ':' base_specifier_list '{'   (rule 471)
    class_specifier_head  ->  class_key . scoped_id '{'   (rule 472)
    class_specifier_head  ->  class_key . '{'   (rule 473)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 569
    ':' 	shift, and go to state 570

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 571
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 187

    elaborate_type_specifier  ->  class_specifier .   (rule 345)

    $default	reduce using rule 345 (elaborate_type_specifier)



state 188

    special_function_id  ->  conversion_function_id .   (rule 39)

    $default	reduce using rule 39 (special_function_id)



state 189

    special_function_id  ->  operator_function_id .   (rule 40)

    $default	reduce using rule 40 (special_function_id)



state 190

    access_specifier  ->  PRIVATE .   (rule 494)

    $default	reduce using rule 494 (access_specifier)



state 191

    access_specifier  ->  PROTECTED .   (rule 495)

    $default	reduce using rule 495 (access_specifier)



state 192

    access_specifier  ->  PUBLIC .   (rule 496)

    $default	reduce using rule 496 (access_specifier)



state 193

    class_key  ->  CLASS .   (rule 474)
    simple_type_parameter  ->  CLASS .   (rule 564)

    $default	reduce using rule 474 (class_key)



state 194

    elaborated_enum_specifier  ->  ENUM . scoped_id   (rule 355)
    enum_specifier  ->  ENUM . scoped_id enumerator_clause   (rule 356)
    enum_specifier  ->  ENUM . enumerator_clause   (rule 357)
    unterminated_tree_argument.most  ->  ENUM .   (rule 670)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 423

    $default	reduce using rule 670 (unterminated_tree_argument.most)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 424
    enumerator_clause	go to state 425
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 195

    namespace_definition  ->  NAMESPACE . scoped_id compound_declaration   (rule 373)
    namespace_definition  ->  NAMESPACE . compound_declaration   (rule 374)
    namespace_alias_definition  ->  NAMESPACE . scoped_id '=' scoped_id ';'   (rule 375)
    namespace_declaration  ->  NAMESPACE . scoped_id ';'   (rule 376)
    unterminated_tree_argument.most  ->  NAMESPACE .   (rule 671)
    filespace_specifier  ->  NAMESPACE . '/' FILE file_name compound_declaration   (rule 955)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 356
    '/' 	shift, and go to state 572

    $default	reduce using rule 671 (unterminated_tree_argument.most)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 573
    compound_declaration	go to state 574
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 196

    class_key  ->  STRUCT .   (rule 475)
    unterminated_tree_argument.most  ->  STRUCT .   (rule 672)

    $default	reduce using rule 475 (class_key)



state 197

    elaborated_type_specifier  ->  TYPENAME . scoped_id   (rule 354)
    simple_type_parameter  ->  TYPENAME .   (rule 565)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    $default	reduce using rule 565 (simple_type_parameter)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 426
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 198

    class_key  ->  UNION .   (rule 476)
    unterminated_tree_argument.most  ->  UNION .   (rule 674)

    $default	reduce using rule 476 (class_key)



state 199

    cv_qualifier  ->  CONST .   (rule 403)

    $default	reduce using rule 403 (cv_qualifier)



state 200

    cv_qualifier  ->  VOLATILE .   (rule 404)

    $default	reduce using rule 404 (cv_qualifier)



state 201

    terminated_tree_argument  ->  AUTO . meta_control_statement   (rule 655)
    terminated_tree_argument  ->  AUTO . meta_expression_statement   (rule 656)
    terminated_tree_argument  ->  AUTO . meta_function_definition   (rule 657)
    unterminated_tree_argument.most  ->  AUTO . meta_class_specifier   (rule 665)
    unterminated_tree_argument.most  ->  AUTO .   (rule 669)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 575
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 576
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 586
    '!' 	shift, and go to state 587

    $default	reduce using rule 970 (line)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_specifier	go to state 591
    meta_class_key	go to state 592
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_function_definition	go to state 594
    meta_control_statement	go to state 595
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 599
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 615
    utility	go to state 66
    line	go to state 393



state 202

    function_specifier  ->  EXPLICIT .   (rule 332)

    $default	reduce using rule 332 (function_specifier)



state 203

    template_declaration  ->  EXPORT . template_declaration   (rule 553)
    reserved_id  ->  EXPORT .   (rule 696)
    file_placement_declaration  ->  EXPORT . '/' NOIMPLEMENTATION semi   (rule 925)
    file_placement_declaration  ->  EXPORT . '/' UTILITY semi   (rule 926)
    export_implementation  ->  EXPORT . '/' IMPLEMENTATION implementation_file   (rule 927)
    export_implementation  ->  EXPORT . '/' IMPLEMENTATION '=' implementation_file   (rule 928)
    export_interface  ->  EXPORT . '/' INTERFACE interface_file   (rule 929)
    export_interface  ->  EXPORT . '/' INTERFACE '=' interface_file   (rule 930)
    export_all  ->  EXPORT . '/' ALL interface_file   (rule 931)
    export_all  ->  EXPORT . '/' ALL '=' interface_file   (rule 932)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 617
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    '/' 	shift, and go to state 618
    '!' 	shift, and go to state 549

    $default	reduce using rule 696 (reserved_id)

    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 619
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    cv_qualifier	go to state 307
    access_specifier	go to state 412
    template_declaration	go to state 620
    template_parameter_clause	go to state 320



state 204

    storage_class_specifier  ->  EXTERN .   (rule 330)
    linkage_specification  ->  EXTERN . string looping_declaration   (rule 379)

    StringLiteral	shift, and go to state 127

    $default	reduce using rule 330 (storage_class_specifier)

    string	go to state 621



state 205

    decl_specifier_affix  ->  FRIEND .   (rule 318)

    $default	reduce using rule 318 (decl_specifier_affix)



state 206

    function_specifier  ->  INLINE .   (rule 333)
    function_specifier  ->  INLINE . '/' IMPLEMENTATION   (rule 336)
    function_specifier  ->  INLINE . '/' INTERFACE   (rule 337)

    '/' 	shift, and go to state 622

    $default	reduce using rule 333 (function_specifier)



state 207

    storage_class_specifier  ->  MUTABLE .   (rule 329)

    $default	reduce using rule 329 (storage_class_specifier)



state 208

    storage_class_specifier  ->  REGISTER .   (rule 327)

    $default	reduce using rule 327 (storage_class_specifier)



state 209

    storage_class_specifier  ->  STATIC .   (rule 328)

    $default	reduce using rule 328 (storage_class_specifier)



state 210

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    abstract_expression  ->  TEMPLATE . parenthesis_clause   (rule 82)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_parameter_clause  ->  TEMPLATE . '<' template_parameter_list '>'   (rule 555)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)
    explicit_specialization  ->  TEMPLATE . '<' '>' declaration   (rule 573)
    unterminated_tree_argument.most  ->  TEMPLATE .   (rule 673)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 623
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 549
    '<' 	shift, and go to state 624

    $default	reduce using rule 673 (unterminated_tree_argument.most)

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 431
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 211

    decl_specifier_affix  ->  TYPEDEF .   (rule 319)

    $default	reduce using rule 319 (decl_specifier_affix)



state 212

    decl_specifier_affix  ->  USING .   (rule 322)
    using_directive  ->  USING . NAMESPACE scoped_id ';'   (rule 377)
    include_declaration  ->  USING . string   (rule 906)
    include_declaration  ->  USING . '/' INCLUDE string_expr   (rule 907)
    include_declaration  ->  USING . '/' INCLUDE '/' utility string_expr   (rule 908)
    include_declaration  ->  USING . '/' utility string_expr   (rule 909)
    using_implementation  ->  USING . '/' IMPLEMENTATION file_use   (rule 916)
    using_implementation  ->  USING . '/' IMPLEMENTATION '=' file_use   (rule 917)
    using_interface  ->  USING . '/' INTERFACE file_use   (rule 918)
    using_interface  ->  USING . '/' INTERFACE '=' file_use   (rule 919)

    NAMESPACE	shift, and go to state 626
    StringLiteral	shift, and go to state 127
    '/' 	shift, and go to state 627

    $default	reduce using rule 322 (decl_specifier_affix)

    string	go to state 628



state 213

    function_specifier  ->  VIRTUAL .   (rule 334)
    function_specifier  ->  VIRTUAL . '/' PURE   (rule 339)

    '/' 	shift, and go to state 629

    $default	reduce using rule 334 (function_specifier)



state 214

    asm_definition  ->  ASM . '(' string ')' ';'   (rule 378)
    reserved_id  ->  ASM .   (rule 675)

    '(' 	shift, and go to state 630

    $default	reduce using rule 675 (reserved_id)



state 215

    reserved_id  ->  BREAK .   (rule 676)

    $default	reduce using rule 676 (reserved_id)



state 216

    labeled_statement  ->  CASE . constant_expression ':' looping_statement   (rule 231)
    reserved_id  ->  CASE .   (rule 677)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 677 (reserved_id)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 163
    conditional_expression	go to state 164
    constant_expression	go to state 631
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 217

    handler  ->  CATCH . '(' exception_declaration ')' compound_statement   (rule 578)

    '(' 	shift, and go to state 632



state 218

    postfix_expression  ->  CONST_CAST . '<' type_id '>' '(' expression ')'   (rule 101)
    reserved_id  ->  CONST_CAST .   (rule 678)

    '<' 	shift, and go to state 432

    $default	reduce using rule 678 (reserved_id)



state 219

    reserved_id  ->  CONTINUE .   (rule 679)

    $default	reduce using rule 679 (reserved_id)



state 220

    labeled_statement  ->  DEFAULT . ':' looping_statement   (rule 232)
    reserved_id  ->  DEFAULT .   (rule 680)

    ':' 	shift, and go to state 633

    $default	reduce using rule 680 (reserved_id)



state 221

    delete_expression  ->  DELETE . cast_expression   (rule 121)
    reserved_id  ->  DELETE .   (rule 681)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 681 (reserved_id)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 433
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 222

    iteration_statement  ->  DO . looping_statement WHILE '(' expression ')' ';'   (rule 245)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 634
    start_search	go to state 635



state 223

    postfix_expression  ->  DYNAMIC_CAST . '<' type_id '>' '(' expression ')'   (rule 98)
    reserved_id  ->  DYNAMIC_CAST .   (rule 682)

    '<' 	shift, and go to state 434

    $default	reduce using rule 682 (reserved_id)



state 224

    reserved_id  ->  ELSE .   (rule 683)

    $default	reduce using rule 683 (reserved_id)



state 225

    iteration_statement  ->  FOR . '(' for_init_statement condition.opt ';' expression.opt ')' looping_statement   (rule 246)
    reserved_id  ->  FOR .   (rule 684)

    '(' 	shift, and go to state 636

    $default	reduce using rule 684 (reserved_id)



state 226

    reserved_id  ->  GOTO .   (rule 685)

    $default	reduce using rule 685 (reserved_id)



state 227

    selection_statement  ->  IF . '(' condition ')' looping_statement   (rule 238)
    selection_statement  ->  IF . '(' condition ')' looping_statement ELSE looping_statement   (rule 239)
    reserved_id  ->  IF .   (rule 686)

    '(' 	shift, and go to state 637

    $default	reduce using rule 686 (reserved_id)



state 228

    new_expression  ->  NEW . new_type_id new_initializer.opt   (rule 122)
    new_expression  ->  NEW . parameters_clause new_type_id new_initializer.opt   (rule 123)
    new_expression  ->  NEW . parameters_clause   (rule 124)
    new_expression  ->  NEW . parameters_clause parameters_clause new_initializer.opt   (rule 125)
    reserved_id  ->  NEW .   (rule 687)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 436

    $default	reduce using rule 687 (reserved_id)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    new_type_id	go to state 438
    type_specifier	go to state 439
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    parameters_clause	go to state 444
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 229

    conversion_function_id  ->  OPERATOR . conversion_type_id   (rule 497)
    operator_function_id  ->  OPERATOR . operator   (rule 511)
    terminated_tree_argument  ->  OPERATOR . ';'   (rule 658)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    DELETE	shift, and go to state 445
    NEW 	shift, and go to state 446
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    SHL 	shift, and go to state 447
    SHR 	shift, and go to state 448
    EQ  	shift, and go to state 449
    NE  	shift, and go to state 450
    LE  	shift, and go to state 451
    GE  	shift, and go to state 452
    LOG_AND	shift, and go to state 453
    LOG_OR	shift, and go to state 454
    INC 	shift, and go to state 455
    DEC 	shift, and go to state 456
    ARROW	shift, and go to state 457
    ARROW_STAR	shift, and go to state 458
    ASS_ADD	shift, and go to state 459
    ASS_AND	shift, and go to state 460
    ASS_DIV	shift, and go to state 461
    ASS_MOD	shift, and go to state 462
    ASS_MUL	shift, and go to state 463
    ASS_OR	shift, and go to state 464
    ASS_SHL	shift, and go to state 465
    ASS_SHR	shift, and go to state 466
    ASS_SUB	shift, and go to state 467
    ASS_XOR	shift, and go to state 468
    Identifier	shift, and go to state 43
    '[' 	shift, and go to state 469
    '(' 	shift, and go to state 470
    ';' 	shift, and go to state 638
    '+' 	shift, and go to state 471
    '-' 	shift, and go to state 472
    '*' 	shift, and go to state 473
    '/' 	shift, and go to state 474
    '%' 	shift, and go to state 475
    '^' 	shift, and go to state 476
    '&' 	shift, and go to state 477
    '|' 	shift, and go to state 478
    '~' 	shift, and go to state 479
    '!' 	shift, and go to state 480
    '=' 	shift, and go to state 481
    '<' 	shift, and go to state 482
    '>' 	shift, and go to state 483
    ',' 	shift, and go to state 484

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 485
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_type_id	go to state 486
    operator	go to state 487
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 230

    postfix_expression  ->  REINTERPRET_CAST . '<' type_id '>' '(' expression ')'   (rule 100)
    reserved_id  ->  REINTERPRET_CAST .   (rule 688)

    '<' 	shift, and go to state 488

    $default	reduce using rule 688 (reserved_id)



state 231

    reserved_id  ->  RETURN .   (rule 689)

    $default	reduce using rule 689 (reserved_id)



state 232

    unary_expression  ->  SIZEOF . unary_expression   (rule 116)
    reserved_id  ->  SIZEOF .   (rule 690)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 690 (reserved_id)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 489
    postfix_expression	go to state 148
    unary_expression	go to state 490
    delete_expression	go to state 150
    new_expression	go to state 151
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 233

    postfix_expression  ->  STATIC_CAST . '<' type_id '>' '(' expression ')'   (rule 99)
    reserved_id  ->  STATIC_CAST .   (rule 691)

    '<' 	shift, and go to state 491

    $default	reduce using rule 691 (reserved_id)



state 234

    selection_statement  ->  SWITCH . '(' condition ')' looping_statement   (rule 240)
    reserved_id  ->  SWITCH .   (rule 692)

    '(' 	shift, and go to state 639

    $default	reduce using rule 692 (reserved_id)



state 235

    throw_expression  ->  THROW .   (rule 580)
    throw_expression  ->  THROW . assignment_expression   (rule 581)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 580 (throw_expression)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 640
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 236

    function_try_block  ->  TRY . function_block handler_seq   (rule 451)
    reserved_id  ->  TRY .   (rule 693)

    ':' 	shift, and go to state 641

    $default	reduce using rule 693 (reserved_id)

    function_block	go to state 642
    ctor_initializer.opt	go to state 643
    ctor_initializer	go to state 644



state 237

    postfix_expression  ->  TYPEID . parameters_clause   (rule 102)
    reserved_id  ->  TYPEID .   (rule 694)

    '(' 	shift, and go to state 130

    $default	reduce using rule 694 (reserved_id)

    parameters_clause	go to state 492



state 238

    iteration_statement  ->  WHILE . '(' condition ')' looping_statement   (rule 244)
    reserved_id  ->  WHILE .   (rule 695)

    '(' 	shift, and go to state 645

    $default	reduce using rule 695 (reserved_id)



state 239

    special_parameter_declaration  ->  ELLIPSIS .   (rule 430)

    $default	reduce using rule 430 (special_parameter_declaration)



state 240

    global_scope  ->  SCOPE .   (rule 30)
    token.punct  ->  SCOPE .   (rule 697)

    $default	reduce using rule 30 (global_scope)



state 241

    token.punct  ->  SHL .   (rule 698)

    $default	reduce using rule 698 (token.punct)



state 242

    token.punct  ->  SHR .   (rule 699)

    $default	reduce using rule 699 (token.punct)



state 243

    token.punct  ->  EQ .   (rule 700)

    $default	reduce using rule 700 (token.punct)



state 244

    token.punct  ->  NE .   (rule 701)

    $default	reduce using rule 701 (token.punct)



state 245

    token.punct  ->  LE .   (rule 702)

    $default	reduce using rule 702 (token.punct)



state 246

    token.punct  ->  GE .   (rule 703)

    $default	reduce using rule 703 (token.punct)



state 247

    token.punct  ->  LOG_AND .   (rule 704)

    $default	reduce using rule 704 (token.punct)



state 248

    token.punct  ->  LOG_OR .   (rule 705)

    $default	reduce using rule 705 (token.punct)



state 249

    unary_expression  ->  INC . cast_expression   (rule 108)
    token.punct  ->  INC .   (rule 706)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 706 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 493
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 250

    unary_expression  ->  DEC . cast_expression   (rule 109)
    token.punct  ->  DEC .   (rule 707)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 707 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 494
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 251

    token.punct  ->  ARROW .   (rule 708)

    $default	reduce using rule 708 (token.punct)



state 252

    token.punct  ->  ARROW_STAR .   (rule 709)

    $default	reduce using rule 709 (token.punct)



state 253

    token.punct  ->  DOT_STAR .   (rule 710)

    $default	reduce using rule 710 (token.punct)



state 254

    token.punct  ->  ASS_ADD .   (rule 711)

    $default	reduce using rule 711 (token.punct)



state 255

    token.punct  ->  ASS_AND .   (rule 712)

    $default	reduce using rule 712 (token.punct)



state 256

    token.punct  ->  ASS_DIV .   (rule 713)

    $default	reduce using rule 713 (token.punct)



state 257

    token.punct  ->  ASS_MOD .   (rule 714)

    $default	reduce using rule 714 (token.punct)



state 258

    token.punct  ->  ASS_MUL .   (rule 715)

    $default	reduce using rule 715 (token.punct)



state 259

    token.punct  ->  ASS_OR .   (rule 716)

    $default	reduce using rule 716 (token.punct)



state 260

    token.punct  ->  ASS_SHL .   (rule 717)

    $default	reduce using rule 717 (token.punct)



state 261

    token.punct  ->  ASS_SHR .   (rule 718)

    $default	reduce using rule 718 (token.punct)



state 262

    token.punct  ->  ASS_SUB .   (rule 719)

    $default	reduce using rule 719 (token.punct)



state 263

    token.punct  ->  ASS_XOR .   (rule 720)

    $default	reduce using rule 720 (token.punct)



state 264

    compound_tree_statement  ->  '{' . tree_statement_seq.opt '}'   (rule 633)
    compound_tree_statement  ->  '{' . tree_statement_seq.opt looping_unterminated_tree_argument '}'   (rule 634)
    compound_tree_statement  ->  '{' . tree_statement_seq.opt looping_unterminated_tree_argument '#' bang error_ecarb   (rule 635)
    compound_tree_statement  ->  '{' . tree_statement_seq.opt looping_tree_statement '#' bang error_ecarb   (rule 636)

    $default	reduce using rule 637 (tree_statement_seq.opt)

    tree_statement_seq.opt	go to state 646



state 265

    abstract_expression  ->  '[' . expression.opt ']'   (rule 81)
    token.punct  ->  '[' .   (rule 721)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 721 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression.opt	go to state 497
    expression	go to state 498
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 266

    token.punct  ->  ']' .   (rule 722)

    $default	reduce using rule 722 (token.punct)



state 267

    bit_field_declaration  ->  ':' . bit_field_width   (rule 481)
    token.punct  ->  ':' .   (rule 723)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 723 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 647
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_width	go to state 648
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 268

    token.punct  ->  '?' .   (rule 724)

    $default	reduce using rule 724 (token.punct)



state 269

    token.punct  ->  '.' .   (rule 725)

    $default	reduce using rule 725 (token.punct)



state 270

    unary_expression  ->  '+' . cast_expression   (rule 112)
    token.punct  ->  '+' .   (rule 726)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 726 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 505
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 271

    unary_expression  ->  '-' . cast_expression   (rule 113)
    token.punct  ->  '-' .   (rule 727)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 727 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 506
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 272

    token.punct  ->  '%' .   (rule 728)

    $default	reduce using rule 728 (token.punct)



state 273

    token.punct  ->  '^' .   (rule 729)

    $default	reduce using rule 729 (token.punct)



state 274

    token.punct  ->  '|' .   (rule 730)

    $default	reduce using rule 730 (token.punct)



state 275

    unary_expression  ->  '~' . cast_expression   (rule 115)
    token.punct  ->  '~' .   (rule 731)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 731 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 507
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 276

    unary_expression  ->  '!' . cast_expression   (rule 114)
    storage_class_specifier  ->  '!' . STATIC   (rule 331)
    function_specifier  ->  '!' . INLINE   (rule 335)
    function_specifier  ->  '!' . VIRTUAL   (rule 338)
    token.punct  ->  '!' .   (rule 732)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    INLINE	shift, and go to state 649
    STATIC	shift, and go to state 650
    TEMPLATE	shift, and go to state 108
    VIRTUAL	shift, and go to state 651
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 732 (token.punct)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 508
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 277

    token.punct  ->  '=' .   (rule 733)

    $default	reduce using rule 733 (token.punct)



state 278

    token.punct  ->  '<' .   (rule 734)

    $default	reduce using rule 734 (token.punct)



state 279

    token.punct  ->  '>' .   (rule 735)

    $default	reduce using rule 735 (token.punct)



state 280

    token.punct  ->  '@' .   (rule 739)

    $default	reduce using rule 739 (token.punct)



state 281

    token.punct  ->  '$' .   (rule 740)

    $default	reduce using rule 740 (token.punct)



state 282

    token.punct  ->  '\'' .   (rule 736)

    $default	reduce using rule 736 (token.punct)



state 283

    token.punct  ->  '"' .   (rule 737)

    $default	reduce using rule 737 (token.punct)



state 284

    token.punct  ->  '\\' .   (rule 738)

    $default	reduce using rule 738 (token.punct)



state 285

    identifier  ->  identifier_word .   (rule 22)
    labeled_statement  ->  identifier_word . ':' looping_statement   (rule 230)

    ':' 	shift, and go to state 652

    $default	reduce using rule 22 (identifier)



state 286

    multiplicative_expression  ->  multiplicative_expression . star_ptr_operator pm_expression   (rule 141)
    multiplicative_expression  ->  multiplicative_expression . '/' pm_expression   (rule 142)
    multiplicative_expression  ->  multiplicative_expression . '%' pm_expression   (rule 143)
    additive_expression  ->  multiplicative_expression .   (rule 144)
    abstract_pointer_declaration  ->  multiplicative_expression . star_ptr_operator ptr_operator_seq.opt   (rule 424)

    '*' 	shift, and go to state 133
    '/' 	shift, and go to state 528
    '%' 	shift, and go to state 529

    $default	reduce using rule 144 (additive_expression)

    star_ptr_operator	go to state 653



state 287

    and_expression  ->  and_expression . '&' equality_expression   (rule 159)
    exclusive_or_expression  ->  and_expression .   (rule 160)
    abstract_parameter_declaration  ->  and_expression . '&'   (rule 426)
    abstract_parameter_declaration  ->  and_expression . '&' abstract_pointer_declaration   (rule 427)

    '&' 	shift, and go to state 654

    $default	reduce using rule 160 (exclusive_or_expression)



state 288

    logical_or_expression  ->  logical_or_expression . LOG_OR logical_and_expression   (rule 167)
    conditional_expression  ->  logical_or_expression .   (rule 168)
    conditional_expression  ->  logical_or_expression . '?' expression ':' assignment_expression   (rule 169)
    assignment_expression  ->  logical_or_expression . assignment_operator assignment_expression   (rule 171)
    assignment_expression  ->  logical_or_expression . '=' braced_initializer   (rule 172)

    LOG_OR	shift, and go to state 545
    ASS_ADD	shift, and go to state 655
    ASS_AND	shift, and go to state 656
    ASS_DIV	shift, and go to state 657
    ASS_MOD	shift, and go to state 658
    ASS_MUL	shift, and go to state 659
    ASS_OR	shift, and go to state 660
    ASS_SHL	shift, and go to state 661
    ASS_SHR	shift, and go to state 662
    ASS_SUB	shift, and go to state 663
    ASS_XOR	shift, and go to state 664
    '?' 	shift, and go to state 546
    '=' 	shift, and go to state 665

    $default	reduce using rule 168 (conditional_expression)

    assignment_operator	go to state 666



state 289

    assignment_expression  ->  conditional_expression .   (rule 170)

    $default	reduce using rule 170 (assignment_expression)



state 290

    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    func_definition  ->  assignment_expression . function_try_block   (rule 443)
    func_definition  ->  assignment_expression . function_body   (rule 444)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)
    tree_arguments.head  ->  assignment_expression .   (rule 606)

    TRY 	shift, and go to state 667
    '{' 	shift, and go to state 668
    ':' 	shift, and go to state 669

    $default	reduce using rule 606 (tree_arguments.head)

    compound_statement	go to state 670
    function_try_block	go to state 671
    function_body	go to state 672
    object_statements_clause	go to state 673



state 291

    terminated_tree_argument  ->  labeled_statement .   (rule 647)

    $default	reduce using rule 647 (terminated_tree_argument)



state 292

    terminated_tree_argument  ->  selection_statement .   (rule 652)

    $default	reduce using rule 652 (terminated_tree_argument)



state 293

    terminated_tree_argument  ->  iteration_statement .   (rule 646)

    $default	reduce using rule 646 (terminated_tree_argument)



state 294

    decl_specifier_prefix  ->  decl_specifier_affix .   (rule 325)

    $default	reduce using rule 325 (decl_specifier_prefix)



state 295

    func_definition  ->  decl_specifier_prefix . func_definition   (rule 445)
    ctor_definition  ->  decl_specifier_prefix . ctor_definition   (rule 448)
    template_declaration  ->  decl_specifier_prefix . template_declaration   (rule 554)
    explicit_specialization  ->  decl_specifier_prefix . explicit_specialization   (rule 574)
    tree_argument.ctors  ->  decl_specifier_prefix . tree_argument.ctors   (rule 603)
    tree_argument.ctors_comma_most  ->  decl_specifier_prefix . tree_argument.ctors_comma_most   (rule 610)
    tree_argument.misc  ->  decl_specifier_prefix .   (rule 617)
    tree_argument.misc  ->  decl_specifier_prefix . assignment_expression   (rule 620)
    tree_argument.misc  ->  decl_specifier_prefix . tree_argument.misc   (rule 621)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 674
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 617 (tree_argument.misc)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 675
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 295
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    func_definition	go to state 676
    ctor_definition	go to state 677
    constructor_head	go to state 313
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 678
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 679
    throw_expression	go to state 325
    tree_argument.ctors	go to state 680
    tree_argument.ctors_comma_most	go to state 681
    tree_argument.misc	go to state 682
    segment	go to state 58
    utility	go to state 66



state 296

    decl_specifier_affix  ->  storage_class_specifier .   (rule 316)

    $default	reduce using rule 316 (decl_specifier_affix)



state 297

    decl_specifier_affix  ->  function_specifier .   (rule 317)

    $default	reduce using rule 317 (decl_specifier_affix)



state 298

    terminated_tree_argument  ->  namespace_definition .   (rule 651)

    $default	reduce using rule 651 (terminated_tree_argument)



state 299

    terminated_tree_argument  ->  namespace_alias_definition .   (rule 649)

    $default	reduce using rule 649 (terminated_tree_argument)



state 300

    terminated_tree_argument  ->  namespace_declaration .   (rule 650)

    $default	reduce using rule 650 (terminated_tree_argument)



state 301

    terminated_tree_argument  ->  using_directive .   (rule 654)

    $default	reduce using rule 654 (terminated_tree_argument)



state 302

    terminated_tree_argument  ->  asm_definition .   (rule 640)

    $default	reduce using rule 640 (terminated_tree_argument)



state 303

    terminated_tree_argument  ->  linkage_specification .   (rule 648)

    $default	reduce using rule 648 (terminated_tree_argument)



state 304

    tree_argument.misc  ->  init_object_declaration .   (rule 618)

    $default	reduce using rule 618 (tree_argument.misc)



state 305

    unary_expression  ->  ptr_operator . cast_expression   (rule 110)
    ptr_operator_seq  ->  ptr_operator .   (rule 397)
    ptr_operator_seq  ->  ptr_operator . ptr_operator_seq   (rule 398)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 397 (ptr_operator_seq)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 566
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 683
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 306

    abstract_pointer_declaration  ->  ptr_operator_seq .   (rule 423)

    $default	reduce using rule 423 (abstract_pointer_declaration)



state 307

    decl_specifier_affix  ->  cv_qualifier .   (rule 320)

    $default	reduce using rule 320 (decl_specifier_affix)



state 308

    abstract_parameter_declaration  ->  abstract_pointer_declaration .   (rule 425)

    $default	reduce using rule 425 (abstract_parameter_declaration)



state 309

    special_parameter_declaration  ->  abstract_parameter_declaration .   (rule 428)
    special_parameter_declaration  ->  abstract_parameter_declaration . '=' assignment_expression   (rule 429)

    '=' 	shift, and go to state 684

    $default	reduce using rule 428 (special_parameter_declaration)



state 310

    tree_argument.misc  ->  special_parameter_declaration .   (rule 619)

    $default	reduce using rule 619 (tree_argument.misc)



state 311

    tree_arguments.head  ->  func_definition .   (rule 607)

    $default	reduce using rule 607 (tree_arguments.head)



state 312

    tree_argument.most  ->  ctor_definition .   (rule 612)

    $default	reduce using rule 612 (tree_argument.most)



state 313

    ctor_definition  ->  constructor_head . function_try_block   (rule 446)
    ctor_definition  ->  constructor_head . function_body   (rule 447)
    constructor_head  ->  constructor_head . ',' assignment_expression   (rule 450)
    tree_argument.ctors  ->  constructor_head .   (rule 602)
    tree_argument.ctors_comma_most  ->  constructor_head . ',' tree_argument.most   (rule 609)

    TRY 	shift, and go to state 667
    '{' 	shift, and go to state 668
    ',' 	shift, and go to state 685

    $default	reduce using rule 602 (tree_argument.ctors)

    compound_statement	go to state 670
    function_try_block	go to state 686
    function_body	go to state 687



state 314

    unterminated_tree_argument.most  ->  function_try_block .   (rule 663)

    $default	reduce using rule 663 (unterminated_tree_argument.most)



state 315

    unterminated_tree_argument.most  ->  accessibility_specifier .   (rule 661)

    $default	reduce using rule 661 (unterminated_tree_argument.most)



state 316

    bit_field_init_declaration  ->  bit_field_declaration .   (rule 484)
    bit_field_init_declaration  ->  bit_field_declaration . '=' initializer_clause   (rule 485)

    '=' 	shift, and go to state 688

    $default	reduce using rule 484 (bit_field_init_declaration)



state 317

    init_object_declaration  ->  bit_field_init_declaration . object_statements_clause   (rule 389)
    constructor_head  ->  bit_field_init_declaration .   (rule 449)

    ':' 	shift, and go to state 689

    $default	reduce using rule 449 (constructor_head)

    object_statements_clause	go to state 690



state 318

    decl_specifier_affix  ->  access_specifier .   (rule 321)
    accessibility_specifier  ->  access_specifier . ':'   (rule 479)

    ':' 	shift, and go to state 691

    $default	reduce using rule 321 (decl_specifier_affix)



state 319

    terminated_tree_argument  ->  template_declaration .   (rule 653)

    $default	reduce using rule 653 (terminated_tree_argument)



state 320

    template_declaration  ->  template_parameter_clause . declaration   (rule 552)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 350
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 351
    EXPLICIT	shift, and go to state 352
    EXPORT	shift, and go to state 353
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 354
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 356
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 970 (line)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    compound_declaration	go to state 361
    declaration	go to state 692
    specialised_declaration	go to state 364
    block_declaration	go to state 365
    specialised_block_declaration	go to state 366
    simple_declaration	go to state 367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 368
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 369
    namespace_alias_definition	go to state 370
    namespace_declaration	go to state 371
    using_directive	go to state 372
    asm_definition	go to state 373
    linkage_specification	go to state 374
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    function_definition	go to state 378
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 381
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 382
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 384
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 385
    throw_expression	go to state 325
    segment	go to state 58
    meta_control_statement	go to state 386
    syntax_macro_definition	go to state 387
    include_declaration	go to state 388
    utility	go to state 66
    file_dependency_declaration	go to state 389
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 390
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 391
    line	go to state 393



state 321

    unterminated_tree_argument.most  ->  simple_type_parameter .   (rule 666)

    $default	reduce using rule 666 (unterminated_tree_argument.most)



state 322

    terminated_tree_argument  ->  explicit_specialization .   (rule 642)

    $default	reduce using rule 642 (terminated_tree_argument)



state 323

    unterminated_tree_argument.most  ->  handler_seq .   (rule 664)

    $default	reduce using rule 664 (unterminated_tree_argument.most)



state 324

    handler_seq  ->  handler .   (rule 576)
    handler_seq  ->  handler . handler_seq   (rule 577)

    CATCH	shift, and go to state 217

    $default	reduce using rule 576 (handler_seq)

    handler_seq	go to state 693
    handler	go to state 324



state 325

    assignment_expression  ->  throw_expression .   (rule 173)

    $default	reduce using rule 173 (assignment_expression)



state 326

    postfix_tree_expression  ->  postfix_tree_expression '(' tree_argument_list.opt . ')'   (rule 594)

    ')' 	shift, and go to state 694



state 327

    tree_argument_list.opt  ->  tree_argument.ctors .   (rule 601)

    $default	reduce using rule 601 (tree_argument_list.opt)



state 328

    tree_argument_list.opt  ->  tree_arguments.head .   (rule 599)
    tree_argument_list.opt  ->  tree_arguments.head . ',' tree_argument_list.opt   (rule 600)

    ',' 	shift, and go to state 695

    $default	reduce using rule 599 (tree_argument_list.opt)



state 329

    tree_arguments.head  ->  tree_argument.ctors_comma_most .   (rule 608)

    $default	reduce using rule 608 (tree_arguments.head)



state 330

    tree_arguments.head  ->  tree_argument.most .   (rule 605)

    $default	reduce using rule 605 (tree_arguments.head)



state 331

    tree_argument.most  ->  tree_argument.misc .   (rule 615)
    tree_argument.most  ->  tree_argument.misc . ';'   (rule 616)

    ';' 	shift, and go to state 696

    $default	reduce using rule 615 (tree_argument.most)



state 332

    terminated_tree_argument  ->  compound_tree_statement .   (rule 641)

    $default	reduce using rule 641 (terminated_tree_argument)



state 333

    tree_argument.most  ->  terminated_tree_argument .   (rule 611)

    $default	reduce using rule 611 (tree_argument.most)



state 334

    tree_argument.most  ->  unterminated_tree_argument.most .   (rule 613)
    tree_argument.most  ->  unterminated_tree_argument.most . ';'   (rule 614)

    ';' 	shift, and go to state 697

    $default	reduce using rule 613 (tree_argument.most)



state 335

    unterminated_tree_argument.most  ->  reserved_id .   (rule 667)

    $default	reduce using rule 667 (unterminated_tree_argument.most)



state 336

    unterminated_tree_argument.most  ->  token.punct .   (rule 668)

    $default	reduce using rule 668 (unterminated_tree_argument.most)



state 337

    terminated_tree_argument  ->  include_declaration . semi   (rule 645)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 700
    bang	go to state 701



state 338

    terminated_tree_argument  ->  file_dependency_declaration .   (rule 643)

    $default	reduce using rule 643 (terminated_tree_argument)



state 339

    file_dependency_declaration  ->  using_implementation . semi   (rule 914)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 702
    bang	go to state 701



state 340

    file_dependency_declaration  ->  using_interface . semi   (rule 915)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 703
    bang	go to state 701



state 341

    terminated_tree_argument  ->  file_placement_declaration .   (rule 644)

    $default	reduce using rule 644 (terminated_tree_argument)



state 342

    file_placement_declaration  ->  export_implementation . semi   (rule 922)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 704
    bang	go to state 701



state 343

    file_placement_declaration  ->  export_interface . semi   (rule 923)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 705
    bang	go to state 701



state 344

    file_placement_declaration  ->  export_all . semi   (rule 924)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 706
    bang	go to state 701



state 345

    unterminated_tree_argument.most  ->  filespace_specifier .   (rule 662)

    $default	reduce using rule 662 (unterminated_tree_argument.most)



state 346

    postfix_tree_expression  ->  postfix_tree_expression '.' scoped_id .   (rule 595)

    $default	reduce using rule 595 (postfix_tree_expression)



state 347

    meta_nested_id  ->  meta_scope '~' meta_id .   (rule 786)

    $default	reduce using rule 786 (meta_nested_id)



state 348

    translation_unit  ->  declaration_seq.opt util looping_declaration '#' . bang error '#'   (rule 71)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' . bang error ';'   (rule 257)

    $default	reduce using rule 969 (bang)

    bang	go to state 707



state 349

    advance_search  ->  error .   (rule 968)

    $default	reduce using rule 968 (advance_search)



state 350

    namespace_definition  ->  NAMESPACE . scoped_id compound_declaration   (rule 373)
    namespace_definition  ->  NAMESPACE . compound_declaration   (rule 374)
    namespace_alias_definition  ->  NAMESPACE . scoped_id '=' scoped_id ';'   (rule 375)
    namespace_declaration  ->  NAMESPACE . scoped_id ';'   (rule 376)
    filespace_specifier  ->  NAMESPACE . '/' FILE file_name compound_declaration   (rule 955)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 356
    '/' 	shift, and go to state 572

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 573
    compound_declaration	go to state 574
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 351

    declaration  ->  AUTO . meta_control_statement   (rule 271)
    declaration  ->  AUTO . meta_class_specifier semi   (rule 272)
    declaration  ->  AUTO . meta_expression_statement   (rule 273)
    declaration  ->  AUTO . meta_function_definition   (rule 274)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 575
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 576
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 586
    '!' 	shift, and go to state 587

    $default	reduce using rule 970 (line)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_specifier	go to state 708
    meta_class_key	go to state 592
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_function_definition	go to state 709
    meta_control_statement	go to state 710
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 599
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 711
    utility	go to state 66
    line	go to state 393



state 352

    function_specifier  ->  EXPLICIT .   (rule 332)
    syntax_macro_definition  ->  EXPLICIT . AUTO meta_type identifier '(' syntax_macro_parameter_list ')' compound_tree_statement   (rule 888)
    syntax_macro_definition  ->  EXPLICIT . AUTO meta_type identifier '(' syntax_macro_parameter_list ')' '[' ']' compound_tree_statement   (rule 889)
    syntax_macro_definition  ->  EXPLICIT . AUTO meta_type identifier '(' ')' compound_tree_statement   (rule 890)
    syntax_macro_definition  ->  EXPLICIT . AUTO meta_type identifier '(' ')' '[' ']' compound_tree_statement   (rule 891)

    AUTO	shift, and go to state 712

    $default	reduce using rule 332 (function_specifier)



state 353

    template_declaration  ->  EXPORT . template_declaration   (rule 553)
    file_placement_declaration  ->  EXPORT . '/' NOIMPLEMENTATION semi   (rule 925)
    file_placement_declaration  ->  EXPORT . '/' UTILITY semi   (rule 926)
    export_implementation  ->  EXPORT . '/' IMPLEMENTATION implementation_file   (rule 927)
    export_implementation  ->  EXPORT . '/' IMPLEMENTATION '=' implementation_file   (rule 928)
    export_interface  ->  EXPORT . '/' INTERFACE interface_file   (rule 929)
    export_interface  ->  EXPORT . '/' INTERFACE '=' interface_file   (rule 930)
    export_all  ->  EXPORT . '/' ALL interface_file   (rule 931)
    export_all  ->  EXPORT . '/' ALL '=' interface_file   (rule 932)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 617
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    '/' 	shift, and go to state 618
    '!' 	shift, and go to state 549

    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 619
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    cv_qualifier	go to state 307
    access_specifier	go to state 412
    template_declaration	go to state 620
    template_parameter_clause	go to state 320



state 354

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    abstract_expression  ->  TEMPLATE . parenthesis_clause   (rule 82)
    specialised_declaration  ->  TEMPLATE . specialised_declaration   (rule 283)
    specialised_block_declaration  ->  TEMPLATE . specialised_block_declaration   (rule 289)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_parameter_clause  ->  TEMPLATE . '<' template_parameter_list '>'   (rule 555)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)
    explicit_specialization  ->  TEMPLATE . '<' '>' declaration   (rule 573)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 713
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 714
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 715
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 549
    '<' 	shift, and go to state 624

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    specialised_declaration	go to state 716
    specialised_block_declaration	go to state 717
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 369
    namespace_alias_definition	go to state 370
    namespace_declaration	go to state 371
    using_directive	go to state 372
    asm_definition	go to state 373
    linkage_specification	go to state 374
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 431
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 355

    asm_definition  ->  ASM . '(' string ')' ';'   (rule 378)

    '(' 	shift, and go to state 630



state 356

    compound_declaration  ->  '{' . nest declaration_seq.opt '}'   (rule 253)
    compound_declaration  ->  '{' . nest declaration_seq.opt util looping_declaration '#' bang error_ecarb   (rule 254)

    $default	reduce using rule 972 (nest)

    nest	go to state 718



state 357

    simple_declaration  ->  ';' .   (rule 290)

    $default	reduce using rule 290 (simple_declaration)



state 358

    bit_field_declaration  ->  ':' . bit_field_width   (rule 481)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 647
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_width	go to state 648
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 359

    unary_expression  ->  '!' . cast_expression   (rule 114)
    storage_class_specifier  ->  '!' . STATIC   (rule 331)
    function_specifier  ->  '!' . INLINE   (rule 335)
    function_specifier  ->  '!' . VIRTUAL   (rule 338)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    INLINE	shift, and go to state 649
    STATIC	shift, and go to state 650
    TEMPLATE	shift, and go to state 108
    VIRTUAL	shift, and go to state 651
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 508
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 360

    init_declarations  ->  assignment_expression . ',' init_declaration   (rule 380)
    init_declaration  ->  assignment_expression .   (rule 385)
    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    func_definition  ->  assignment_expression . function_try_block   (rule 443)
    func_definition  ->  assignment_expression . function_body   (rule 444)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)

    TRY 	shift, and go to state 667
    '{' 	shift, and go to state 668
    ':' 	shift, and go to state 669
    ',' 	shift, and go to state 719

    $default	reduce using rule 385 (init_declaration)

    compound_statement	go to state 670
    function_try_block	go to state 671
    function_body	go to state 672
    object_statements_clause	go to state 673



state 361

    declaration  ->  compound_declaration .   (rule 269)

    $default	reduce using rule 269 (declaration)



state 362

    looping_declaration  ->  start_search1 looped_declaration .   (rule 258)

    $default	reduce using rule 258 (looping_declaration)



state 363

    looped_declaration  ->  declaration .   (rule 259)

    $default	reduce using rule 259 (looped_declaration)



state 364

    declaration  ->  specialised_declaration .   (rule 267)

    $default	reduce using rule 267 (declaration)



state 365

    declaration  ->  block_declaration .   (rule 263)

    $default	reduce using rule 263 (declaration)



state 366

    block_declaration  ->  specialised_block_declaration .   (rule 285)

    $default	reduce using rule 285 (block_declaration)



state 367

    block_declaration  ->  simple_declaration .   (rule 284)

    $default	reduce using rule 284 (block_declaration)



state 368

    simple_declaration  ->  decl_specifier_prefix . simple_declaration   (rule 294)
    func_definition  ->  decl_specifier_prefix . func_definition   (rule 445)
    ctor_definition  ->  decl_specifier_prefix . ctor_definition   (rule 448)
    template_declaration  ->  decl_specifier_prefix . template_declaration   (rule 554)
    explicit_specialization  ->  decl_specifier_prefix . explicit_specialization   (rule 574)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 674
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    simple_declaration	go to state 720
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 368
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    func_definition	go to state 676
    ctor_definition	go to state 677
    constructor_head	go to state 381
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 678
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 679
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 369

    specialised_declaration  ->  namespace_definition .   (rule 282)

    $default	reduce using rule 282 (specialised_declaration)



state 370

    specialised_block_declaration  ->  namespace_alias_definition .   (rule 287)

    $default	reduce using rule 287 (specialised_block_declaration)



state 371

    specialised_declaration  ->  namespace_declaration .   (rule 281)

    $default	reduce using rule 281 (specialised_declaration)



state 372

    specialised_block_declaration  ->  using_directive .   (rule 288)

    $default	reduce using rule 288 (specialised_block_declaration)



state 373

    specialised_block_declaration  ->  asm_definition .   (rule 286)

    $default	reduce using rule 286 (specialised_block_declaration)



state 374

    specialised_declaration  ->  linkage_specification .   (rule 280)

    $default	reduce using rule 280 (specialised_declaration)



state 375

    simple_declaration  ->  init_declarations . ';'   (rule 293)
    init_declarations  ->  init_declarations . ',' init_declaration   (rule 381)

    ';' 	shift, and go to state 721
    ',' 	shift, and go to state 722



state 376

    simple_declaration  ->  init_declaration . ';'   (rule 291)

    ';' 	shift, and go to state 723



state 377

    init_declarations  ->  init_object_declaration . ',' init_declaration   (rule 382)
    init_declaration  ->  init_object_declaration .   (rule 387)

    ',' 	shift, and go to state 724

    $default	reduce using rule 387 (init_declaration)



state 378

    declaration  ->  function_definition .   (rule 264)

    $default	reduce using rule 264 (declaration)



state 379

    function_definition  ->  func_definition .   (rule 442)

    $default	reduce using rule 442 (function_definition)



state 380

    function_definition  ->  ctor_definition .   (rule 441)

    $default	reduce using rule 441 (function_definition)



state 381

    simple_declaration  ->  constructor_head . ',' assignment_expression ';'   (rule 292)
    init_declarations  ->  constructor_head . ',' bit_field_init_declaration   (rule 383)
    init_declarations  ->  constructor_head . ',' init_object_declaration   (rule 384)
    ctor_definition  ->  constructor_head . function_try_block   (rule 446)
    ctor_definition  ->  constructor_head . function_body   (rule 447)
    constructor_head  ->  constructor_head . ',' assignment_expression   (rule 450)

    TRY 	shift, and go to state 667
    '{' 	shift, and go to state 668
    ',' 	shift, and go to state 725

    compound_statement	go to state 670
    function_try_block	go to state 686
    function_body	go to state 687



state 382

    declaration  ->  accessibility_specifier .   (rule 268)

    $default	reduce using rule 268 (declaration)



state 383

    init_declaration  ->  bit_field_init_declaration .   (rule 386)
    init_object_declaration  ->  bit_field_init_declaration . object_statements_clause   (rule 389)
    constructor_head  ->  bit_field_init_declaration .   (rule 449)

    ':' 	shift, and go to state 689

    $default	reduce using rule 386 (init_declaration)

    object_statements_clause	go to state 690



state 384

    declaration  ->  template_declaration .   (rule 265)

    $default	reduce using rule 265 (declaration)



state 385

    declaration  ->  explicit_specialization .   (rule 266)

    $default	reduce using rule 266 (declaration)



state 386

    declaration  ->  meta_control_statement .   (rule 270)

    $default	reduce using rule 270 (declaration)



state 387

    declaration  ->  syntax_macro_definition .   (rule 275)

    $default	reduce using rule 275 (declaration)



state 388

    declaration  ->  include_declaration . semi   (rule 276)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 726
    bang	go to state 701



state 389

    declaration  ->  file_dependency_declaration .   (rule 277)

    $default	reduce using rule 277 (declaration)



state 390

    declaration  ->  file_placement_declaration .   (rule 278)

    $default	reduce using rule 278 (declaration)



state 391

    declaration  ->  filespace_specifier . semi   (rule 279)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 727
    bang	go to state 701



state 392

    looped_declaration  ->  advance_search . '+' looped_declaration   (rule 260)
    looped_declaration  ->  advance_search . '-'   (rule 261)

    '+' 	shift, and go to state 728
    '-' 	shift, and go to state 729



state 393

    meta_control_statement  ->  line . meta_control_statement1   (rule 808)

    BREAK	shift, and go to state 730
    CASE	shift, and go to state 731
    CONTINUE	shift, and go to state 732
    DEFAULT	shift, and go to state 733
    DO  	shift, and go to state 734
    FOR 	shift, and go to state 735
    GOTO	shift, and go to state 736
    IF  	shift, and go to state 737
    RETURN	shift, and go to state 738
    SWITCH	shift, and go to state 739
    WHILE	shift, and go to state 740

    jump_statement	go to state 741
    meta_control_statement1	go to state 742



state 394

    storage_class_specifier  ->  EXTERN .   (rule 330)

    $default	reduce using rule 330 (storage_class_specifier)



state 395

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    abstract_expression  ->  TEMPLATE . parenthesis_clause   (rule 82)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 623
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 549

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 431
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 396

    decl_specifier_affix  ->  USING .   (rule 322)

    $default	reduce using rule 322 (decl_specifier_affix)



state 397

    templated_throw_expression  ->  THROW .   (rule 582)
    templated_throw_expression  ->  THROW . templated_assignment_expression   (rule 583)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 582 (templated_throw_expression)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 744
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 398

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    templated_relational_expression  ->  shift_expression .   (rule 190)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 190 (templated_relational_expression)



state 399

    templated_relational_expression  ->  templated_relational_expression . '<' shift_expression   (rule 191)
    templated_relational_expression  ->  templated_relational_expression . LE shift_expression   (rule 192)
    templated_relational_expression  ->  templated_relational_expression . GE shift_expression   (rule 193)
    templated_equality_expression  ->  templated_relational_expression .   (rule 194)

    LE  	shift, and go to state 745
    GE  	shift, and go to state 746
    '<' 	shift, and go to state 747

    $default	reduce using rule 194 (templated_equality_expression)



state 400

    templated_equality_expression  ->  templated_equality_expression . EQ templated_relational_expression   (rule 195)
    templated_equality_expression  ->  templated_equality_expression . NE templated_relational_expression   (rule 196)
    templated_and_expression  ->  templated_equality_expression .   (rule 197)

    EQ  	shift, and go to state 748
    NE  	shift, and go to state 749

    $default	reduce using rule 197 (templated_and_expression)



state 401

    templated_and_expression  ->  templated_and_expression . '&' templated_equality_expression   (rule 198)
    templated_exclusive_or_expression  ->  templated_and_expression .   (rule 199)
    templated_abstract_declaration  ->  templated_and_expression . '&'   (rule 439)
    templated_abstract_declaration  ->  templated_and_expression . '&' abstract_pointer_declaration   (rule 440)

    '&' 	shift, and go to state 750

    $default	reduce using rule 199 (templated_exclusive_or_expression)



state 402

    templated_exclusive_or_expression  ->  templated_exclusive_or_expression . '^' templated_and_expression   (rule 200)
    templated_inclusive_or_expression  ->  templated_exclusive_or_expression .   (rule 201)

    '^' 	shift, and go to state 751

    $default	reduce using rule 201 (templated_inclusive_or_expression)



state 403

    templated_inclusive_or_expression  ->  templated_inclusive_or_expression . '|' templated_exclusive_or_expression   (rule 202)
    templated_logical_and_expression  ->  templated_inclusive_or_expression .   (rule 203)

    '|' 	shift, and go to state 752

    $default	reduce using rule 203 (templated_logical_and_expression)



state 404

    templated_logical_and_expression  ->  templated_logical_and_expression . LOG_AND templated_inclusive_or_expression   (rule 204)
    templated_logical_or_expression  ->  templated_logical_and_expression .   (rule 205)

    LOG_AND	shift, and go to state 753

    $default	reduce using rule 205 (templated_logical_or_expression)



state 405

    templated_logical_or_expression  ->  templated_logical_or_expression . LOG_OR templated_logical_and_expression   (rule 206)
    templated_conditional_expression  ->  templated_logical_or_expression .   (rule 207)
    templated_conditional_expression  ->  templated_logical_or_expression . '?' templated_expression ':' templated_assignment_expression   (rule 208)
    templated_assignment_expression  ->  templated_logical_or_expression . assignment_operator templated_assignment_expression   (rule 210)

    LOG_OR	shift, and go to state 754
    ASS_ADD	shift, and go to state 655
    ASS_AND	shift, and go to state 656
    ASS_DIV	shift, and go to state 657
    ASS_MOD	shift, and go to state 658
    ASS_MUL	shift, and go to state 659
    ASS_OR	shift, and go to state 660
    ASS_SHL	shift, and go to state 661
    ASS_SHR	shift, and go to state 662
    ASS_SUB	shift, and go to state 663
    ASS_XOR	shift, and go to state 664
    '?' 	shift, and go to state 755
    '=' 	shift, and go to state 756

    $default	reduce using rule 207 (templated_conditional_expression)

    assignment_operator	go to state 757



state 406

    templated_assignment_expression  ->  templated_conditional_expression .   (rule 209)

    $default	reduce using rule 209 (templated_assignment_expression)



state 407

    templated_parameter_declaration  ->  templated_assignment_expression .   (rule 434)

    $default	reduce using rule 434 (templated_parameter_declaration)



state 408

    templated_parameter_declaration  ->  decl_specifier_prefix . templated_parameter_declaration   (rule 437)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 401
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 407
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 408
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 409
    templated_parameter_declaration	go to state 758
    templated_abstract_declaration	go to state 411
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 409

    templated_abstract_declaration  ->  abstract_pointer_declaration .   (rule 438)

    $default	reduce using rule 438 (templated_abstract_declaration)



state 410

    template_argument  ->  templated_parameter_declaration .   (rule 572)

    $default	reduce using rule 572 (template_argument)



state 411

    templated_parameter_declaration  ->  templated_abstract_declaration .   (rule 435)
    templated_parameter_declaration  ->  templated_abstract_declaration . '=' templated_assignment_expression   (rule 436)

    '=' 	shift, and go to state 759

    $default	reduce using rule 435 (templated_parameter_declaration)



state 412

    decl_specifier_affix  ->  access_specifier .   (rule 321)

    $default	reduce using rule 321 (decl_specifier_affix)



state 413

    template_id  ->  TEMPLATE identifier '<' template_argument_list . '>'   (rule 568)
    template_argument_list  ->  template_argument_list . ',' template_argument   (rule 571)

    '>' 	shift, and go to state 760
    ',' 	shift, and go to state 761



state 414

    template_argument_list  ->  template_argument .   (rule 570)

    $default	reduce using rule 570 (template_argument_list)



state 415

    templated_assignment_expression  ->  templated_throw_expression .   (rule 211)

    $default	reduce using rule 211 (templated_assignment_expression)



state 416

    ecarb  ->  bang error . '}'   (rule 958)
    ecarb  ->  bang error . ')'   (rule 959)
    ecarb  ->  bang error . '#'   (rule 960)

    '}' 	shift, and go to state 762
    '#' 	shift, and go to state 763
    ')' 	shift, and go to state 764



state 417

    translation_unit  ->  '$' '{' bang error ecarb .   (rule 75)

    $default	reduce using rule 75 (translation_unit)



state 418

    id  ->  identifier template_test '+' '>' .   (rule 26)

    $default	reduce using rule 26 (id)



state 419

    id  ->  identifier template_test '+' template_argument_list . '>'   (rule 25)
    template_argument_list  ->  template_argument_list . ',' template_argument   (rule 571)

    '>' 	shift, and go to state 765
    ',' 	shift, and go to state 761



state 420

    id_scope  ->  id SCOPE .   (rule 32)

    $default	reduce using rule 32 (id_scope)



state 421

    scoped_id  ->  global_scope nested_id .   (rule 36)

    $default	reduce using rule 36 (scoped_id)



state 422

    nested_id  ->  id_scope nested_id .   (rule 34)

    $default	reduce using rule 34 (nested_id)



state 423

    enumerator_clause  ->  '{' . enumerator_list_ecarb   (rule 358)
    enumerator_clause  ->  '{' . enumerator_list enumerator_list_ecarb   (rule 359)
    enumerator_clause  ->  '{' . enumerator_list ',' enumerator_definition_ecarb   (rule 360)

    '}' 	shift, and go to state 766

    error	reduce using rule 969 (bang)
    STATIC	reduce using rule 969 (bang)
    WHILE	reduce using rule 969 (bang)
    ELLIPSIS	reduce using rule 969 (bang)
    RAMMARG	reduce using rule 969 (bang)
    '#' 	reduce using rule 969 (bang)
    $default	reduce using rule 365 (enumerator_definition_filler)

    enumerator_list_ecarb	go to state 767
    enumerator_definition_filler	go to state 768
    enumerator_list_head	go to state 769
    enumerator_list	go to state 770
    bang	go to state 771



state 424

    elaborated_enum_specifier  ->  ENUM scoped_id .   (rule 355)
    enum_specifier  ->  ENUM scoped_id . enumerator_clause   (rule 356)

    '{' 	shift, and go to state 423

    $default	reduce using rule 355 (elaborated_enum_specifier)

    enumerator_clause	go to state 772



state 425

    enum_specifier  ->  ENUM enumerator_clause .   (rule 357)

    $default	reduce using rule 357 (enum_specifier)



state 426

    elaborated_type_specifier  ->  TYPENAME scoped_id .   (rule 354)

    $default	reduce using rule 354 (elaborated_type_specifier)



state 427

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 427
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 428

    special_function_id  ->  TEMPLATE special_function_id .   (rule 41)

    $default	reduce using rule 41 (special_function_id)



state 429

    suffix_built_in_decl_specifier  ->  TEMPLATE suffix_built_in_decl_specifier .   (rule 299)

    $default	reduce using rule 299 (suffix_built_in_decl_specifier)



state 430

    elaborate_type_specifier  ->  TEMPLATE elaborate_type_specifier .   (rule 348)

    $default	reduce using rule 348 (elaborate_type_specifier)



state 431

    abstract_expression  ->  TEMPLATE parenthesis_clause .   (rule 82)

    $default	reduce using rule 82 (abstract_expression)



state 432

    postfix_expression  ->  CONST_CAST '<' . type_id '>' '(' expression ')'   (rule 101)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    type_id	go to state 774
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 433

    delete_expression  ->  DELETE cast_expression .   (rule 121)

    $default	reduce using rule 121 (delete_expression)



state 434

    postfix_expression  ->  DYNAMIC_CAST '<' . type_id '>' '(' expression ')'   (rule 98)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    type_id	go to state 775
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 435

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 435
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    elaborate_type_specifier	go to state 430
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 436

    type_specifier  ->  '!' . CONST   (rule 343)
    type_specifier  ->  '!' . VOLATILE   (rule 344)

    CONST	shift, and go to state 776
    VOLATILE	shift, and go to state 777



state 437

    simple_type_specifier  ->  scoped_id .   (rule 349)

    $default	reduce using rule 349 (simple_type_specifier)



state 438

    new_expression  ->  NEW new_type_id . new_initializer.opt   (rule 122)

    '(' 	shift, and go to state 778

    $default	reduce using rule 133 (new_initializer.opt)

    new_initializer.opt	go to state 779



state 439

    new_type_id  ->  type_specifier . ptr_operator_seq.opt   (rule 126)
    new_type_id  ->  type_specifier . new_declarator   (rule 127)
    new_type_id  ->  type_specifier . new_type_id   (rule 128)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '[' 	shift, and go to state 780
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '!' 	shift, and go to state 436

    $default	reduce using rule 399 (ptr_operator_seq.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 781
    id_scope	go to state 782
    nested_id	go to state 104
    scoped_id	go to state 437
    new_type_id	go to state 783
    new_declarator	go to state 784
    direct_new_declarator	go to state 785
    type_specifier	go to state 439
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 786
    ptr_operator_seq.opt	go to state 787
    cv_qualifier	go to state 443
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 440

    type_specifier  ->  elaborate_type_specifier .   (rule 341)

    $default	reduce using rule 341 (type_specifier)



state 441

    type_specifier  ->  simple_type_specifier .   (rule 340)

    $default	reduce using rule 340 (type_specifier)



state 442

    simple_type_specifier  ->  built_in_type_specifier .   (rule 350)

    $default	reduce using rule 350 (simple_type_specifier)



state 443

    type_specifier  ->  cv_qualifier .   (rule 342)

    $default	reduce using rule 342 (type_specifier)



state 444

    new_expression  ->  NEW parameters_clause . new_type_id new_initializer.opt   (rule 123)
    new_expression  ->  NEW parameters_clause .   (rule 124)
    new_expression  ->  NEW parameters_clause . parameters_clause new_initializer.opt   (rule 125)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 436

    $default	reduce using rule 124 (new_expression)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    new_type_id	go to state 788
    type_specifier	go to state 439
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    parameters_clause	go to state 789
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 445

    operator  ->  DELETE .   (rule 513)

    $default	reduce using rule 513 (operator)



state 446

    operator  ->  NEW .   (rule 512)

    $default	reduce using rule 512 (operator)



state 447

    operator  ->  SHL .   (rule 535)

    $default	reduce using rule 535 (operator)



state 448

    operator  ->  SHR .   (rule 536)

    $default	reduce using rule 536 (operator)



state 449

    operator  ->  EQ .   (rule 539)

    $default	reduce using rule 539 (operator)



state 450

    operator  ->  NE .   (rule 540)

    $default	reduce using rule 540 (operator)



state 451

    operator  ->  LE .   (rule 541)

    $default	reduce using rule 541 (operator)



state 452

    operator  ->  GE .   (rule 542)

    $default	reduce using rule 542 (operator)



state 453

    operator  ->  LOG_AND .   (rule 543)

    $default	reduce using rule 543 (operator)



state 454

    operator  ->  LOG_OR .   (rule 544)

    $default	reduce using rule 544 (operator)



state 455

    operator  ->  INC .   (rule 545)

    $default	reduce using rule 545 (operator)



state 456

    operator  ->  DEC .   (rule 546)

    $default	reduce using rule 546 (operator)



state 457

    operator  ->  ARROW .   (rule 549)

    $default	reduce using rule 549 (operator)



state 458

    operator  ->  ARROW_STAR .   (rule 548)

    $default	reduce using rule 548 (operator)



state 459

    operator  ->  ASS_ADD .   (rule 527)

    $default	reduce using rule 527 (operator)



state 460

    operator  ->  ASS_AND .   (rule 533)

    $default	reduce using rule 533 (operator)



state 461

    operator  ->  ASS_DIV .   (rule 530)

    $default	reduce using rule 530 (operator)



state 462

    operator  ->  ASS_MOD .   (rule 531)

    $default	reduce using rule 531 (operator)



state 463

    operator  ->  ASS_MUL .   (rule 529)

    $default	reduce using rule 529 (operator)



state 464

    operator  ->  ASS_OR .   (rule 534)

    $default	reduce using rule 534 (operator)



state 465

    operator  ->  ASS_SHL .   (rule 538)

    $default	reduce using rule 538 (operator)



state 466

    operator  ->  ASS_SHR .   (rule 537)

    $default	reduce using rule 537 (operator)



state 467

    operator  ->  ASS_SUB .   (rule 528)

    $default	reduce using rule 528 (operator)



state 468

    operator  ->  ASS_XOR .   (rule 532)

    $default	reduce using rule 532 (operator)



state 469

    operator  ->  '[' . ']'   (rule 551)

    ']' 	shift, and go to state 790



state 470

    operator  ->  '(' . ')'   (rule 550)

    ')' 	shift, and go to state 791



state 471

    operator  ->  '+' .   (rule 514)

    $default	reduce using rule 514 (operator)



state 472

    operator  ->  '-' .   (rule 515)

    $default	reduce using rule 515 (operator)



state 473

    operator  ->  '*' .   (rule 516)

    $default	reduce using rule 516 (operator)



state 474

    operator  ->  '/' .   (rule 517)

    $default	reduce using rule 517 (operator)



state 475

    operator  ->  '%' .   (rule 518)

    $default	reduce using rule 518 (operator)



state 476

    operator  ->  '^' .   (rule 519)

    $default	reduce using rule 519 (operator)



state 477

    operator  ->  '&' .   (rule 520)

    $default	reduce using rule 520 (operator)



state 478

    operator  ->  '|' .   (rule 521)

    $default	reduce using rule 521 (operator)



state 479

    operator  ->  '~' .   (rule 522)

    $default	reduce using rule 522 (operator)



state 480

    type_specifier  ->  '!' . CONST   (rule 343)
    type_specifier  ->  '!' . VOLATILE   (rule 344)
    operator  ->  '!' .   (rule 523)

    CONST	shift, and go to state 776
    VOLATILE	shift, and go to state 777

    $default	reduce using rule 523 (operator)



state 481

    operator  ->  '=' .   (rule 524)

    $default	reduce using rule 524 (operator)



state 482

    operator  ->  '<' .   (rule 525)

    $default	reduce using rule 525 (operator)



state 483

    operator  ->  '>' .   (rule 526)

    $default	reduce using rule 526 (operator)



state 484

    operator  ->  ',' .   (rule 547)

    $default	reduce using rule 547 (operator)



state 485

    conversion_type_id  ->  type_specifier . ptr_operator_seq.opt   (rule 498)
    conversion_type_id  ->  type_specifier . conversion_type_id   (rule 499)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '!' 	shift, and go to state 436

    $default	reduce using rule 399 (ptr_operator_seq.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 781
    id_scope	go to state 782
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 485
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 792
    ptr_operator_seq.opt	go to state 793
    cv_qualifier	go to state 443
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_type_id	go to state 794
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 486

    conversion_function_id  ->  OPERATOR conversion_type_id .   (rule 497)

    $default	reduce using rule 497 (conversion_function_id)



state 487

    operator_function_id  ->  OPERATOR operator .   (rule 511)

    $default	reduce using rule 511 (operator_function_id)



state 488

    postfix_expression  ->  REINTERPRET_CAST '<' . type_id '>' '(' expression ')'   (rule 100)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    type_id	go to state 795
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 489

    primary_expression  ->  abstract_expression .   (rule 79)

    $default	reduce using rule 79 (primary_expression)



state 490

    unary_expression  ->  SIZEOF unary_expression .   (rule 116)

    $default	reduce using rule 116 (unary_expression)



state 491

    postfix_expression  ->  STATIC_CAST '<' . type_id '>' '(' expression ')'   (rule 99)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    type_id	go to state 796
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 492

    postfix_expression  ->  TYPEID parameters_clause .   (rule 102)

    $default	reduce using rule 102 (postfix_expression)



state 493

    unary_expression  ->  INC cast_expression .   (rule 108)

    $default	reduce using rule 108 (unary_expression)



state 494

    unary_expression  ->  DEC cast_expression .   (rule 109)

    $default	reduce using rule 109 (unary_expression)



state 495

    expression_list  ->  expression_list . ',' assignment_expression   (rule 106)
    expression  ->  expression_list . ',' assignment_expression   (rule 188)

    ',' 	shift, and go to state 797



state 496

    expression_list  ->  assignment_expression .   (rule 105)
    expression  ->  assignment_expression .   (rule 187)

    $default	reduce using rule 187 (expression)



state 497

    abstract_expression  ->  '[' expression.opt . ']'   (rule 81)

    ']' 	shift, and go to state 798



state 498

    expression.opt  ->  expression .   (rule 186)

    $default	reduce using rule 186 (expression.opt)



state 499

    parameter_declaration  ->  assignment_expression .   (rule 431)

    $default	reduce using rule 431 (parameter_declaration)



state 500

    parameter_declaration  ->  decl_specifier_prefix . parameter_declaration   (rule 433)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 799
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 501

    parameters_clause  ->  '(' parameter_declaration_clause . ')'   (rule 417)

    ')' 	shift, and go to state 800



state 502

    parameter_declaration_clause  ->  parameter_declaration_list .   (rule 419)
    parameter_declaration_clause  ->  parameter_declaration_list . ELLIPSIS   (rule 420)
    parameter_declaration_list  ->  parameter_declaration_list . ',' parameter_declaration   (rule 422)

    ELLIPSIS	shift, and go to state 801
    ',' 	shift, and go to state 802

    $default	reduce using rule 419 (parameter_declaration_clause)



state 503

    parameter_declaration  ->  special_parameter_declaration .   (rule 432)

    $default	reduce using rule 432 (parameter_declaration)



state 504

    parameter_declaration_list  ->  parameter_declaration .   (rule 421)

    $default	reduce using rule 421 (parameter_declaration_list)



state 505

    unary_expression  ->  '+' cast_expression .   (rule 112)

    $default	reduce using rule 112 (unary_expression)



state 506

    unary_expression  ->  '-' cast_expression .   (rule 113)

    $default	reduce using rule 113 (unary_expression)



state 507

    unary_expression  ->  '~' cast_expression .   (rule 115)

    $default	reduce using rule 115 (unary_expression)



state 508

    unary_expression  ->  '!' cast_expression .   (rule 114)

    $default	reduce using rule 114 (unary_expression)



state 509

    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 509
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 69
    special_function_id	go to state 428
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 510

    scoped_special_function_id  ->  global_scope nested_special_function_id .   (rule 46)

    $default	reduce using rule 46 (scoped_special_function_id)



state 511

    unary_expression  ->  global_scope delete_expression .   (rule 120)

    $default	reduce using rule 120 (unary_expression)



state 512

    unary_expression  ->  global_scope new_expression .   (rule 118)

    $default	reduce using rule 118 (unary_expression)



state 513

    ptr_operator  ->  global_scope nested_ptr_operator .   (rule 396)

    $default	reduce using rule 396 (ptr_operator)



state 514

    destructor_id  ->  TEMPLATE . destructor_id   (rule 38)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 514
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 69
    destructor_id	go to state 803
    special_function_id	go to state 428
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 515

    destructor_id  ->  '~' . id   (rule 37)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 804
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 516

    nested_special_function_id  ->  id_scope destructor_id .   (rule 43)

    $default	reduce using rule 43 (nested_special_function_id)



state 517

    nested_special_function_id  ->  id_scope nested_special_function_id .   (rule 44)

    $default	reduce using rule 44 (nested_special_function_id)



state 518

    nested_ptr_operator  ->  id_scope nested_ptr_operator .   (rule 393)

    $default	reduce using rule 393 (nested_ptr_operator)



state 519

    cast_expression  ->  abstract_expression cast_expression .   (rule 136)

    $default	reduce using rule 136 (cast_expression)



state 520

    postfix_expression  ->  postfix_expression INC .   (rule 96)

    $default	reduce using rule 96 (postfix_expression)



state 521

    postfix_expression  ->  postfix_expression DEC .   (rule 97)

    $default	reduce using rule 97 (postfix_expression)



state 522

    postfix_expression  ->  postfix_expression ARROW . declarator_id   (rule 94)
    postfix_expression  ->  postfix_expression ARROW . scoped_pseudo_destructor_id   (rule 95)

    TEMPLATE	shift, and go to state 805
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 806

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 807
    id_scope	go to state 808
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 812
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 814
    nested_pseudo_destructor_id	go to state 815
    scoped_pseudo_destructor_id	go to state 816
    built_in_type_specifier	go to state 52
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 523

    postfix_expression  ->  postfix_expression '[' . expression.opt ']'   (rule 91)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 185 (expression.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression.opt	go to state 817
    expression	go to state 498
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 524

    postfix_expression  ->  postfix_expression '.' . declarator_id   (rule 92)
    postfix_expression  ->  postfix_expression '.' . scoped_pseudo_destructor_id   (rule 93)

    TEMPLATE	shift, and go to state 805
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 806

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 807
    id_scope	go to state 808
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 818
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 814
    nested_pseudo_destructor_id	go to state 815
    scoped_pseudo_destructor_id	go to state 819
    built_in_type_specifier	go to state 52
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 525

    postfix_expression  ->  postfix_expression parenthesis_clause . mark_type1 '-'   (rule 87)
    postfix_expression  ->  postfix_expression parenthesis_clause . mark_type1 '+' type1_parameters mark '{' error   (rule 88)
    postfix_expression  ->  postfix_expression parenthesis_clause . mark_type1 '+' type1_parameters mark error   (rule 89)
    postfix_expression  ->  postfix_expression parenthesis_clause . mark_type1 '+' error   (rule 90)

    $default	reduce using rule 85 (mark_type1)

    mark_type1	go to state 820



state 526

    pm_expression  ->  pm_expression ARROW_STAR . cast_expression   (rule 139)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 821
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 527

    pm_expression  ->  pm_expression DOT_STAR . cast_expression   (rule 138)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 822
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 528

    multiplicative_expression  ->  multiplicative_expression '/' . pm_expression   (rule 142)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 823
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 529

    multiplicative_expression  ->  multiplicative_expression '%' . pm_expression   (rule 143)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 824
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 530

    multiplicative_expression  ->  multiplicative_expression star_ptr_operator . pm_expression   (rule 141)
    star_ptr_operator  ->  star_ptr_operator . cv_qualifier   (rule 391)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 825
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 565
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 531

    additive_expression  ->  additive_expression '+' . multiplicative_expression   (rule 145)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 826
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 532

    additive_expression  ->  additive_expression '-' . multiplicative_expression   (rule 146)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 827
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 533

    shift_expression  ->  shift_expression SHL . additive_expression   (rule 148)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 828
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 534

    shift_expression  ->  shift_expression SHR . additive_expression   (rule 149)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 829
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 535

    relational_expression  ->  relational_expression LE . shift_expression   (rule 153)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 830
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 536

    relational_expression  ->  relational_expression GE . shift_expression   (rule 154)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 831
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 537

    relational_expression  ->  relational_expression '<' . shift_expression   (rule 151)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 832
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 538

    relational_expression  ->  relational_expression '>' . shift_expression   (rule 152)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 833
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 539

    equality_expression  ->  equality_expression EQ . relational_expression   (rule 156)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 834
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 540

    equality_expression  ->  equality_expression NE . relational_expression   (rule 157)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 835
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 541

    and_expression  ->  and_expression '&' . equality_expression   (rule 159)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 836
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 542

    exclusive_or_expression  ->  exclusive_or_expression '^' . and_expression   (rule 161)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 837
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 543

    inclusive_or_expression  ->  inclusive_or_expression '|' . exclusive_or_expression   (rule 163)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 838
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 544

    logical_and_expression  ->  logical_and_expression LOG_AND . inclusive_or_expression   (rule 165)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 839
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 545

    logical_or_expression  ->  logical_or_expression LOG_OR . logical_and_expression   (rule 167)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 840
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 546

    conditional_expression  ->  logical_or_expression '?' . expression ':' assignment_expression   (rule 169)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 841
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 547

    postfix_tree_expression  ->  postfix_tree_expression '[' constant_expression ']' .   (rule 593)

    $default	reduce using rule 593 (postfix_tree_expression)



state 548

    decl_specifier_suffix  ->  AUTO .   (rule 324)

    $default	reduce using rule 324 (decl_specifier_suffix)



state 549

    storage_class_specifier  ->  '!' . STATIC   (rule 331)
    function_specifier  ->  '!' . INLINE   (rule 335)
    function_specifier  ->  '!' . VIRTUAL   (rule 338)

    INLINE	shift, and go to state 649
    STATIC	shift, and go to state 650
    VIRTUAL	shift, and go to state 651



state 550

    decl_specifier_suffix  ->  decl_specifier_affix .   (rule 323)

    $default	reduce using rule 323 (decl_specifier_suffix)



state 551

    suffix_built_in_decl_specifier.raw  ->  suffix_built_in_decl_specifier.raw decl_specifier_suffix .   (rule 297)

    $default	reduce using rule 297 (suffix_built_in_decl_specifier.raw)



state 552

    suffix_built_in_decl_specifier.raw  ->  suffix_built_in_decl_specifier.raw built_in_type_specifier .   (rule 296)

    $default	reduce using rule 296 (suffix_built_in_decl_specifier.raw)



state 553

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 553
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    elaborate_type_specifier	go to state 430
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 554

    global_scope  ->  SCOPE .   (rule 30)
    suffix_decl_specified_scope  ->  suffix_built_in_decl_specifier SCOPE .   (rule 315)

    $default	reduce using rule 30 (global_scope)



state 555

    scoped_id  ->  global_scope . nested_id   (rule 36)
    scoped_special_function_id  ->  global_scope . nested_special_function_id   (rule 46)

    TEMPLATE	shift, and go to state 509
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 556
    nested_id	go to state 421
    special_function_id	go to state 140
    nested_special_function_id	go to state 510
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 556

    nested_id  ->  id_scope . nested_id   (rule 34)
    nested_special_function_id  ->  id_scope . destructor_id   (rule 43)
    nested_special_function_id  ->  id_scope . nested_special_function_id   (rule 44)

    TEMPLATE	shift, and go to state 514
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 556
    nested_id	go to state 422
    destructor_id	go to state 516
    special_function_id	go to state 140
    nested_special_function_id	go to state 517
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 557

    suffix_named_decl_specifiers  ->  suffix_named_decl_specifiers . suffix_named_decl_specifier.bi   (rule 306)
    suffix_named_decl_specifiers.sf  ->  suffix_named_decl_specifiers .   (rule 308)
    suffix_named_decl_specifiers.sf  ->  suffix_named_decl_specifiers . scoped_special_function_id   (rule 309)
    suffix_decl_specified_scope  ->  suffix_built_in_decl_specifier suffix_named_decl_specifiers . SCOPE   (rule 314)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 553
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 842
    Identifier	shift, and go to state 43

    $default	reduce using rule 308 (suffix_named_decl_specifiers.sf)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 562
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 563
    elaborate_type_specifier	go to state 174
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 558

    suffix_decl_specified_ids  ->  suffix_built_in_decl_specifier suffix_named_decl_specifiers.sf .   (rule 311)

    $default	reduce using rule 311 (suffix_decl_specified_ids)



state 559

    suffix_built_in_decl_specifier.raw  ->  suffix_built_in_decl_specifier.raw . built_in_type_specifier   (rule 296)
    suffix_built_in_decl_specifier.raw  ->  suffix_built_in_decl_specifier.raw . decl_specifier_suffix   (rule 297)
    suffix_named_decl_specifier.bi  ->  suffix_named_decl_specifier suffix_built_in_decl_specifier.raw .   (rule 304)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 548
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    BuiltInTypeSpecifier	shift, and go to state 13
    '!' 	shift, and go to state 549

    $default	reduce using rule 304 (suffix_named_decl_specifier.bi)

    decl_specifier_affix	go to state 550
    decl_specifier_suffix	go to state 551
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    built_in_type_specifier	go to state 552
    cv_qualifier	go to state 307
    access_specifier	go to state 412



state 560

    suffix_named_decl_specifier  ->  suffix_named_decl_specifier decl_specifier_suffix .   (rule 302)

    $default	reduce using rule 302 (suffix_named_decl_specifier)



state 561

    global_scope  ->  SCOPE .   (rule 30)
    suffix_decl_specified_scope  ->  suffix_named_decl_specifiers SCOPE .   (rule 313)

    $default	reduce using rule 30 (global_scope)



state 562

    suffix_named_decl_specifiers.sf  ->  suffix_named_decl_specifiers scoped_special_function_id .   (rule 309)

    $default	reduce using rule 309 (suffix_named_decl_specifiers.sf)



state 563

    suffix_named_decl_specifiers  ->  suffix_named_decl_specifiers suffix_named_decl_specifier.bi .   (rule 306)

    $default	reduce using rule 306 (suffix_named_decl_specifiers)



state 564

    unary_expression  ->  suffix_decl_specified_scope star_ptr_operator . cast_expression   (rule 111)
    star_ptr_operator  ->  star_ptr_operator . cv_qualifier   (rule 391)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 843
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 565
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 565

    star_ptr_operator  ->  star_ptr_operator cv_qualifier .   (rule 391)

    $default	reduce using rule 391 (star_ptr_operator)



state 566

    unary_expression  ->  ptr_operator cast_expression .   (rule 110)

    $default	reduce using rule 110 (unary_expression)



state 567

    cv_qualifier_seq.opt  ->  cv_qualifier_seq.opt . cv_qualifier   (rule 402)
    parenthesis_clause  ->  parameters_clause cv_qualifier_seq.opt .   (rule 415)
    parenthesis_clause  ->  parameters_clause cv_qualifier_seq.opt . exception_specification   (rule 416)

    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    THROW	shift, and go to state 844

    $default	reduce using rule 415 (parenthesis_clause)

    cv_qualifier	go to state 845
    exception_specification	go to state 846



state 568

    class_specifier  ->  class_specifier_head nest . declaration_seq.opt '}'   (rule 477)
    class_specifier  ->  class_specifier_head nest . declaration_seq.opt util looping_declaration '#' bang error_ecarb   (rule 478)

    $default	reduce using rule 255 (declaration_seq.opt)

    declaration_seq.opt	go to state 847



state 569

    class_specifier_head  ->  class_key '{' .   (rule 473)

    $default	reduce using rule 473 (class_specifier_head)



state 570

    class_specifier_head  ->  class_key ':' . base_specifier_list '{'   (rule 471)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier_list	go to state 853
    base_specifier	go to state 854
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 571

    elaborated_class_specifier  ->  class_key scoped_id .   (rule 468)
    elaborated_class_specifier  ->  class_key scoped_id . colon_mark error   (rule 469)
    class_specifier_head  ->  class_key scoped_id . colon_mark base_specifier_list '{'   (rule 470)
    class_specifier_head  ->  class_key scoped_id . '{'   (rule 472)

    '{' 	shift, and go to state 856
    ':' 	shift, and go to state 857

    $default	reduce using rule 468 (elaborated_class_specifier)

    colon_mark	go to state 858



state 572

    filespace_specifier  ->  NAMESPACE '/' . FILE file_name compound_declaration   (rule 955)

    FILE	shift, and go to state 859



state 573

    namespace_definition  ->  NAMESPACE scoped_id . compound_declaration   (rule 373)
    namespace_alias_definition  ->  NAMESPACE scoped_id . '=' scoped_id ';'   (rule 375)
    namespace_declaration  ->  NAMESPACE scoped_id . ';'   (rule 376)

    '{' 	shift, and go to state 356
    ';' 	shift, and go to state 860
    '=' 	shift, and go to state 861

    compound_declaration	go to state 862



state 574

    namespace_definition  ->  NAMESPACE compound_declaration .   (rule 374)

    $default	reduce using rule 374 (namespace_definition)



state 575

    meta_function_definition  ->  CONST . meta_function_definition   (rule 805)
    meta_expression_statement  ->  CONST . meta_expression_statement   (rule 885)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 575
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 576
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 586
    '!' 	shift, and go to state 587

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_function_definition	go to state 864
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 599
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 865
    utility	go to state 66



state 576

    meta_function_definition  ->  STATIC . meta_function_definition   (rule 806)
    meta_expression_statement  ->  STATIC . meta_expression_statement   (rule 886)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 575
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 576
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 586
    '!' 	shift, and go to state 587

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_function_definition	go to state 866
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 599
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 867
    utility	go to state 66



state 577

    meta_unary_expression  ->  SIZEOF . unary_expression   (rule 845)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 489
    postfix_expression	go to state 148
    unary_expression	go to state 868
    delete_expression	go to state 150
    new_expression	go to state 151
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 578

    meta_primary_expression  ->  THIS .   (rule 824)

    $default	reduce using rule 824 (meta_primary_expression)



state 579

    identifier_word  ->  MetaType .   (rule 2)
    meta_primary_head  ->  MetaType . meta_nested_id   (rule 819)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    $default	reduce using rule 2 (identifier_word)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 869
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 580

    meta_unary_expression  ->  INC . meta_cast_expression   (rule 837)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 876
    utility	go to state 66



state 581

    meta_unary_expression  ->  DEC . meta_cast_expression   (rule 838)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 877
    utility	go to state 66



state 582

    meta_primary_expression  ->  '(' . tree_argument_list.opt ')'   (rule 826)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    $default	reduce using rule 604 (tree_arguments.head)

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 290
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 295
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    func_definition	go to state 311
    ctor_definition	go to state 312
    constructor_head	go to state 313
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    tree_argument_list.opt	go to state 878
    tree_argument.ctors	go to state 327
    tree_arguments.head	go to state 328
    tree_argument.ctors_comma_most	go to state 329
    tree_argument.most	go to state 330
    tree_argument.misc	go to state 331
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 333
    unterminated_tree_argument.most	go to state 334
    reserved_id	go to state 335
    token.punct	go to state 336
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345



state 583

    meta_unary_expression  ->  '+' . meta_cast_expression   (rule 841)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 879
    utility	go to state 66



state 584

    meta_unary_expression  ->  '-' . meta_cast_expression   (rule 842)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 880
    utility	go to state 66



state 585

    meta_unary_expression  ->  '&' . meta_cast_expression   (rule 840)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 881
    utility	go to state 66



state 586

    meta_function_definition  ->  '~' . meta_fn_postfix_expression compound_tree_statement   (rule 804)
    meta_unary_expression  ->  '~' . meta_cast_expression   (rule 844)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 882
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 883
    utility	go to state 66



state 587

    meta_function_definition  ->  '!' . STATIC meta_function_definition   (rule 807)
    meta_unary_expression  ->  '!' . meta_cast_expression   (rule 843)
    meta_expression_statement  ->  '!' . STATIC meta_expression_statement   (rule 887)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 884
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 885
    utility	go to state 66



state 588

    meta_primary_expression  ->  literal .   (rule 823)

    $default	reduce using rule 823 (meta_primary_expression)



state 589

    star_ptr_operator  ->  star_ptr_operator . cv_qualifier   (rule 391)
    meta_unary_expression  ->  star_ptr_operator . meta_cast_expression   (rule 839)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    cv_qualifier	go to state 565
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 886
    utility	go to state 66



state 590

    meta_primary_head  ->  meta_scoped_id .   (rule 818)

    $default	reduce using rule 818 (meta_primary_head)



state 591

    unterminated_tree_argument.most  ->  AUTO meta_class_specifier .   (rule 665)

    $default	reduce using rule 665 (unterminated_tree_argument.most)



state 592

    meta_class_specifier  ->  meta_class_key . meta_nested_id compound_declaration   (rule 790)
    meta_class_specifier  ->  meta_class_key . meta_nested_id ':' base_specifier_list compound_declaration   (rule 791)
    meta_simple_type  ->  meta_class_key .   (rule 799)
    meta_primary_id  ->  meta_class_key . meta_nested_id   (rule 822)
    meta_expression_statement  ->  meta_class_key . meta_nested_id object_statements_clause semi   (rule 880)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    $default	reduce using rule 799 (meta_simple_type)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 887
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 593

    meta_simple_type  ->  meta_non_class_key .   (rule 800)
    meta_primary_head  ->  meta_non_class_key . meta_nested_id   (rule 820)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    $default	reduce using rule 800 (meta_simple_type)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 888
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 594

    terminated_tree_argument  ->  AUTO meta_function_definition .   (rule 657)

    $default	reduce using rule 657 (terminated_tree_argument)



state 595

    terminated_tree_argument  ->  AUTO meta_control_statement .   (rule 655)

    $default	reduce using rule 655 (terminated_tree_argument)



state 596

    meta_primary_id  ->  meta_primary_head .   (rule 821)
    meta_expression_statement  ->  meta_primary_head . object_statements_clause semi   (rule 879)

    ':' 	shift, and go to state 689

    $default	reduce using rule 821 (meta_primary_id)

    object_statements_clause	go to state 889



state 597

    meta_primary_expression  ->  meta_primary_id .   (rule 825)

    $default	reduce using rule 825 (meta_primary_expression)



state 598

    meta_postfix_expression  ->  meta_primary_expression .   (rule 829)

    $default	reduce using rule 829 (meta_postfix_expression)



state 599

    meta_function_definition  ->  meta_fn_postfix_expression . compound_tree_statement   (rule 803)
    meta_postfix_expression  ->  meta_fn_postfix_expression .   (rule 830)

    '{' 	shift, and go to state 264

    $default	reduce using rule 830 (meta_postfix_expression)

    compound_tree_statement	go to state 890



state 600

    meta_fn_postfix_expression  ->  meta_postfix_expression . '(' tree_argument_list.opt ')'   (rule 827)
    meta_fn_postfix_expression  ->  meta_postfix_expression . '[' ']'   (rule 828)
    meta_postfix_expression  ->  meta_postfix_expression . '[' expression ']'   (rule 831)
    meta_postfix_expression  ->  meta_postfix_expression . '.' declarator_id   (rule 832)
    meta_postfix_expression  ->  meta_postfix_expression . ARROW declarator_id   (rule 833)
    meta_postfix_expression  ->  meta_postfix_expression . INC   (rule 834)
    meta_postfix_expression  ->  meta_postfix_expression . DEC   (rule 835)
    meta_unary_expression  ->  meta_postfix_expression .   (rule 836)
    meta_expression_statement  ->  meta_postfix_expression . '(' tree_argument_list.opt ')' object_statements_clause semi   (rule 881)
    meta_expression_statement  ->  meta_postfix_expression . '[' ']' object_statements_clause semi   (rule 882)
    meta_expression_statement  ->  meta_postfix_expression . '[' expression ']' object_statements_clause semi   (rule 883)

    INC 	shift, and go to state 891
    DEC 	shift, and go to state 892
    ARROW	shift, and go to state 893
    '[' 	shift, and go to state 894
    '(' 	shift, and go to state 895
    '.' 	shift, and go to state 896

    $default	reduce using rule 836 (meta_unary_expression)



state 601

    meta_cast_expression  ->  meta_unary_expression .   (rule 846)

    $default	reduce using rule 846 (meta_cast_expression)



state 602

    meta_pm_expression  ->  meta_cast_expression .   (rule 847)

    $default	reduce using rule 847 (meta_pm_expression)



state 603

    meta_multiplicative_expression  ->  meta_pm_expression .   (rule 848)

    $default	reduce using rule 848 (meta_multiplicative_expression)



state 604

    meta_multiplicative_expression  ->  meta_multiplicative_expression . star_ptr_operator meta_pm_expression   (rule 849)
    meta_multiplicative_expression  ->  meta_multiplicative_expression . '/' meta_pm_expression   (rule 850)
    meta_multiplicative_expression  ->  meta_multiplicative_expression . '%' meta_pm_expression   (rule 851)
    meta_additive_expression  ->  meta_multiplicative_expression .   (rule 852)

    '*' 	shift, and go to state 133
    '/' 	shift, and go to state 897
    '%' 	shift, and go to state 898

    $default	reduce using rule 852 (meta_additive_expression)

    star_ptr_operator	go to state 899



state 605

    meta_additive_expression  ->  meta_additive_expression . '+' meta_multiplicative_expression   (rule 853)
    meta_additive_expression  ->  meta_additive_expression . '-' meta_multiplicative_expression   (rule 854)
    meta_shift_expression  ->  meta_additive_expression .   (rule 855)

    '+' 	shift, and go to state 900
    '-' 	shift, and go to state 901

    $default	reduce using rule 855 (meta_shift_expression)



state 606

    meta_shift_expression  ->  meta_shift_expression . SHL meta_additive_expression   (rule 856)
    meta_shift_expression  ->  meta_shift_expression . SHR meta_additive_expression   (rule 857)
    meta_relational_expression  ->  meta_shift_expression .   (rule 858)

    SHL 	shift, and go to state 902
    SHR 	shift, and go to state 903

    $default	reduce using rule 858 (meta_relational_expression)



state 607

    meta_relational_expression  ->  meta_relational_expression . '<' meta_shift_expression   (rule 859)
    meta_relational_expression  ->  meta_relational_expression . '>' meta_shift_expression   (rule 860)
    meta_relational_expression  ->  meta_relational_expression . LE meta_shift_expression   (rule 861)
    meta_relational_expression  ->  meta_relational_expression . GE meta_shift_expression   (rule 862)
    meta_equality_expression  ->  meta_relational_expression .   (rule 863)

    LE  	shift, and go to state 904
    GE  	shift, and go to state 905
    '<' 	shift, and go to state 906
    '>' 	shift, and go to state 907

    $default	reduce using rule 863 (meta_equality_expression)



state 608

    meta_equality_expression  ->  meta_equality_expression . EQ meta_relational_expression   (rule 864)
    meta_equality_expression  ->  meta_equality_expression . NE meta_relational_expression   (rule 865)
    meta_and_expression  ->  meta_equality_expression .   (rule 866)

    EQ  	shift, and go to state 908
    NE  	shift, and go to state 909

    $default	reduce using rule 866 (meta_and_expression)



state 609

    meta_and_expression  ->  meta_and_expression . '&' meta_equality_expression   (rule 867)
    meta_exclusive_or_expression  ->  meta_and_expression .   (rule 868)

    '&' 	shift, and go to state 910

    $default	reduce using rule 868 (meta_exclusive_or_expression)



state 610

    meta_exclusive_or_expression  ->  meta_exclusive_or_expression . '^' meta_and_expression   (rule 869)
    meta_inclusive_or_expression  ->  meta_exclusive_or_expression .   (rule 870)

    '^' 	shift, and go to state 911

    $default	reduce using rule 870 (meta_inclusive_or_expression)



state 611

    meta_inclusive_or_expression  ->  meta_inclusive_or_expression . '|' meta_exclusive_or_expression   (rule 871)
    meta_logical_and_expression  ->  meta_inclusive_or_expression .   (rule 872)

    '|' 	shift, and go to state 912

    $default	reduce using rule 872 (meta_logical_and_expression)



state 612

    meta_logical_and_expression  ->  meta_logical_and_expression . LOG_AND meta_inclusive_or_expression   (rule 873)
    meta_logical_or_expression  ->  meta_logical_and_expression .   (rule 874)

    LOG_AND	shift, and go to state 913

    $default	reduce using rule 874 (meta_logical_or_expression)



state 613

    meta_logical_or_expression  ->  meta_logical_or_expression . LOG_OR meta_logical_and_expression   (rule 875)
    meta_conditional_expression  ->  meta_logical_or_expression .   (rule 876)
    meta_conditional_expression  ->  meta_logical_or_expression . '?' meta_conditional_expression ':' meta_conditional_expression   (rule 877)
    meta_expression_statement  ->  meta_logical_or_expression . assignment_operator line tree_statement   (rule 884)

    LOG_OR	shift, and go to state 914
    ASS_ADD	shift, and go to state 655
    ASS_AND	shift, and go to state 656
    ASS_DIV	shift, and go to state 657
    ASS_MOD	shift, and go to state 658
    ASS_MUL	shift, and go to state 659
    ASS_OR	shift, and go to state 660
    ASS_SHL	shift, and go to state 661
    ASS_SHR	shift, and go to state 662
    ASS_SUB	shift, and go to state 663
    ASS_XOR	shift, and go to state 664
    '?' 	shift, and go to state 915
    '=' 	shift, and go to state 756

    $default	reduce using rule 876 (meta_conditional_expression)

    assignment_operator	go to state 916



state 614

    meta_expression_statement  ->  meta_conditional_expression . semi   (rule 878)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 917
    bang	go to state 701



state 615

    terminated_tree_argument  ->  AUTO meta_expression_statement .   (rule 656)

    $default	reduce using rule 656 (terminated_tree_argument)



state 616

    template_declaration  ->  EXPORT . template_declaration   (rule 553)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 617
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    '!' 	shift, and go to state 549

    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 619
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    cv_qualifier	go to state 307
    access_specifier	go to state 412
    template_declaration	go to state 620
    template_parameter_clause	go to state 320



state 617

    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    template_parameter_clause  ->  TEMPLATE . '<' template_parameter_list '>'   (rule 555)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 918
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    '!' 	shift, and go to state 549
    '<' 	shift, and go to state 919

    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    cv_qualifier	go to state 307
    access_specifier	go to state 412



state 618

    file_placement_declaration  ->  EXPORT '/' . NOIMPLEMENTATION semi   (rule 925)
    file_placement_declaration  ->  EXPORT '/' . UTILITY semi   (rule 926)
    export_implementation  ->  EXPORT '/' . IMPLEMENTATION implementation_file   (rule 927)
    export_implementation  ->  EXPORT '/' . IMPLEMENTATION '=' implementation_file   (rule 928)
    export_interface  ->  EXPORT '/' . INTERFACE interface_file   (rule 929)
    export_interface  ->  EXPORT '/' . INTERFACE '=' interface_file   (rule 930)
    export_all  ->  EXPORT '/' . ALL interface_file   (rule 931)
    export_all  ->  EXPORT '/' . ALL '=' interface_file   (rule 932)

    IMPLEMENTATION	shift, and go to state 920
    INTERFACE	shift, and go to state 921
    ALL 	shift, and go to state 922
    NOIMPLEMENTATION	shift, and go to state 923
    UTILITY	shift, and go to state 924



state 619

    template_declaration  ->  decl_specifier_prefix . template_declaration   (rule 554)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 617
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    '!' 	shift, and go to state 549

    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 619
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    cv_qualifier	go to state 307
    access_specifier	go to state 412
    template_declaration	go to state 678
    template_parameter_clause	go to state 320



state 620

    template_declaration  ->  EXPORT template_declaration .   (rule 553)

    $default	reduce using rule 553 (template_declaration)



state 621

    linkage_specification  ->  EXTERN string . looping_declaration   (rule 379)

    $default	reduce using rule 974 (start_search1)

    looping_declaration	go to state 925
    start_search1	go to state 91



state 622

    function_specifier  ->  INLINE '/' . IMPLEMENTATION   (rule 336)
    function_specifier  ->  INLINE '/' . INTERFACE   (rule 337)

    IMPLEMENTATION	shift, and go to state 926
    INTERFACE	shift, and go to state 927



state 623

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 623
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 549

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 307
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 624

    template_parameter_clause  ->  TEMPLATE '<' . template_parameter_list '>'   (rule 555)
    explicit_specialization  ->  TEMPLATE '<' . '>' declaration   (rule 573)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 928
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359
    '>' 	shift, and go to state 929

    $default	reduce using rule 969 (bang)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 401
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 407
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 408
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 409
    templated_parameter_declaration	go to state 930
    templated_abstract_declaration	go to state 411
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_parameter_clause	go to state 931
    template_parameter_list	go to state 932
    template_parameter	go to state 933
    simple_type_parameter	go to state 934
    templated_type_parameter	go to state 935
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66
    bang	go to state 936



state 625

    decl_specifier_prefix  ->  TEMPLATE decl_specifier_prefix .   (rule 326)

    $default	reduce using rule 326 (decl_specifier_prefix)



state 626

    using_directive  ->  USING NAMESPACE . scoped_id ';'   (rule 377)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 937
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 627

    include_declaration  ->  USING '/' . INCLUDE string_expr   (rule 907)
    include_declaration  ->  USING '/' . INCLUDE '/' utility string_expr   (rule 908)
    include_declaration  ->  USING '/' . utility string_expr   (rule 909)
    using_implementation  ->  USING '/' . IMPLEMENTATION file_use   (rule 916)
    using_implementation  ->  USING '/' . IMPLEMENTATION '=' file_use   (rule 917)
    using_interface  ->  USING '/' . INTERFACE file_use   (rule 918)
    using_interface  ->  USING '/' . INTERFACE '=' file_use   (rule 919)

    IMPLEMENTATION	shift, and go to state 938
    INCLUDE	shift, and go to state 939
    INTERFACE	shift, and go to state 940
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41

    utility	go to state 941



state 628

    include_declaration  ->  USING string .   (rule 906)

    $default	reduce using rule 906 (include_declaration)



state 629

    function_specifier  ->  VIRTUAL '/' . PURE   (rule 339)

    PURE	shift, and go to state 942



state 630

    asm_definition  ->  ASM '(' . string ')' ';'   (rule 378)

    StringLiteral	shift, and go to state 127

    string	go to state 943



state 631

    labeled_statement  ->  CASE constant_expression . ':' looping_statement   (rule 231)

    ':' 	shift, and go to state 944



state 632

    handler  ->  CATCH '(' . exception_declaration ')' compound_statement   (rule 578)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 945
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    exception_declaration	go to state 946
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 633

    labeled_statement  ->  DEFAULT ':' . looping_statement   (rule 232)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 947
    start_search	go to state 635



state 634

    iteration_statement  ->  DO looping_statement . WHILE '(' expression ')' ';'   (rule 245)

    WHILE	shift, and go to state 948



state 635

    looping_statement  ->  start_search . looped_statement   (rule 216)

    error	shift, and go to state 349
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 949
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 950
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 951
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 715
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    BREAK	shift, and go to state 730
    CASE	shift, and go to state 952
    CONST_CAST	shift, and go to state 109
    CONTINUE	shift, and go to state 732
    DEFAULT	shift, and go to state 953
    DELETE	shift, and go to state 110
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 954
    GOTO	shift, and go to state 736
    IF  	shift, and go to state 955
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    RETURN	shift, and go to state 738
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    SWITCH	shift, and go to state 956
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 957
    TYPEID	shift, and go to state 120
    WHILE	shift, and go to state 958
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 668
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 959
    looped_statement	go to state 960
    statement	go to state 961
    control_statement	go to state 962
    labeled_statement	go to state 963
    compound_statement	go to state 964
    selection_statement	go to state 965
    iteration_statement	go to state 966
    jump_statement	go to state 967
    declaration_statement	go to state 968
    block_declaration	go to state 969
    specialised_block_declaration	go to state 366
    simple_declaration	go to state 367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 970
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_alias_definition	go to state 370
    using_directive	go to state 372
    asm_definition	go to state 373
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    constructor_head	go to state 971
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    try_block	go to state 972
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66
    advance_search	go to state 973



state 636

    iteration_statement  ->  FOR '(' . for_init_statement condition.opt ';' expression.opt ')' looping_statement   (rule 246)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 959
    for_init_statement	go to state 974
    simple_declaration	go to state 975
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 970
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    constructor_head	go to state 971
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 637

    selection_statement  ->  IF '(' . condition ')' looping_statement   (rule 238)
    selection_statement  ->  IF '(' . condition ')' looping_statement ELSE looping_statement   (rule 239)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    condition	go to state 976
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 977
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 638

    terminated_tree_argument  ->  OPERATOR ';' .   (rule 658)

    $default	reduce using rule 658 (terminated_tree_argument)



state 639

    selection_statement  ->  SWITCH '(' . condition ')' looping_statement   (rule 240)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    condition	go to state 978
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 977
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 640

    throw_expression  ->  THROW assignment_expression .   (rule 581)

    $default	reduce using rule 581 (throw_expression)



state 641

    ctor_initializer  ->  ':' . mem_initializer_list   (rule 502)
    ctor_initializer  ->  ':' . mem_initializer_list bang error   (rule 503)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 979
    mem_initializer_list	go to state 980
    mem_initializer_list_head	go to state 981
    mem_initializer	go to state 982
    mem_initializer_id	go to state 983
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 642

    function_try_block  ->  TRY function_block . handler_seq   (rule 451)

    CATCH	shift, and go to state 217

    handler_seq	go to state 984
    handler	go to state 324



state 643

    function_block  ->  ctor_initializer.opt . function_body   (rule 452)

    '{' 	shift, and go to state 668

    compound_statement	go to state 670
    function_body	go to state 985



state 644

    ctor_initializer.opt  ->  ctor_initializer .   (rule 501)

    $default	reduce using rule 501 (ctor_initializer.opt)



state 645

    iteration_statement  ->  WHILE '(' . condition ')' looping_statement   (rule 244)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    condition	go to state 986
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 977
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 646

    compound_tree_statement  ->  '{' tree_statement_seq.opt . '}'   (rule 633)
    compound_tree_statement  ->  '{' tree_statement_seq.opt . looping_unterminated_tree_argument '}'   (rule 634)
    compound_tree_statement  ->  '{' tree_statement_seq.opt . looping_unterminated_tree_argument '#' bang error_ecarb   (rule 635)
    compound_tree_statement  ->  '{' tree_statement_seq.opt . looping_tree_statement '#' bang error_ecarb   (rule 636)
    tree_statement_seq.opt  ->  tree_statement_seq.opt . looping_tree_statement   (rule 638)
    tree_statement_seq.opt  ->  tree_statement_seq.opt . looping_tree_statement '#' bang error ';'   (rule 639)

    '}' 	shift, and go to state 987

    $default	reduce using rule 973 (start_search)

    looping_unterminated_tree_argument	go to state 988
    looping_tree_statement	go to state 989
    start_search	go to state 990



state 647

    logical_or_expression  ->  logical_or_expression . LOG_OR logical_and_expression   (rule 167)
    bit_field_width  ->  logical_or_expression .   (rule 482)
    bit_field_width  ->  logical_or_expression . '?' bit_field_width ':' bit_field_width   (rule 483)

    LOG_OR	shift, and go to state 545
    '?' 	shift, and go to state 991

    $default	reduce using rule 482 (bit_field_width)



state 648

    bit_field_declaration  ->  ':' bit_field_width .   (rule 481)

    $default	reduce using rule 481 (bit_field_declaration)



state 649

    function_specifier  ->  '!' INLINE .   (rule 335)

    $default	reduce using rule 335 (function_specifier)



state 650

    storage_class_specifier  ->  '!' STATIC .   (rule 331)

    $default	reduce using rule 331 (storage_class_specifier)



state 651

    function_specifier  ->  '!' VIRTUAL .   (rule 338)

    $default	reduce using rule 338 (function_specifier)



state 652

    labeled_statement  ->  identifier_word ':' . looping_statement   (rule 230)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 992
    start_search	go to state 635



state 653

    multiplicative_expression  ->  multiplicative_expression star_ptr_operator . pm_expression   (rule 141)
    star_ptr_operator  ->  star_ptr_operator . cv_qualifier   (rule 391)
    abstract_pointer_declaration  ->  multiplicative_expression star_ptr_operator . ptr_operator_seq.opt   (rule 424)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 399 (ptr_operator_seq.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 825
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 993
    ptr_operator_seq.opt	go to state 994
    cv_qualifier	go to state 565
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 654

    and_expression  ->  and_expression '&' . equality_expression   (rule 159)
    abstract_parameter_declaration  ->  and_expression '&' .   (rule 426)
    abstract_parameter_declaration  ->  and_expression '&' . abstract_pointer_declaration   (rule 427)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 426 (abstract_parameter_declaration)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 836
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 995
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 655

    assignment_operator  ->  ASS_ADD .   (rule 175)

    $default	reduce using rule 175 (assignment_operator)



state 656

    assignment_operator  ->  ASS_AND .   (rule 176)

    $default	reduce using rule 176 (assignment_operator)



state 657

    assignment_operator  ->  ASS_DIV .   (rule 177)

    $default	reduce using rule 177 (assignment_operator)



state 658

    assignment_operator  ->  ASS_MOD .   (rule 178)

    $default	reduce using rule 178 (assignment_operator)



state 659

    assignment_operator  ->  ASS_MUL .   (rule 179)

    $default	reduce using rule 179 (assignment_operator)



state 660

    assignment_operator  ->  ASS_OR .   (rule 180)

    $default	reduce using rule 180 (assignment_operator)



state 661

    assignment_operator  ->  ASS_SHL .   (rule 181)

    $default	reduce using rule 181 (assignment_operator)



state 662

    assignment_operator  ->  ASS_SHR .   (rule 182)

    $default	reduce using rule 182 (assignment_operator)



state 663

    assignment_operator  ->  ASS_SUB .   (rule 183)

    $default	reduce using rule 183 (assignment_operator)



state 664

    assignment_operator  ->  ASS_XOR .   (rule 184)

    $default	reduce using rule 184 (assignment_operator)



state 665

    assignment_expression  ->  logical_or_expression '=' . braced_initializer   (rule 172)
    assignment_operator  ->  '=' .   (rule 174)

    '{' 	shift, and go to state 996

    $default	reduce using rule 174 (assignment_operator)

    braced_initializer	go to state 997



state 666

    assignment_expression  ->  logical_or_expression assignment_operator . assignment_expression   (rule 171)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 998
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 667

    function_try_block  ->  TRY . function_block handler_seq   (rule 451)

    ':' 	shift, and go to state 641

    $default	reduce using rule 500 (ctor_initializer.opt)

    function_block	go to state 642
    ctor_initializer.opt	go to state 643
    ctor_initializer	go to state 644



state 668

    compound_statement  ->  '{' . statement_seq.opt '}'   (rule 233)
    compound_statement  ->  '{' . statement_seq.opt looping_statement '#' bang error_ecarb   (rule 234)

    $default	reduce using rule 235 (statement_seq.opt)

    statement_seq.opt	go to state 999



state 669

    bit_field_declaration  ->  assignment_expression ':' . bit_field_width   (rule 480)
    object_statements_clause  ->  ':' . '{' object_statement_seq.opt '}'   (rule 747)
    object_statements_clause  ->  ':' . '{' object_statement_seq.opt looping_object_statement '#' bang error_ecarb   (rule 748)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 1000
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 647
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_width	go to state 1001
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 670

    function_body  ->  compound_statement .   (rule 453)

    $default	reduce using rule 453 (function_body)



state 671

    func_definition  ->  assignment_expression function_try_block .   (rule 443)

    $default	reduce using rule 443 (func_definition)



state 672

    func_definition  ->  assignment_expression function_body .   (rule 444)

    $default	reduce using rule 444 (func_definition)



state 673

    init_object_declaration  ->  assignment_expression object_statements_clause .   (rule 388)

    $default	reduce using rule 388 (init_object_declaration)



state 674

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    abstract_expression  ->  TEMPLATE . parenthesis_clause   (rule 82)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_parameter_clause  ->  TEMPLATE . '<' template_parameter_list '>'   (rule 555)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)
    explicit_specialization  ->  TEMPLATE . '<' '>' declaration   (rule 573)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 623
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 549
    '<' 	shift, and go to state 624

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 431
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 675

    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    func_definition  ->  assignment_expression . function_try_block   (rule 443)
    func_definition  ->  assignment_expression . function_body   (rule 444)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)
    tree_argument.misc  ->  decl_specifier_prefix assignment_expression .   (rule 620)

    TRY 	shift, and go to state 667
    '{' 	shift, and go to state 668
    ':' 	shift, and go to state 669

    $default	reduce using rule 620 (tree_argument.misc)

    compound_statement	go to state 670
    function_try_block	go to state 671
    function_body	go to state 672
    object_statements_clause	go to state 673



state 676

    func_definition  ->  decl_specifier_prefix func_definition .   (rule 445)

    $default	reduce using rule 445 (func_definition)



state 677

    ctor_definition  ->  decl_specifier_prefix ctor_definition .   (rule 448)

    $default	reduce using rule 448 (ctor_definition)



state 678

    template_declaration  ->  decl_specifier_prefix template_declaration .   (rule 554)

    $default	reduce using rule 554 (template_declaration)



state 679

    explicit_specialization  ->  decl_specifier_prefix explicit_specialization .   (rule 574)

    $default	reduce using rule 574 (explicit_specialization)



state 680

    tree_argument.ctors  ->  decl_specifier_prefix tree_argument.ctors .   (rule 603)

    $default	reduce using rule 603 (tree_argument.ctors)



state 681

    tree_argument.ctors_comma_most  ->  decl_specifier_prefix tree_argument.ctors_comma_most .   (rule 610)

    $default	reduce using rule 610 (tree_argument.ctors_comma_most)



state 682

    tree_argument.misc  ->  decl_specifier_prefix tree_argument.misc .   (rule 621)

    $default	reduce using rule 621 (tree_argument.misc)



state 683

    ptr_operator_seq  ->  ptr_operator ptr_operator_seq .   (rule 398)

    $default	reduce using rule 398 (ptr_operator_seq)



state 684

    special_parameter_declaration  ->  abstract_parameter_declaration '=' . assignment_expression   (rule 429)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1002
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 685

    constructor_head  ->  constructor_head ',' . assignment_expression   (rule 450)
    tree_argument.ctors_comma_most  ->  constructor_head ',' . tree_argument.most   (rule 609)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1003
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 1004
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    ctor_definition	go to state 312
    constructor_head	go to state 1005
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    tree_argument.most	go to state 1006
    tree_argument.misc	go to state 331
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 333
    unterminated_tree_argument.most	go to state 334
    reserved_id	go to state 335
    token.punct	go to state 336
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345



state 686

    ctor_definition  ->  constructor_head function_try_block .   (rule 446)

    $default	reduce using rule 446 (ctor_definition)



state 687

    ctor_definition  ->  constructor_head function_body .   (rule 447)

    $default	reduce using rule 447 (ctor_definition)



state 688

    bit_field_init_declaration  ->  bit_field_declaration '=' . initializer_clause   (rule 485)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 996
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1007
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    initializer_clause	go to state 1008
    braced_initializer	go to state 1009
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 689

    object_statements_clause  ->  ':' . '{' object_statement_seq.opt '}'   (rule 747)
    object_statements_clause  ->  ':' . '{' object_statement_seq.opt looping_object_statement '#' bang error_ecarb   (rule 748)

    '{' 	shift, and go to state 1000



state 690

    init_object_declaration  ->  bit_field_init_declaration object_statements_clause .   (rule 389)

    $default	reduce using rule 389 (init_object_declaration)



state 691

    accessibility_specifier  ->  access_specifier ':' .   (rule 479)

    $default	reduce using rule 479 (accessibility_specifier)



state 692

    template_declaration  ->  template_parameter_clause declaration .   (rule 552)

    $default	reduce using rule 552 (template_declaration)



state 693

    handler_seq  ->  handler handler_seq .   (rule 577)

    $default	reduce using rule 577 (handler_seq)



state 694

    postfix_tree_expression  ->  postfix_tree_expression '(' tree_argument_list.opt ')' .   (rule 594)

    $default	reduce using rule 594 (postfix_tree_expression)



state 695

    tree_argument_list.opt  ->  tree_arguments.head ',' . tree_argument_list.opt   (rule 600)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    $default	reduce using rule 604 (tree_arguments.head)

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 290
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 295
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    func_definition	go to state 311
    ctor_definition	go to state 312
    constructor_head	go to state 313
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    tree_argument_list.opt	go to state 1010
    tree_argument.ctors	go to state 327
    tree_arguments.head	go to state 328
    tree_argument.ctors_comma_most	go to state 329
    tree_argument.most	go to state 330
    tree_argument.misc	go to state 331
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 333
    unterminated_tree_argument.most	go to state 334
    reserved_id	go to state 335
    token.punct	go to state 336
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345



state 696

    tree_argument.most  ->  tree_argument.misc ';' .   (rule 616)

    $default	reduce using rule 616 (tree_argument.most)



state 697

    tree_argument.most  ->  unterminated_tree_argument.most ';' .   (rule 614)

    $default	reduce using rule 614 (tree_argument.most)



state 698

    semi  ->  '#' .   (rule 962)

    $default	reduce using rule 962 (semi)



state 699

    semi  ->  ';' .   (rule 961)

    $default	reduce using rule 961 (semi)



state 700

    terminated_tree_argument  ->  include_declaration semi .   (rule 645)

    $default	reduce using rule 645 (terminated_tree_argument)



state 701

    semi  ->  bang . error_semi   (rule 963)

    error	shift, and go to state 1011

    error_semi	go to state 1012



state 702

    file_dependency_declaration  ->  using_implementation semi .   (rule 914)

    $default	reduce using rule 914 (file_dependency_declaration)



state 703

    file_dependency_declaration  ->  using_interface semi .   (rule 915)

    $default	reduce using rule 915 (file_dependency_declaration)



state 704

    file_placement_declaration  ->  export_implementation semi .   (rule 922)

    $default	reduce using rule 922 (file_placement_declaration)



state 705

    file_placement_declaration  ->  export_interface semi .   (rule 923)

    $default	reduce using rule 923 (file_placement_declaration)



state 706

    file_placement_declaration  ->  export_all semi .   (rule 924)

    $default	reduce using rule 924 (file_placement_declaration)



state 707

    translation_unit  ->  declaration_seq.opt util looping_declaration '#' bang . error '#'   (rule 71)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' bang . error ';'   (rule 257)

    error	shift, and go to state 1013



state 708

    declaration  ->  AUTO meta_class_specifier . semi   (rule 272)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1014
    bang	go to state 701



state 709

    declaration  ->  AUTO meta_function_definition .   (rule 274)

    $default	reduce using rule 274 (declaration)



state 710

    declaration  ->  AUTO meta_control_statement .   (rule 271)

    $default	reduce using rule 271 (declaration)



state 711

    declaration  ->  AUTO meta_expression_statement .   (rule 273)

    $default	reduce using rule 273 (declaration)



state 712

    syntax_macro_definition  ->  EXPLICIT AUTO . meta_type identifier '(' syntax_macro_parameter_list ')' compound_tree_statement   (rule 888)
    syntax_macro_definition  ->  EXPLICIT AUTO . meta_type identifier '(' syntax_macro_parameter_list ')' '[' ']' compound_tree_statement   (rule 889)
    syntax_macro_definition  ->  EXPLICIT AUTO . meta_type identifier '(' ')' compound_tree_statement   (rule 890)
    syntax_macro_definition  ->  EXPLICIT AUTO . meta_type identifier '(' ')' '[' ']' compound_tree_statement   (rule 891)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 1015

    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 1016
    meta_type	go to state 1017



state 713

    namespace_definition  ->  NAMESPACE . scoped_id compound_declaration   (rule 373)
    namespace_definition  ->  NAMESPACE . compound_declaration   (rule 374)
    namespace_alias_definition  ->  NAMESPACE . scoped_id '=' scoped_id ';'   (rule 375)
    namespace_declaration  ->  NAMESPACE . scoped_id ';'   (rule 376)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 356

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 573
    compound_declaration	go to state 574
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 714

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    specialised_declaration  ->  TEMPLATE . specialised_declaration   (rule 283)
    specialised_block_declaration  ->  TEMPLATE . specialised_block_declaration   (rule 289)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 713
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 714
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 715
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 549

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    specialised_declaration	go to state 716
    specialised_block_declaration	go to state 717
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 369
    namespace_alias_definition	go to state 370
    namespace_declaration	go to state 371
    using_directive	go to state 372
    asm_definition	go to state 373
    linkage_specification	go to state 374
    cv_qualifier	go to state 307
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 715

    decl_specifier_affix  ->  USING .   (rule 322)
    using_directive  ->  USING . NAMESPACE scoped_id ';'   (rule 377)

    NAMESPACE	shift, and go to state 626

    $default	reduce using rule 322 (decl_specifier_affix)



state 716

    specialised_declaration  ->  TEMPLATE specialised_declaration .   (rule 283)

    $default	reduce using rule 283 (specialised_declaration)



state 717

    specialised_block_declaration  ->  TEMPLATE specialised_block_declaration .   (rule 289)

    $default	reduce using rule 289 (specialised_block_declaration)



state 718

    compound_declaration  ->  '{' nest . declaration_seq.opt '}'   (rule 253)
    compound_declaration  ->  '{' nest . declaration_seq.opt util looping_declaration '#' bang error_ecarb   (rule 254)

    $default	reduce using rule 255 (declaration_seq.opt)

    declaration_seq.opt	go to state 1018



state 719

    init_declarations  ->  assignment_expression ',' . init_declaration   (rule 380)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1019
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declaration	go to state 1020
    init_object_declaration	go to state 1021
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 1022
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 720

    simple_declaration  ->  decl_specifier_prefix simple_declaration .   (rule 294)

    $default	reduce using rule 294 (simple_declaration)



state 721

    simple_declaration  ->  init_declarations ';' .   (rule 293)

    $default	reduce using rule 293 (simple_declaration)



state 722

    init_declarations  ->  init_declarations ',' . init_declaration   (rule 381)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1019
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declaration	go to state 1023
    init_object_declaration	go to state 1021
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 1022
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 723

    simple_declaration  ->  init_declaration ';' .   (rule 291)

    $default	reduce using rule 291 (simple_declaration)



state 724

    init_declarations  ->  init_object_declaration ',' . init_declaration   (rule 382)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1019
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declaration	go to state 1024
    init_object_declaration	go to state 1021
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 1022
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 725

    simple_declaration  ->  constructor_head ',' . assignment_expression ';'   (rule 292)
    init_declarations  ->  constructor_head ',' . bit_field_init_declaration   (rule 383)
    init_declarations  ->  constructor_head ',' . init_object_declaration   (rule 384)
    constructor_head  ->  constructor_head ',' . assignment_expression   (rule 450)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1025
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_object_declaration	go to state 1026
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 1027
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 726

    declaration  ->  include_declaration semi .   (rule 276)

    $default	reduce using rule 276 (declaration)



state 727

    declaration  ->  filespace_specifier semi .   (rule 279)

    $default	reduce using rule 279 (declaration)



state 728

    looped_declaration  ->  advance_search '+' . looped_declaration   (rule 260)

    error	shift, and go to state 349
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 350
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 351
    EXPLICIT	shift, and go to state 352
    EXPORT	shift, and go to state 353
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 354
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 356
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359


    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    compound_declaration	go to state 361
    looped_declaration	go to state 1028
    declaration	go to state 363
    specialised_declaration	go to state 364
    block_declaration	go to state 365
    specialised_block_declaration	go to state 366
    simple_declaration	go to state 367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 368
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 369
    namespace_alias_definition	go to state 370
    namespace_declaration	go to state 371
    using_directive	go to state 372
    asm_definition	go to state 373
    linkage_specification	go to state 374
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    function_definition	go to state 378
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 381
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 382
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 384
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 385
    throw_expression	go to state 325
    segment	go to state 58
    meta_control_statement	go to state 386
    syntax_macro_definition	go to state 387
    include_declaration	go to state 388
    utility	go to state 66
    file_dependency_declaration	go to state 389
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 390
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 391
    advance_search	go to state 392
    line	go to state 393



state 729

    looped_declaration  ->  advance_search '-' .   (rule 261)

    $default	reduce using rule 261 (looped_declaration)



state 730

    jump_statement  ->  BREAK . ';'   (rule 248)

    ';' 	shift, and go to state 1029



state 731

    meta_control_statement1  ->  CASE . constant_expression ':' lined_declaration   (rule 809)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 163
    conditional_expression	go to state 164
    constant_expression	go to state 1030
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 732

    jump_statement  ->  CONTINUE . ';'   (rule 249)

    ';' 	shift, and go to state 1031



state 733

    meta_control_statement1  ->  DEFAULT . ':' lined_declaration   (rule 810)

    ':' 	shift, and go to state 1032



state 734

    meta_control_statement1  ->  DO . lined_declaration WHILE '(' expression ')' semi   (rule 811)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1033
    line	go to state 1034



state 735

    meta_control_statement1  ->  FOR . '(' for_init_statement condition.opt ';' expression.opt ')' lined_declaration   (rule 816)

    '(' 	shift, and go to state 1035



state 736

    jump_statement  ->  GOTO . identifier ';'   (rule 251)

    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 1036
    segment	go to state 58
    utility	go to state 66



state 737

    meta_control_statement1  ->  IF . '(' condition ')' lined_declaration   (rule 812)
    meta_control_statement1  ->  IF . '(' condition ')' lined_declaration ELSE lined_declaration   (rule 813)

    '(' 	shift, and go to state 1037



state 738

    jump_statement  ->  RETURN . expression.opt ';'   (rule 250)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 185 (expression.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression.opt	go to state 1038
    expression	go to state 498
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 739

    meta_control_statement1  ->  SWITCH . '(' expression ')' lined_declaration   (rule 814)

    '(' 	shift, and go to state 1039



state 740

    meta_control_statement1  ->  WHILE . '(' condition ')' lined_declaration   (rule 815)

    '(' 	shift, and go to state 1040



state 741

    meta_control_statement1  ->  jump_statement .   (rule 817)

    $default	reduce using rule 817 (meta_control_statement1)



state 742

    meta_control_statement  ->  line meta_control_statement1 .   (rule 808)

    $default	reduce using rule 808 (meta_control_statement)



state 743

    templated_and_expression  ->  templated_and_expression . '&' templated_equality_expression   (rule 198)
    templated_exclusive_or_expression  ->  templated_and_expression .   (rule 199)

    '&' 	shift, and go to state 1041

    $default	reduce using rule 199 (templated_exclusive_or_expression)



state 744

    templated_throw_expression  ->  THROW templated_assignment_expression .   (rule 583)

    $default	reduce using rule 583 (templated_throw_expression)



state 745

    templated_relational_expression  ->  templated_relational_expression LE . shift_expression   (rule 192)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 1042
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 746

    templated_relational_expression  ->  templated_relational_expression GE . shift_expression   (rule 193)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 1043
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 747

    templated_relational_expression  ->  templated_relational_expression '<' . shift_expression   (rule 191)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 1044
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 748

    templated_equality_expression  ->  templated_equality_expression EQ . templated_relational_expression   (rule 195)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 1045
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 749

    templated_equality_expression  ->  templated_equality_expression NE . templated_relational_expression   (rule 196)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 1046
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 750

    templated_and_expression  ->  templated_and_expression '&' . templated_equality_expression   (rule 198)
    templated_abstract_declaration  ->  templated_and_expression '&' .   (rule 439)
    templated_abstract_declaration  ->  templated_and_expression '&' . abstract_pointer_declaration   (rule 440)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 439 (templated_abstract_declaration)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 1047
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 1048
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 751

    templated_exclusive_or_expression  ->  templated_exclusive_or_expression '^' . templated_and_expression   (rule 200)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 1049
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 752

    templated_inclusive_or_expression  ->  templated_inclusive_or_expression '|' . templated_exclusive_or_expression   (rule 202)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 1050
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 753

    templated_logical_and_expression  ->  templated_logical_and_expression LOG_AND . templated_inclusive_or_expression   (rule 204)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 1051
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 754

    templated_logical_or_expression  ->  templated_logical_or_expression LOG_OR . templated_logical_and_expression   (rule 206)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 1052
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 755

    templated_conditional_expression  ->  templated_logical_or_expression '?' . templated_expression ':' templated_assignment_expression   (rule 208)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 1053
    templated_expression	go to state 1054
    templated_expression_list	go to state 1055
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 756

    assignment_operator  ->  '=' .   (rule 174)

    $default	reduce using rule 174 (assignment_operator)



state 757

    templated_assignment_expression  ->  templated_logical_or_expression assignment_operator . templated_assignment_expression   (rule 210)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 1056
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 758

    templated_parameter_declaration  ->  decl_specifier_prefix templated_parameter_declaration .   (rule 437)

    $default	reduce using rule 437 (templated_parameter_declaration)



state 759

    templated_parameter_declaration  ->  templated_abstract_declaration '=' . templated_assignment_expression   (rule 436)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 1057
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 760

    template_id  ->  TEMPLATE identifier '<' template_argument_list '>' .   (rule 568)

    $default	reduce using rule 568 (template_id)



state 761

    template_argument_list  ->  template_argument_list ',' . template_argument   (rule 571)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 401
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 407
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 408
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 409
    templated_parameter_declaration	go to state 410
    templated_abstract_declaration	go to state 411
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    template_argument	go to state 1058
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 762

    ecarb  ->  bang error '}' .   (rule 958)

    $default	reduce using rule 958 (ecarb)



state 763

    ecarb  ->  bang error '#' .   (rule 960)

    $default	reduce using rule 960 (ecarb)



state 764

    ecarb  ->  bang error ')' .   (rule 959)

    $default	reduce using rule 959 (ecarb)



state 765

    id  ->  identifier template_test '+' template_argument_list '>' .   (rule 25)

    $default	reduce using rule 25 (id)



state 766

    enumerator_list_ecarb  ->  '}' .   (rule 361)

    $default	reduce using rule 361 (enumerator_list_ecarb)



state 767

    enumerator_clause  ->  '{' enumerator_list_ecarb .   (rule 358)

    $default	reduce using rule 358 (enumerator_clause)



state 768

    enumerator_list_head  ->  enumerator_definition_filler .   (rule 367)

    $default	reduce using rule 367 (enumerator_list_head)



state 769

    enumerator_list  ->  enumerator_list_head . enumerator_definition   (rule 369)

    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 1059
    enumerator_definition	go to state 1060
    enumerator	go to state 1061
    segment	go to state 58
    utility	go to state 66



state 770

    enumerator_clause  ->  '{' enumerator_list . enumerator_list_ecarb   (rule 359)
    enumerator_clause  ->  '{' enumerator_list . ',' enumerator_definition_ecarb   (rule 360)
    enumerator_list_head  ->  enumerator_list . ',' enumerator_definition_filler   (rule 368)

    '}' 	shift, and go to state 766
    ',' 	shift, and go to state 1062

    $default	reduce using rule 969 (bang)

    enumerator_list_ecarb	go to state 1063
    bang	go to state 1064



state 771

    enumerator_list_ecarb  ->  bang . error_ecarb   (rule 362)
    enumerator_definition_filler  ->  bang . error ','   (rule 366)

    error	shift, and go to state 1065

    error_ecarb	go to state 1066



state 772

    enum_specifier  ->  ENUM scoped_id enumerator_clause .   (rule 356)

    $default	reduce using rule 356 (enum_specifier)



state 773

    type_id  ->  type_specifier . abstract_declarator.opt   (rule 405)
    type_id  ->  type_specifier . type_id   (rule 406)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '!' 	shift, and go to state 436

    $default	reduce using rule 407 (abstract_declarator.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 781
    id_scope	go to state 782
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 1067
    cv_qualifier	go to state 443
    type_id	go to state 1068
    abstract_declarator.opt	go to state 1069
    direct_abstract_declarator.opt	go to state 1070
    direct_abstract_declarator	go to state 1071
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 774

    postfix_expression  ->  CONST_CAST '<' type_id . '>' '(' expression ')'   (rule 101)

    '>' 	shift, and go to state 1072



state 775

    postfix_expression  ->  DYNAMIC_CAST '<' type_id . '>' '(' expression ')'   (rule 98)

    '>' 	shift, and go to state 1073



state 776

    type_specifier  ->  '!' CONST .   (rule 343)

    $default	reduce using rule 343 (type_specifier)



state 777

    type_specifier  ->  '!' VOLATILE .   (rule 344)

    $default	reduce using rule 344 (type_specifier)



state 778

    new_initializer.opt  ->  '(' . expression_list.opt ')'   (rule 134)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 103 (expression_list.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list.opt	go to state 1074
    expression_list	go to state 1075
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1076
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 779

    new_expression  ->  NEW new_type_id new_initializer.opt .   (rule 122)

    $default	reduce using rule 122 (new_expression)



state 780

    direct_new_declarator  ->  '[' . expression ']'   (rule 131)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1077
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 781

    scoped_id  ->  global_scope . nested_id   (rule 36)
    ptr_operator  ->  global_scope . nested_ptr_operator   (rule 396)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 782
    nested_id	go to state 421
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 513
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 782

    nested_id  ->  id_scope . nested_id   (rule 34)
    nested_ptr_operator  ->  id_scope . nested_ptr_operator   (rule 393)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 782
    nested_id	go to state 422
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 518
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 783

    new_type_id  ->  type_specifier new_type_id .   (rule 128)

    $default	reduce using rule 128 (new_type_id)



state 784

    new_type_id  ->  type_specifier new_declarator .   (rule 127)

    $default	reduce using rule 127 (new_type_id)



state 785

    new_declarator  ->  direct_new_declarator .   (rule 130)
    direct_new_declarator  ->  direct_new_declarator . '[' constant_expression ']'   (rule 132)

    '[' 	shift, and go to state 1078

    $default	reduce using rule 130 (new_declarator)



state 786

    new_declarator  ->  ptr_operator . new_declarator   (rule 129)
    ptr_operator_seq.opt  ->  ptr_operator . ptr_operator_seq.opt   (rule 400)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '[' 	shift, and go to state 780
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134

    $default	reduce using rule 399 (ptr_operator_seq.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 1079
    global_scope	go to state 1080
    id_scope	go to state 1081
    new_declarator	go to state 1082
    direct_new_declarator	go to state 785
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 786
    ptr_operator_seq.opt	go to state 1083
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 787

    new_type_id  ->  type_specifier ptr_operator_seq.opt .   (rule 126)

    $default	reduce using rule 126 (new_type_id)



state 788

    new_expression  ->  NEW parameters_clause new_type_id . new_initializer.opt   (rule 123)

    '(' 	shift, and go to state 778

    $default	reduce using rule 133 (new_initializer.opt)

    new_initializer.opt	go to state 1084



state 789

    new_expression  ->  NEW parameters_clause parameters_clause . new_initializer.opt   (rule 125)

    '(' 	shift, and go to state 778

    $default	reduce using rule 133 (new_initializer.opt)

    new_initializer.opt	go to state 1085



state 790

    operator  ->  '[' ']' .   (rule 551)

    $default	reduce using rule 551 (operator)



state 791

    operator  ->  '(' ')' .   (rule 550)

    $default	reduce using rule 550 (operator)



state 792

    ptr_operator_seq.opt  ->  ptr_operator . ptr_operator_seq.opt   (rule 400)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134

    $default	reduce using rule 399 (ptr_operator_seq.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 1079
    global_scope	go to state 1080
    id_scope	go to state 1081
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 792
    ptr_operator_seq.opt	go to state 1083
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 793

    conversion_type_id  ->  type_specifier ptr_operator_seq.opt .   (rule 498)

    $default	reduce using rule 498 (conversion_type_id)



state 794

    conversion_type_id  ->  type_specifier conversion_type_id .   (rule 499)

    $default	reduce using rule 499 (conversion_type_id)



state 795

    postfix_expression  ->  REINTERPRET_CAST '<' type_id . '>' '(' expression ')'   (rule 100)

    '>' 	shift, and go to state 1086



state 796

    postfix_expression  ->  STATIC_CAST '<' type_id . '>' '(' expression ')'   (rule 99)

    '>' 	shift, and go to state 1087



state 797

    expression_list  ->  expression_list ',' . assignment_expression   (rule 106)
    expression  ->  expression_list ',' . assignment_expression   (rule 188)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1088
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 798

    abstract_expression  ->  '[' expression.opt ']' .   (rule 81)

    $default	reduce using rule 81 (abstract_expression)



state 799

    parameter_declaration  ->  decl_specifier_prefix parameter_declaration .   (rule 433)

    $default	reduce using rule 433 (parameter_declaration)



state 800

    parameters_clause  ->  '(' parameter_declaration_clause ')' .   (rule 417)

    $default	reduce using rule 417 (parameters_clause)



state 801

    parameter_declaration_clause  ->  parameter_declaration_list ELLIPSIS .   (rule 420)

    $default	reduce using rule 420 (parameter_declaration_clause)



state 802

    parameter_declaration_list  ->  parameter_declaration_list ',' . parameter_declaration   (rule 422)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 1089
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 803

    destructor_id  ->  TEMPLATE destructor_id .   (rule 38)

    $default	reduce using rule 38 (destructor_id)



state 804

    destructor_id  ->  '~' id .   (rule 37)

    $default	reduce using rule 37 (destructor_id)



state 805

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    destructor_id  ->  TEMPLATE . destructor_id   (rule 38)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    pseudo_destructor_id  ->  TEMPLATE . pseudo_destructor_id   (rule 54)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 805
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 806

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    destructor_id	go to state 803
    special_function_id	go to state 428
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 1090
    built_in_type_specifier	go to state 52
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 806

    destructor_id  ->  '~' . id   (rule 37)
    pseudo_destructor_id  ->  '~' . built_in_type_id   (rule 53)

    TEMPLATE	shift, and go to state 78
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 804
    built_in_type_id	go to state 1091
    built_in_type_specifier	go to state 52
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 807

    scoped_id  ->  global_scope . nested_id   (rule 36)
    scoped_special_function_id  ->  global_scope . nested_special_function_id   (rule 46)
    scoped_pseudo_destructor_id  ->  global_scope . scoped_pseudo_destructor_id   (rule 58)

    TEMPLATE	shift, and go to state 1092
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 1093

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 1094
    id_scope	go to state 808
    nested_id	go to state 421
    special_function_id	go to state 140
    nested_special_function_id	go to state 510
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 814
    nested_pseudo_destructor_id	go to state 815
    scoped_pseudo_destructor_id	go to state 1095
    built_in_type_specifier	go to state 52
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 808

    nested_id  ->  id_scope . nested_id   (rule 34)
    nested_special_function_id  ->  id_scope . destructor_id   (rule 43)
    nested_special_function_id  ->  id_scope . nested_special_function_id   (rule 44)
    nested_pseudo_destructor_id  ->  id_scope . nested_pseudo_destructor_id   (rule 56)

    TEMPLATE	shift, and go to state 1096
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 806

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    id_scope	go to state 808
    nested_id	go to state 422
    destructor_id	go to state 516
    special_function_id	go to state 140
    nested_special_function_id	go to state 517
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 814
    nested_pseudo_destructor_id	go to state 1097
    built_in_type_specifier	go to state 52
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 809

    declarator_id  ->  scoped_id .   (rule 47)

    $default	reduce using rule 47 (declarator_id)



state 810

    declarator_id  ->  destructor_id .   (rule 49)

    $default	reduce using rule 49 (declarator_id)



state 811

    declarator_id  ->  scoped_special_function_id .   (rule 48)

    $default	reduce using rule 48 (declarator_id)



state 812

    postfix_expression  ->  postfix_expression ARROW declarator_id .   (rule 94)

    $default	reduce using rule 94 (postfix_expression)



state 813

    built_in_type_id  ->  built_in_type_id . built_in_type_specifier   (rule 51)
    pseudo_destructor_id  ->  built_in_type_id . SCOPE '~' built_in_type_id   (rule 52)

    BuiltInTypeSpecifier	shift, and go to state 13
    SCOPE	shift, and go to state 1098

    built_in_type_specifier	go to state 80



state 814

    nested_pseudo_destructor_id  ->  pseudo_destructor_id .   (rule 55)

    $default	reduce using rule 55 (nested_pseudo_destructor_id)



state 815

    scoped_pseudo_destructor_id  ->  nested_pseudo_destructor_id .   (rule 57)

    $default	reduce using rule 57 (scoped_pseudo_destructor_id)



state 816

    postfix_expression  ->  postfix_expression ARROW scoped_pseudo_destructor_id .   (rule 95)

    $default	reduce using rule 95 (postfix_expression)



state 817

    postfix_expression  ->  postfix_expression '[' expression.opt . ']'   (rule 91)

    ']' 	shift, and go to state 1099



state 818

    postfix_expression  ->  postfix_expression '.' declarator_id .   (rule 92)

    $default	reduce using rule 92 (postfix_expression)



state 819

    postfix_expression  ->  postfix_expression '.' scoped_pseudo_destructor_id .   (rule 93)

    $default	reduce using rule 93 (postfix_expression)



state 820

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 . '-'   (rule 87)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 . '+' type1_parameters mark '{' error   (rule 88)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 . '+' type1_parameters mark error   (rule 89)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 . '+' error   (rule 90)

    '+' 	shift, and go to state 1100
    '-' 	shift, and go to state 1101



state 821

    pm_expression  ->  pm_expression ARROW_STAR cast_expression .   (rule 139)

    $default	reduce using rule 139 (pm_expression)



state 822

    pm_expression  ->  pm_expression DOT_STAR cast_expression .   (rule 138)

    $default	reduce using rule 138 (pm_expression)



state 823

    pm_expression  ->  pm_expression . DOT_STAR cast_expression   (rule 138)
    pm_expression  ->  pm_expression . ARROW_STAR cast_expression   (rule 139)
    multiplicative_expression  ->  multiplicative_expression '/' pm_expression .   (rule 142)

    ARROW_STAR	shift, and go to state 526
    DOT_STAR	shift, and go to state 527

    $default	reduce using rule 142 (multiplicative_expression)



state 824

    pm_expression  ->  pm_expression . DOT_STAR cast_expression   (rule 138)
    pm_expression  ->  pm_expression . ARROW_STAR cast_expression   (rule 139)
    multiplicative_expression  ->  multiplicative_expression '%' pm_expression .   (rule 143)

    ARROW_STAR	shift, and go to state 526
    DOT_STAR	shift, and go to state 527

    $default	reduce using rule 143 (multiplicative_expression)



state 825

    pm_expression  ->  pm_expression . DOT_STAR cast_expression   (rule 138)
    pm_expression  ->  pm_expression . ARROW_STAR cast_expression   (rule 139)
    multiplicative_expression  ->  multiplicative_expression star_ptr_operator pm_expression .   (rule 141)

    ARROW_STAR	shift, and go to state 526
    DOT_STAR	shift, and go to state 527

    $default	reduce using rule 141 (multiplicative_expression)



state 826

    multiplicative_expression  ->  multiplicative_expression . star_ptr_operator pm_expression   (rule 141)
    multiplicative_expression  ->  multiplicative_expression . '/' pm_expression   (rule 142)
    multiplicative_expression  ->  multiplicative_expression . '%' pm_expression   (rule 143)
    additive_expression  ->  additive_expression '+' multiplicative_expression .   (rule 145)

    '*' 	shift, and go to state 133
    '/' 	shift, and go to state 528
    '%' 	shift, and go to state 529

    $default	reduce using rule 145 (additive_expression)

    star_ptr_operator	go to state 530



state 827

    multiplicative_expression  ->  multiplicative_expression . star_ptr_operator pm_expression   (rule 141)
    multiplicative_expression  ->  multiplicative_expression . '/' pm_expression   (rule 142)
    multiplicative_expression  ->  multiplicative_expression . '%' pm_expression   (rule 143)
    additive_expression  ->  additive_expression '-' multiplicative_expression .   (rule 146)

    '*' 	shift, and go to state 133
    '/' 	shift, and go to state 528
    '%' 	shift, and go to state 529

    $default	reduce using rule 146 (additive_expression)

    star_ptr_operator	go to state 530



state 828

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 145)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 146)
    shift_expression  ->  shift_expression SHL additive_expression .   (rule 148)

    '+' 	shift, and go to state 531
    '-' 	shift, and go to state 532

    $default	reduce using rule 148 (shift_expression)



state 829

    additive_expression  ->  additive_expression . '+' multiplicative_expression   (rule 145)
    additive_expression  ->  additive_expression . '-' multiplicative_expression   (rule 146)
    shift_expression  ->  shift_expression SHR additive_expression .   (rule 149)

    '+' 	shift, and go to state 531
    '-' 	shift, and go to state 532

    $default	reduce using rule 149 (shift_expression)



state 830

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    relational_expression  ->  relational_expression LE shift_expression .   (rule 153)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 153 (relational_expression)



state 831

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    relational_expression  ->  relational_expression GE shift_expression .   (rule 154)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 154 (relational_expression)



state 832

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    relational_expression  ->  relational_expression '<' shift_expression .   (rule 151)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 151 (relational_expression)



state 833

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    relational_expression  ->  relational_expression '>' shift_expression .   (rule 152)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 152 (relational_expression)



state 834

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 151)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 152)
    relational_expression  ->  relational_expression . LE shift_expression   (rule 153)
    relational_expression  ->  relational_expression . GE shift_expression   (rule 154)
    equality_expression  ->  equality_expression EQ relational_expression .   (rule 156)

    LE  	shift, and go to state 535
    GE  	shift, and go to state 536
    '<' 	shift, and go to state 537
    '>' 	shift, and go to state 538

    $default	reduce using rule 156 (equality_expression)



state 835

    relational_expression  ->  relational_expression . '<' shift_expression   (rule 151)
    relational_expression  ->  relational_expression . '>' shift_expression   (rule 152)
    relational_expression  ->  relational_expression . LE shift_expression   (rule 153)
    relational_expression  ->  relational_expression . GE shift_expression   (rule 154)
    equality_expression  ->  equality_expression NE relational_expression .   (rule 157)

    LE  	shift, and go to state 535
    GE  	shift, and go to state 536
    '<' 	shift, and go to state 537
    '>' 	shift, and go to state 538

    $default	reduce using rule 157 (equality_expression)



state 836

    equality_expression  ->  equality_expression . EQ relational_expression   (rule 156)
    equality_expression  ->  equality_expression . NE relational_expression   (rule 157)
    and_expression  ->  and_expression '&' equality_expression .   (rule 159)

    EQ  	shift, and go to state 539
    NE  	shift, and go to state 540

    $default	reduce using rule 159 (and_expression)



state 837

    and_expression  ->  and_expression . '&' equality_expression   (rule 159)
    exclusive_or_expression  ->  exclusive_or_expression '^' and_expression .   (rule 161)

    '&' 	shift, and go to state 541

    $default	reduce using rule 161 (exclusive_or_expression)



state 838

    exclusive_or_expression  ->  exclusive_or_expression . '^' and_expression   (rule 161)
    inclusive_or_expression  ->  inclusive_or_expression '|' exclusive_or_expression .   (rule 163)

    '^' 	shift, and go to state 542

    $default	reduce using rule 163 (inclusive_or_expression)



state 839

    inclusive_or_expression  ->  inclusive_or_expression . '|' exclusive_or_expression   (rule 163)
    logical_and_expression  ->  logical_and_expression LOG_AND inclusive_or_expression .   (rule 165)

    '|' 	shift, and go to state 543

    $default	reduce using rule 165 (logical_and_expression)



state 840

    logical_and_expression  ->  logical_and_expression . LOG_AND inclusive_or_expression   (rule 165)
    logical_or_expression  ->  logical_or_expression LOG_OR logical_and_expression .   (rule 167)

    LOG_AND	shift, and go to state 544

    $default	reduce using rule 167 (logical_or_expression)



state 841

    conditional_expression  ->  logical_or_expression '?' expression . ':' assignment_expression   (rule 169)

    ':' 	shift, and go to state 1102



state 842

    global_scope  ->  SCOPE .   (rule 30)
    suffix_decl_specified_scope  ->  suffix_built_in_decl_specifier suffix_named_decl_specifiers SCOPE .   (rule 314)

    $default	reduce using rule 30 (global_scope)



state 843

    unary_expression  ->  suffix_decl_specified_scope star_ptr_operator cast_expression .   (rule 111)

    $default	reduce using rule 111 (unary_expression)



state 844

    exception_specification  ->  THROW . '(' ')'   (rule 584)
    exception_specification  ->  THROW . '(' type_id_list ')'   (rule 585)

    '(' 	shift, and go to state 1103



state 845

    cv_qualifier_seq.opt  ->  cv_qualifier_seq.opt cv_qualifier .   (rule 402)

    $default	reduce using rule 402 (cv_qualifier_seq.opt)



state 846

    parenthesis_clause  ->  parameters_clause cv_qualifier_seq.opt exception_specification .   (rule 416)

    $default	reduce using rule 416 (parenthesis_clause)



state 847

    declaration_seq.opt  ->  declaration_seq.opt . util looping_declaration   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt . util looping_declaration '#' bang error ';'   (rule 257)
    class_specifier  ->  class_specifier_head nest declaration_seq.opt . '}'   (rule 477)
    class_specifier  ->  class_specifier_head nest declaration_seq.opt . util looping_declaration '#' bang error_ecarb   (rule 478)

    '}' 	shift, and go to state 1104

    $default	reduce using rule 975 (util)

    util	go to state 1105



state 848

    base_specifier  ->  AUTO . base_specifier   (rule 492)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier	go to state 1106
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 849

    base_specifier  ->  VIRTUAL . base_specifier   (rule 490)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier	go to state 1107
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 850

    base_specifier  ->  '!' . VIRTUAL base_specifier   (rule 491)

    VIRTUAL	shift, and go to state 1108



state 851

    base_specifier  ->  scoped_id .   (rule 488)

    $default	reduce using rule 488 (base_specifier)



state 852

    built_in_type_id  ->  built_in_type_id . built_in_type_specifier   (rule 51)
    base_specifier  ->  built_in_type_id .   (rule 493)

    BuiltInTypeSpecifier	shift, and go to state 13

    $default	reduce using rule 493 (base_specifier)

    built_in_type_specifier	go to state 80



state 853

    class_specifier_head  ->  class_key ':' base_specifier_list . '{'   (rule 471)
    base_specifier_list  ->  base_specifier_list . ',' base_specifier   (rule 487)

    '{' 	shift, and go to state 1109
    ',' 	shift, and go to state 1110



state 854

    base_specifier_list  ->  base_specifier .   (rule 486)

    $default	reduce using rule 486 (base_specifier_list)



state 855

    base_specifier  ->  access_specifier . base_specifier   (rule 489)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier	go to state 1111
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 856

    class_specifier_head  ->  class_key scoped_id '{' .   (rule 472)

    $default	reduce using rule 472 (class_specifier_head)



state 857

    colon_mark  ->  ':' .   (rule 467)

    $default	reduce using rule 467 (colon_mark)



state 858

    elaborated_class_specifier  ->  class_key scoped_id colon_mark . error   (rule 469)
    class_specifier_head  ->  class_key scoped_id colon_mark . base_specifier_list '{'   (rule 470)

    error	shift, and go to state 1112
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier_list	go to state 1113
    base_specifier	go to state 854
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 859

    filespace_specifier  ->  NAMESPACE '/' FILE . file_name compound_declaration   (rule 955)

    StringLiteral	shift, and go to state 127

    string	go to state 1114
    file_name	go to state 1115



state 860

    namespace_declaration  ->  NAMESPACE scoped_id ';' .   (rule 376)

    $default	reduce using rule 376 (namespace_declaration)



state 861

    namespace_alias_definition  ->  NAMESPACE scoped_id '=' . scoped_id ';'   (rule 375)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 1116
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 862

    namespace_definition  ->  NAMESPACE scoped_id compound_declaration .   (rule 373)

    $default	reduce using rule 373 (namespace_definition)



state 863

    meta_simple_type  ->  meta_class_key .   (rule 799)
    meta_primary_id  ->  meta_class_key . meta_nested_id   (rule 822)
    meta_expression_statement  ->  meta_class_key . meta_nested_id object_statements_clause semi   (rule 880)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    $default	reduce using rule 799 (meta_simple_type)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 1117
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 864

    meta_function_definition  ->  CONST meta_function_definition .   (rule 805)

    $default	reduce using rule 805 (meta_function_definition)



state 865

    meta_expression_statement  ->  CONST meta_expression_statement .   (rule 885)

    $default	reduce using rule 885 (meta_expression_statement)



state 866

    meta_function_definition  ->  STATIC meta_function_definition .   (rule 806)

    $default	reduce using rule 806 (meta_function_definition)



state 867

    meta_expression_statement  ->  STATIC meta_expression_statement .   (rule 886)

    $default	reduce using rule 886 (meta_expression_statement)



state 868

    meta_unary_expression  ->  SIZEOF unary_expression .   (rule 845)

    $default	reduce using rule 845 (meta_unary_expression)



state 869

    meta_primary_head  ->  MetaType meta_nested_id .   (rule 819)

    $default	reduce using rule 819 (meta_primary_head)



state 870

    meta_unary_expression  ->  '~' . meta_cast_expression   (rule 844)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 883
    utility	go to state 66



state 871

    meta_unary_expression  ->  '!' . meta_cast_expression   (rule 843)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 885
    utility	go to state 66



state 872

    meta_simple_type  ->  meta_class_key .   (rule 799)
    meta_primary_id  ->  meta_class_key . meta_nested_id   (rule 822)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 78
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    $default	reduce using rule 799 (meta_simple_type)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 1118
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 65
    utility	go to state 66



state 873

    meta_primary_id  ->  meta_primary_head .   (rule 821)

    $default	reduce using rule 821 (meta_primary_id)



state 874

    meta_postfix_expression  ->  meta_fn_postfix_expression .   (rule 830)

    $default	reduce using rule 830 (meta_postfix_expression)



state 875

    meta_fn_postfix_expression  ->  meta_postfix_expression . '(' tree_argument_list.opt ')'   (rule 827)
    meta_fn_postfix_expression  ->  meta_postfix_expression . '[' ']'   (rule 828)
    meta_postfix_expression  ->  meta_postfix_expression . '[' expression ']'   (rule 831)
    meta_postfix_expression  ->  meta_postfix_expression . '.' declarator_id   (rule 832)
    meta_postfix_expression  ->  meta_postfix_expression . ARROW declarator_id   (rule 833)
    meta_postfix_expression  ->  meta_postfix_expression . INC   (rule 834)
    meta_postfix_expression  ->  meta_postfix_expression . DEC   (rule 835)
    meta_unary_expression  ->  meta_postfix_expression .   (rule 836)

    INC 	shift, and go to state 891
    DEC 	shift, and go to state 892
    ARROW	shift, and go to state 893
    '[' 	shift, and go to state 1119
    '(' 	shift, and go to state 1120
    '.' 	shift, and go to state 896

    $default	reduce using rule 836 (meta_unary_expression)



state 876

    meta_unary_expression  ->  INC meta_cast_expression .   (rule 837)

    $default	reduce using rule 837 (meta_unary_expression)



state 877

    meta_unary_expression  ->  DEC meta_cast_expression .   (rule 838)

    $default	reduce using rule 838 (meta_unary_expression)



state 878

    meta_primary_expression  ->  '(' tree_argument_list.opt . ')'   (rule 826)

    ')' 	shift, and go to state 1121



state 879

    meta_unary_expression  ->  '+' meta_cast_expression .   (rule 841)

    $default	reduce using rule 841 (meta_unary_expression)



state 880

    meta_unary_expression  ->  '-' meta_cast_expression .   (rule 842)

    $default	reduce using rule 842 (meta_unary_expression)



state 881

    meta_unary_expression  ->  '&' meta_cast_expression .   (rule 840)

    $default	reduce using rule 840 (meta_unary_expression)



state 882

    meta_function_definition  ->  '~' meta_fn_postfix_expression . compound_tree_statement   (rule 804)
    meta_postfix_expression  ->  meta_fn_postfix_expression .   (rule 830)

    '{' 	shift, and go to state 264

    $default	reduce using rule 830 (meta_postfix_expression)

    compound_tree_statement	go to state 1122



state 883

    meta_unary_expression  ->  '~' meta_cast_expression .   (rule 844)

    $default	reduce using rule 844 (meta_unary_expression)



state 884

    meta_function_definition  ->  '!' STATIC . meta_function_definition   (rule 807)
    meta_expression_statement  ->  '!' STATIC . meta_expression_statement   (rule 887)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 575
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 576
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 586
    '!' 	shift, and go to state 587

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_function_definition	go to state 1123
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 599
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 1124
    utility	go to state 66



state 885

    meta_unary_expression  ->  '!' meta_cast_expression .   (rule 843)

    $default	reduce using rule 843 (meta_unary_expression)



state 886

    meta_unary_expression  ->  star_ptr_operator meta_cast_expression .   (rule 839)

    $default	reduce using rule 839 (meta_unary_expression)



state 887

    meta_class_specifier  ->  meta_class_key meta_nested_id . compound_declaration   (rule 790)
    meta_class_specifier  ->  meta_class_key meta_nested_id . ':' base_specifier_list compound_declaration   (rule 791)
    meta_primary_id  ->  meta_class_key meta_nested_id .   (rule 822)
    meta_expression_statement  ->  meta_class_key meta_nested_id . object_statements_clause semi   (rule 880)

    '{' 	shift, and go to state 356
    ':' 	shift, and go to state 1125

    $default	reduce using rule 822 (meta_primary_id)

    compound_declaration	go to state 1126
    object_statements_clause	go to state 1127



state 888

    meta_primary_head  ->  meta_non_class_key meta_nested_id .   (rule 820)

    $default	reduce using rule 820 (meta_primary_head)



state 889

    meta_expression_statement  ->  meta_primary_head object_statements_clause . semi   (rule 879)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1128
    bang	go to state 701



state 890

    meta_function_definition  ->  meta_fn_postfix_expression compound_tree_statement .   (rule 803)

    $default	reduce using rule 803 (meta_function_definition)



state 891

    meta_postfix_expression  ->  meta_postfix_expression INC .   (rule 834)

    $default	reduce using rule 834 (meta_postfix_expression)



state 892

    meta_postfix_expression  ->  meta_postfix_expression DEC .   (rule 835)

    $default	reduce using rule 835 (meta_postfix_expression)



state 893

    meta_postfix_expression  ->  meta_postfix_expression ARROW . declarator_id   (rule 833)

    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1130
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 894

    meta_fn_postfix_expression  ->  meta_postfix_expression '[' . ']'   (rule 828)
    meta_postfix_expression  ->  meta_postfix_expression '[' . expression ']'   (rule 831)
    meta_expression_statement  ->  meta_postfix_expression '[' . ']' object_statements_clause semi   (rule 882)
    meta_expression_statement  ->  meta_postfix_expression '[' . expression ']' object_statements_clause semi   (rule 883)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    ']' 	shift, and go to state 1131
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1132
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 895

    meta_fn_postfix_expression  ->  meta_postfix_expression '(' . tree_argument_list.opt ')'   (rule 827)
    meta_expression_statement  ->  meta_postfix_expression '(' . tree_argument_list.opt ')' object_statements_clause semi   (rule 881)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    $default	reduce using rule 604 (tree_arguments.head)

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 290
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 295
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    func_definition	go to state 311
    ctor_definition	go to state 312
    constructor_head	go to state 313
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    tree_argument_list.opt	go to state 1133
    tree_argument.ctors	go to state 327
    tree_arguments.head	go to state 328
    tree_argument.ctors_comma_most	go to state 329
    tree_argument.most	go to state 330
    tree_argument.misc	go to state 331
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 333
    unterminated_tree_argument.most	go to state 334
    reserved_id	go to state 335
    token.punct	go to state 336
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345



state 896

    meta_postfix_expression  ->  meta_postfix_expression '.' . declarator_id   (rule 832)

    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1134
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 897

    meta_multiplicative_expression  ->  meta_multiplicative_expression '/' . meta_pm_expression   (rule 850)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 1135
    utility	go to state 66



state 898

    meta_multiplicative_expression  ->  meta_multiplicative_expression '%' . meta_pm_expression   (rule 851)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 1136
    utility	go to state 66



state 899

    star_ptr_operator  ->  star_ptr_operator . cv_qualifier   (rule 391)
    meta_multiplicative_expression  ->  meta_multiplicative_expression star_ptr_operator . meta_pm_expression   (rule 849)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    cv_qualifier	go to state 565
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 1137
    utility	go to state 66



state 900

    meta_additive_expression  ->  meta_additive_expression '+' . meta_multiplicative_expression   (rule 853)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 1138
    utility	go to state 66



state 901

    meta_additive_expression  ->  meta_additive_expression '-' . meta_multiplicative_expression   (rule 854)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 1139
    utility	go to state 66



state 902

    meta_shift_expression  ->  meta_shift_expression SHL . meta_additive_expression   (rule 856)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 1140
    utility	go to state 66



state 903

    meta_shift_expression  ->  meta_shift_expression SHR . meta_additive_expression   (rule 857)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 1141
    utility	go to state 66



state 904

    meta_relational_expression  ->  meta_relational_expression LE . meta_shift_expression   (rule 861)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 1142
    utility	go to state 66



state 905

    meta_relational_expression  ->  meta_relational_expression GE . meta_shift_expression   (rule 862)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 1143
    utility	go to state 66



state 906

    meta_relational_expression  ->  meta_relational_expression '<' . meta_shift_expression   (rule 859)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 1144
    utility	go to state 66



state 907

    meta_relational_expression  ->  meta_relational_expression '>' . meta_shift_expression   (rule 860)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 1145
    utility	go to state 66



state 908

    meta_equality_expression  ->  meta_equality_expression EQ . meta_relational_expression   (rule 864)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 1146
    utility	go to state 66



state 909

    meta_equality_expression  ->  meta_equality_expression NE . meta_relational_expression   (rule 865)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 1147
    utility	go to state 66



state 910

    meta_and_expression  ->  meta_and_expression '&' . meta_equality_expression   (rule 867)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 1148
    utility	go to state 66



state 911

    meta_exclusive_or_expression  ->  meta_exclusive_or_expression '^' . meta_and_expression   (rule 869)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 1149
    utility	go to state 66



state 912

    meta_inclusive_or_expression  ->  meta_inclusive_or_expression '|' . meta_exclusive_or_expression   (rule 871)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 1150
    utility	go to state 66



state 913

    meta_logical_and_expression  ->  meta_logical_and_expression LOG_AND . meta_inclusive_or_expression   (rule 873)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 1151
    utility	go to state 66



state 914

    meta_logical_or_expression  ->  meta_logical_or_expression LOG_OR . meta_logical_and_expression   (rule 875)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 1152
    utility	go to state 66



state 915

    meta_conditional_expression  ->  meta_logical_or_expression '?' . meta_conditional_expression ':' meta_conditional_expression   (rule 877)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 1153
    meta_conditional_expression	go to state 1154
    utility	go to state 66



state 916

    meta_expression_statement  ->  meta_logical_or_expression assignment_operator . line tree_statement   (rule 884)

    $default	reduce using rule 970 (line)

    line	go to state 1155



state 917

    meta_expression_statement  ->  meta_conditional_expression semi .   (rule 878)

    $default	reduce using rule 878 (meta_expression_statement)



state 918

    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 918
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    '!' 	shift, and go to state 549

    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    cv_qualifier	go to state 307
    access_specifier	go to state 412



state 919

    template_parameter_clause  ->  TEMPLATE '<' . template_parameter_list '>'   (rule 555)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 928
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 969 (bang)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 401
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 407
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 408
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 409
    templated_parameter_declaration	go to state 930
    templated_abstract_declaration	go to state 411
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_parameter_clause	go to state 931
    template_parameter_list	go to state 932
    template_parameter	go to state 933
    simple_type_parameter	go to state 934
    templated_type_parameter	go to state 935
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66
    bang	go to state 936



state 920

    export_implementation  ->  EXPORT '/' IMPLEMENTATION . implementation_file   (rule 927)
    export_implementation  ->  EXPORT '/' IMPLEMENTATION . '=' implementation_file   (rule 928)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515
    '=' 	shift, and go to state 1158

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    implementation_file	go to state 1162
    file_name	go to state 1163
    file_entity	go to state 1164
    file_id	go to state 1165



state 921

    export_interface  ->  EXPORT '/' INTERFACE . interface_file   (rule 929)
    export_interface  ->  EXPORT '/' INTERFACE . '=' interface_file   (rule 930)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515
    '=' 	shift, and go to state 1166

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    interface_file	go to state 1167
    file_name	go to state 1163
    file_entity	go to state 1168
    file_id	go to state 1169



state 922

    export_all  ->  EXPORT '/' ALL . interface_file   (rule 931)
    export_all  ->  EXPORT '/' ALL . '=' interface_file   (rule 932)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515
    '=' 	shift, and go to state 1170

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    interface_file	go to state 1171
    file_name	go to state 1163
    file_entity	go to state 1168
    file_id	go to state 1169



state 923

    file_placement_declaration  ->  EXPORT '/' NOIMPLEMENTATION . semi   (rule 925)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1172
    bang	go to state 701



state 924

    file_placement_declaration  ->  EXPORT '/' UTILITY . semi   (rule 926)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1173
    bang	go to state 701



state 925

    linkage_specification  ->  EXTERN string looping_declaration .   (rule 379)

    $default	reduce using rule 379 (linkage_specification)



state 926

    function_specifier  ->  INLINE '/' IMPLEMENTATION .   (rule 336)

    $default	reduce using rule 336 (function_specifier)



state 927

    function_specifier  ->  INLINE '/' INTERFACE .   (rule 337)

    $default	reduce using rule 337 (function_specifier)



state 928

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    abstract_expression  ->  TEMPLATE . parenthesis_clause   (rule 82)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_parameter_clause  ->  TEMPLATE . '<' template_parameter_list '>'   (rule 555)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 623
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 549
    '<' 	shift, and go to state 919

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 431
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 929

    explicit_specialization  ->  TEMPLATE '<' '>' . declaration   (rule 573)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 350
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 351
    EXPLICIT	shift, and go to state 352
    EXPORT	shift, and go to state 353
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 354
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 356
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 970 (line)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    compound_declaration	go to state 361
    declaration	go to state 1174
    specialised_declaration	go to state 364
    block_declaration	go to state 365
    specialised_block_declaration	go to state 366
    simple_declaration	go to state 367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 368
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 369
    namespace_alias_definition	go to state 370
    namespace_declaration	go to state 371
    using_directive	go to state 372
    asm_definition	go to state 373
    linkage_specification	go to state 374
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    function_definition	go to state 378
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 381
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 382
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 384
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 385
    throw_expression	go to state 325
    segment	go to state 58
    meta_control_statement	go to state 386
    syntax_macro_definition	go to state 387
    include_declaration	go to state 388
    utility	go to state 66
    file_dependency_declaration	go to state 389
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 390
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 391
    line	go to state 393



state 930

    template_parameter  ->  templated_parameter_declaration .   (rule 562)

    $default	reduce using rule 562 (template_parameter)



state 931

    templated_type_parameter  ->  template_parameter_clause . CLASS   (rule 566)
    templated_type_parameter  ->  template_parameter_clause . CLASS identifier   (rule 567)

    CLASS	shift, and go to state 1175



state 932

    template_parameter_clause  ->  TEMPLATE '<' template_parameter_list . '>'   (rule 555)
    template_parameter_list  ->  template_parameter_list . ',' template_parameter   (rule 557)

    '>' 	shift, and go to state 1176
    ',' 	shift, and go to state 1177



state 933

    template_parameter_list  ->  template_parameter .   (rule 556)

    $default	reduce using rule 556 (template_parameter_list)



state 934

    template_parameter  ->  simple_type_parameter .   (rule 558)
    template_parameter  ->  simple_type_parameter . '=' type_id   (rule 559)

    '=' 	shift, and go to state 1178

    $default	reduce using rule 558 (template_parameter)



state 935

    template_parameter  ->  templated_type_parameter .   (rule 560)
    template_parameter  ->  templated_type_parameter . '=' identifier   (rule 561)

    '=' 	shift, and go to state 1179

    $default	reduce using rule 560 (template_parameter)



state 936

    template_parameter  ->  bang . error   (rule 563)

    error	shift, and go to state 1180



state 937

    using_directive  ->  USING NAMESPACE scoped_id . ';'   (rule 377)

    ';' 	shift, and go to state 1181



state 938

    using_implementation  ->  USING '/' IMPLEMENTATION . file_use   (rule 916)
    using_implementation  ->  USING '/' IMPLEMENTATION . '=' file_use   (rule 917)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515
    '=' 	shift, and go to state 1182

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    file_use	go to state 1183
    file_name	go to state 1163
    file_entity	go to state 1184
    file_id	go to state 1185



state 939

    include_declaration  ->  USING '/' INCLUDE . string_expr   (rule 907)
    include_declaration  ->  USING '/' INCLUDE . '/' utility string_expr   (rule 908)

    TreeLiteral	shift, and go to state 1186
    StringLiteral	shift, and go to state 127
    '/' 	shift, and go to state 1187

    string	go to state 1188
    string_expr	go to state 1189



state 940

    using_interface  ->  USING '/' INTERFACE . file_use   (rule 918)
    using_interface  ->  USING '/' INTERFACE . '=' file_use   (rule 919)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515
    '=' 	shift, and go to state 1190

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    file_use	go to state 1191
    file_name	go to state 1163
    file_entity	go to state 1184
    file_id	go to state 1185



state 941

    include_declaration  ->  USING '/' utility . string_expr   (rule 909)

    TreeLiteral	shift, and go to state 1186
    StringLiteral	shift, and go to state 127

    string	go to state 1188
    string_expr	go to state 1192



state 942

    function_specifier  ->  VIRTUAL '/' PURE .   (rule 339)

    $default	reduce using rule 339 (function_specifier)



state 943

    asm_definition  ->  ASM '(' string . ')' ';'   (rule 378)

    ')' 	shift, and go to state 1193



state 944

    labeled_statement  ->  CASE constant_expression ':' . looping_statement   (rule 231)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 1194
    start_search	go to state 635



state 945

    exception_declaration  ->  parameter_declaration .   (rule 579)

    $default	reduce using rule 579 (exception_declaration)



state 946

    handler  ->  CATCH '(' exception_declaration . ')' compound_statement   (rule 578)

    ')' 	shift, and go to state 1195



state 947

    labeled_statement  ->  DEFAULT ':' looping_statement .   (rule 232)

    $default	reduce using rule 232 (labeled_statement)



state 948

    iteration_statement  ->  DO looping_statement WHILE . '(' expression ')' ';'   (rule 245)

    '(' 	shift, and go to state 1196



state 949

    namespace_alias_definition  ->  NAMESPACE . scoped_id '=' scoped_id ';'   (rule 375)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 1197
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 950

    statement  ->  AUTO . control_statement   (rule 224)
    statement  ->  AUTO . meta_expression_statement   (rule 225)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 1198
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 1199
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    BREAK	shift, and go to state 730
    CASE	shift, and go to state 952
    CONTINUE	shift, and go to state 732
    DEFAULT	shift, and go to state 953
    DO  	shift, and go to state 222
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 954
    GOTO	shift, and go to state 736
    IF  	shift, and go to state 955
    RETURN	shift, and go to state 738
    SIZEOF	shift, and go to state 577
    SWITCH	shift, and go to state 956
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    WHILE	shift, and go to state 958
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 1200

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    control_statement	go to state 1201
    labeled_statement	go to state 963
    selection_statement	go to state 965
    iteration_statement	go to state 966
    jump_statement	go to state 967
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 1202
    utility	go to state 66



state 951

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    abstract_expression  ->  TEMPLATE . parenthesis_clause   (rule 82)
    specialised_block_declaration  ->  TEMPLATE . specialised_block_declaration   (rule 289)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 949
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 1203
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 715
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '(' 	shift, and go to state 130
    '!' 	shift, and go to state 549

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    specialised_block_declaration	go to state 717
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_alias_definition	go to state 370
    using_directive	go to state 372
    asm_definition	go to state 373
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 431
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 952

    labeled_statement  ->  CASE . constant_expression ':' looping_statement   (rule 231)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 163
    conditional_expression	go to state 164
    constant_expression	go to state 631
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 953

    labeled_statement  ->  DEFAULT . ':' looping_statement   (rule 232)

    ':' 	shift, and go to state 633



state 954

    iteration_statement  ->  FOR . '(' for_init_statement condition.opt ';' expression.opt ')' looping_statement   (rule 246)

    '(' 	shift, and go to state 636



state 955

    selection_statement  ->  IF . '(' condition ')' looping_statement   (rule 238)
    selection_statement  ->  IF . '(' condition ')' looping_statement ELSE looping_statement   (rule 239)

    '(' 	shift, and go to state 637



state 956

    selection_statement  ->  SWITCH . '(' condition ')' looping_statement   (rule 240)

    '(' 	shift, and go to state 639



state 957

    try_block  ->  TRY . compound_statement handler_seq   (rule 575)

    '{' 	shift, and go to state 668

    compound_statement	go to state 1204



state 958

    iteration_statement  ->  WHILE . '(' condition ')' looping_statement   (rule 244)

    '(' 	shift, and go to state 645



state 959

    init_declarations  ->  assignment_expression . ',' init_declaration   (rule 380)
    init_declaration  ->  assignment_expression .   (rule 385)
    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)

    ':' 	shift, and go to state 669
    ',' 	shift, and go to state 719

    $default	reduce using rule 385 (init_declaration)

    object_statements_clause	go to state 673



state 960

    looping_statement  ->  start_search looped_statement .   (rule 216)

    $default	reduce using rule 216 (looping_statement)



state 961

    looped_statement  ->  statement .   (rule 217)

    $default	reduce using rule 217 (looped_statement)



state 962

    statement  ->  control_statement .   (rule 220)

    $default	reduce using rule 220 (statement)



state 963

    control_statement  ->  labeled_statement .   (rule 226)

    $default	reduce using rule 226 (control_statement)



state 964

    statement  ->  compound_statement .   (rule 221)

    $default	reduce using rule 221 (statement)



state 965

    control_statement  ->  selection_statement .   (rule 227)

    $default	reduce using rule 227 (control_statement)



state 966

    control_statement  ->  iteration_statement .   (rule 228)

    $default	reduce using rule 228 (control_statement)



state 967

    control_statement  ->  jump_statement .   (rule 229)

    $default	reduce using rule 229 (control_statement)



state 968

    statement  ->  declaration_statement .   (rule 222)

    $default	reduce using rule 222 (statement)



state 969

    declaration_statement  ->  block_declaration .   (rule 252)

    $default	reduce using rule 252 (declaration_statement)



state 970

    simple_declaration  ->  decl_specifier_prefix . simple_declaration   (rule 294)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 959
    simple_declaration	go to state 720
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 970
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    constructor_head	go to state 971
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 971

    simple_declaration  ->  constructor_head . ',' assignment_expression ';'   (rule 292)
    init_declarations  ->  constructor_head . ',' bit_field_init_declaration   (rule 383)
    init_declarations  ->  constructor_head . ',' init_object_declaration   (rule 384)
    constructor_head  ->  constructor_head . ',' assignment_expression   (rule 450)

    ',' 	shift, and go to state 725



state 972

    statement  ->  try_block .   (rule 223)

    $default	reduce using rule 223 (statement)



state 973

    looped_statement  ->  advance_search . '+' looped_statement   (rule 218)
    looped_statement  ->  advance_search . '-'   (rule 219)

    '+' 	shift, and go to state 1205
    '-' 	shift, and go to state 1206



state 974

    iteration_statement  ->  FOR '(' for_init_statement . condition.opt ';' expression.opt ')' looping_statement   (rule 246)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 241 (condition.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    condition.opt	go to state 1207
    condition	go to state 1208
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 977
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 975

    for_init_statement  ->  simple_declaration .   (rule 247)

    $default	reduce using rule 247 (for_init_statement)



state 976

    selection_statement  ->  IF '(' condition . ')' looping_statement   (rule 238)
    selection_statement  ->  IF '(' condition . ')' looping_statement ELSE looping_statement   (rule 239)

    ')' 	shift, and go to state 1209



state 977

    condition  ->  parameter_declaration_list .   (rule 243)
    parameter_declaration_list  ->  parameter_declaration_list . ',' parameter_declaration   (rule 422)

    ',' 	shift, and go to state 802

    $default	reduce using rule 243 (condition)



state 978

    selection_statement  ->  SWITCH '(' condition . ')' looping_statement   (rule 240)

    ')' 	shift, and go to state 1210



state 979

    mem_initializer_id  ->  scoped_id .   (rule 510)

    $default	reduce using rule 510 (mem_initializer_id)



state 980

    ctor_initializer  ->  ':' mem_initializer_list .   (rule 502)
    ctor_initializer  ->  ':' mem_initializer_list . bang error   (rule 503)
    mem_initializer_list_head  ->  mem_initializer_list . ','   (rule 506)
    mem_initializer_list_head  ->  mem_initializer_list . bang error ','   (rule 507)
    mem_initializer_list_head  ->  mem_initializer_list . bang error '#'   (rule 508)

    ',' 	shift, and go to state 1211

    error	reduce using rule 969 (bang)
    STATIC	reduce using rule 969 (bang)
    WHILE	reduce using rule 969 (bang)
    ELLIPSIS	reduce using rule 969 (bang)
    RAMMARG	reduce using rule 969 (bang)
    '#' 	reduce using rule 969 (bang)
    $default	reduce using rule 502 (ctor_initializer)

    bang	go to state 1212



state 981

    mem_initializer_list  ->  mem_initializer_list_head . mem_initializer   (rule 505)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 979
    mem_initializer	go to state 1213
    mem_initializer_id	go to state 983
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 982

    mem_initializer_list  ->  mem_initializer .   (rule 504)

    $default	reduce using rule 504 (mem_initializer_list)



state 983

    mem_initializer  ->  mem_initializer_id . '(' expression_list.opt ')'   (rule 509)

    '(' 	shift, and go to state 1214



state 984

    function_try_block  ->  TRY function_block handler_seq .   (rule 451)

    $default	reduce using rule 451 (function_try_block)



state 985

    function_block  ->  ctor_initializer.opt function_body .   (rule 452)

    $default	reduce using rule 452 (function_block)



state 986

    iteration_statement  ->  WHILE '(' condition . ')' looping_statement   (rule 244)

    ')' 	shift, and go to state 1215



state 987

    compound_tree_statement  ->  '{' tree_statement_seq.opt '}' .   (rule 633)

    $default	reduce using rule 633 (compound_tree_statement)



state 988

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_unterminated_tree_argument . '}'   (rule 634)
    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_unterminated_tree_argument . '#' bang error_ecarb   (rule 635)

    '}' 	shift, and go to state 1216
    '#' 	shift, and go to state 1217



state 989

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_tree_statement . '#' bang error_ecarb   (rule 636)
    tree_statement_seq.opt  ->  tree_statement_seq.opt looping_tree_statement .   (rule 638)
    tree_statement_seq.opt  ->  tree_statement_seq.opt looping_tree_statement . '#' bang error ';'   (rule 639)

    '#' 	shift, and go to state 1218

    $default	reduce using rule 638 (tree_statement_seq.opt)



state 990

    looping_unterminated_tree_argument  ->  start_search . looped_unterminated_tree_argument   (rule 622)
    looping_tree_statement  ->  start_search . looped_tree_statement   (rule 625)

    error	shift, and go to state 349
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 1219
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 1220
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_declarations	go to state 1221
    init_declaration	go to state 1222
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 1223
    function_definition	go to state 1224
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 1225
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    looped_unterminated_tree_argument	go to state 1226
    looped_tree_statement	go to state 1227
    tree_statement	go to state 1228
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 1229
    unterminated_tree_argument	go to state 1230
    unterminated_tree_argument.most	go to state 1231
    reserved_id	go to state 335
    token.punct	go to state 336
    simple_tree_declaration	go to state 1232
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345
    advance_search	go to state 1233



state 991

    bit_field_width  ->  logical_or_expression '?' . bit_field_width ':' bit_field_width   (rule 483)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 647
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_width	go to state 1234
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 992

    labeled_statement  ->  identifier_word ':' looping_statement .   (rule 230)

    $default	reduce using rule 230 (labeled_statement)



state 993

    unary_expression  ->  ptr_operator . cast_expression   (rule 110)
    ptr_operator_seq.opt  ->  ptr_operator . ptr_operator_seq.opt   (rule 400)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 399 (ptr_operator_seq.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 566
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 993
    ptr_operator_seq.opt	go to state 1083
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 994

    abstract_pointer_declaration  ->  multiplicative_expression star_ptr_operator ptr_operator_seq.opt .   (rule 424)

    $default	reduce using rule 424 (abstract_pointer_declaration)



state 995

    abstract_parameter_declaration  ->  and_expression '&' abstract_pointer_declaration .   (rule 427)

    $default	reduce using rule 427 (abstract_parameter_declaration)



state 996

    braced_initializer  ->  '{' . initializer_list '}'   (rule 456)
    braced_initializer  ->  '{' . initializer_list ',' '}'   (rule 457)
    braced_initializer  ->  '{' . '}'   (rule 458)
    braced_initializer  ->  '{' . looping_initializer_clause '#' bang error_ecarb   (rule 459)
    braced_initializer  ->  '{' . initializer_list ',' looping_initializer_clause '#' bang error_ecarb   (rule 460)

    '}' 	shift, and go to state 1235

    $default	reduce using rule 973 (start_search)

    initializer_list	go to state 1236
    looping_initializer_clause	go to state 1237
    start_search	go to state 1238



state 997

    assignment_expression  ->  logical_or_expression '=' braced_initializer .   (rule 172)

    $default	reduce using rule 172 (assignment_expression)



state 998

    assignment_expression  ->  logical_or_expression assignment_operator assignment_expression .   (rule 171)

    $default	reduce using rule 171 (assignment_expression)



state 999

    compound_statement  ->  '{' statement_seq.opt . '}'   (rule 233)
    compound_statement  ->  '{' statement_seq.opt . looping_statement '#' bang error_ecarb   (rule 234)
    statement_seq.opt  ->  statement_seq.opt . looping_statement   (rule 236)
    statement_seq.opt  ->  statement_seq.opt . looping_statement '#' bang error ';'   (rule 237)

    '}' 	shift, and go to state 1239

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 1240
    start_search	go to state 635



state 1000

    object_statements_clause  ->  ':' '{' . object_statement_seq.opt '}'   (rule 747)
    object_statements_clause  ->  ':' '{' . object_statement_seq.opt looping_object_statement '#' bang error_ecarb   (rule 748)

    $default	reduce using rule 749 (object_statement_seq.opt)

    object_statement_seq.opt	go to state 1241



state 1001

    bit_field_declaration  ->  assignment_expression ':' bit_field_width .   (rule 480)

    $default	reduce using rule 480 (bit_field_declaration)



state 1002

    special_parameter_declaration  ->  abstract_parameter_declaration '=' assignment_expression .   (rule 429)

    $default	reduce using rule 429 (special_parameter_declaration)



state 1003

    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    constructor_head  ->  constructor_head ',' assignment_expression .   (rule 450)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)

    ':' 	shift, and go to state 669

    $default	reduce using rule 450 (constructor_head)

    object_statements_clause	go to state 673



state 1004

    ctor_definition  ->  decl_specifier_prefix . ctor_definition   (rule 448)
    template_declaration  ->  decl_specifier_prefix . template_declaration   (rule 554)
    explicit_specialization  ->  decl_specifier_prefix . explicit_specialization   (rule 574)
    tree_argument.misc  ->  decl_specifier_prefix .   (rule 617)
    tree_argument.misc  ->  decl_specifier_prefix . assignment_expression   (rule 620)
    tree_argument.misc  ->  decl_specifier_prefix . tree_argument.misc   (rule 621)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 674
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 617 (tree_argument.misc)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1242
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 1004
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    ctor_definition	go to state 677
    constructor_head	go to state 1005
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 678
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 679
    throw_expression	go to state 325
    tree_argument.misc	go to state 682
    segment	go to state 58
    utility	go to state 66



state 1005

    ctor_definition  ->  constructor_head . function_try_block   (rule 446)
    ctor_definition  ->  constructor_head . function_body   (rule 447)
    constructor_head  ->  constructor_head . ',' assignment_expression   (rule 450)

    TRY 	shift, and go to state 667
    '{' 	shift, and go to state 668
    ',' 	shift, and go to state 1243

    compound_statement	go to state 670
    function_try_block	go to state 686
    function_body	go to state 687



state 1006

    tree_argument.ctors_comma_most  ->  constructor_head ',' tree_argument.most .   (rule 609)

    $default	reduce using rule 609 (tree_argument.ctors_comma_most)



state 1007

    initializer_clause  ->  assignment_expression .   (rule 454)

    $default	reduce using rule 454 (initializer_clause)



state 1008

    bit_field_init_declaration  ->  bit_field_declaration '=' initializer_clause .   (rule 485)

    $default	reduce using rule 485 (bit_field_init_declaration)



state 1009

    initializer_clause  ->  braced_initializer .   (rule 455)

    $default	reduce using rule 455 (initializer_clause)



state 1010

    tree_argument_list.opt  ->  tree_arguments.head ',' tree_argument_list.opt .   (rule 600)

    $default	reduce using rule 600 (tree_argument_list.opt)



state 1011

    error_semi  ->  error . ';'   (rule 966)
    error_semi  ->  error . '#'   (rule 967)

    '#' 	shift, and go to state 1244
    ';' 	shift, and go to state 1245



state 1012

    semi  ->  bang error_semi .   (rule 963)

    $default	reduce using rule 963 (semi)



state 1013

    translation_unit  ->  declaration_seq.opt util looping_declaration '#' bang error . '#'   (rule 71)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' bang error . ';'   (rule 257)

    '#' 	shift, and go to state 1246
    ';' 	shift, and go to state 1247



state 1014

    declaration  ->  AUTO meta_class_specifier semi .   (rule 272)

    $default	reduce using rule 272 (declaration)



state 1015

    meta_type  ->  MetaType .   (rule 801)

    $default	reduce using rule 801 (meta_type)



state 1016

    meta_type  ->  meta_simple_type .   (rule 802)

    $default	reduce using rule 802 (meta_type)



state 1017

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type . identifier '(' syntax_macro_parameter_list ')' compound_tree_statement   (rule 888)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type . identifier '(' syntax_macro_parameter_list ')' '[' ']' compound_tree_statement   (rule 889)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type . identifier '(' ')' compound_tree_statement   (rule 890)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type . identifier '(' ')' '[' ']' compound_tree_statement   (rule 891)

    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 1248
    segment	go to state 58
    utility	go to state 66



state 1018

    compound_declaration  ->  '{' nest declaration_seq.opt . '}'   (rule 253)
    compound_declaration  ->  '{' nest declaration_seq.opt . util looping_declaration '#' bang error_ecarb   (rule 254)
    declaration_seq.opt  ->  declaration_seq.opt . util looping_declaration   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt . util looping_declaration '#' bang error ';'   (rule 257)

    '}' 	shift, and go to state 1249

    $default	reduce using rule 975 (util)

    util	go to state 1250



state 1019

    init_declaration  ->  assignment_expression .   (rule 385)
    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)

    ':' 	shift, and go to state 669

    $default	reduce using rule 385 (init_declaration)

    object_statements_clause	go to state 673



state 1020

    init_declarations  ->  assignment_expression ',' init_declaration .   (rule 380)

    $default	reduce using rule 380 (init_declarations)



state 1021

    init_declaration  ->  init_object_declaration .   (rule 387)

    $default	reduce using rule 387 (init_declaration)



state 1022

    init_declaration  ->  bit_field_init_declaration .   (rule 386)
    init_object_declaration  ->  bit_field_init_declaration . object_statements_clause   (rule 389)

    ':' 	shift, and go to state 689

    $default	reduce using rule 386 (init_declaration)

    object_statements_clause	go to state 690



state 1023

    init_declarations  ->  init_declarations ',' init_declaration .   (rule 381)

    $default	reduce using rule 381 (init_declarations)



state 1024

    init_declarations  ->  init_object_declaration ',' init_declaration .   (rule 382)

    $default	reduce using rule 382 (init_declarations)



state 1025

    simple_declaration  ->  constructor_head ',' assignment_expression . ';'   (rule 292)
    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    constructor_head  ->  constructor_head ',' assignment_expression .   (rule 450)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)

    ';' 	shift, and go to state 1251
    ':' 	shift, and go to state 669

    $default	reduce using rule 450 (constructor_head)

    object_statements_clause	go to state 673



state 1026

    init_declarations  ->  constructor_head ',' init_object_declaration .   (rule 384)

    $default	reduce using rule 384 (init_declarations)



state 1027

    init_declarations  ->  constructor_head ',' bit_field_init_declaration .   (rule 383)
    init_object_declaration  ->  bit_field_init_declaration . object_statements_clause   (rule 389)

    ':' 	shift, and go to state 689

    $default	reduce using rule 383 (init_declarations)

    object_statements_clause	go to state 690



state 1028

    looped_declaration  ->  advance_search '+' looped_declaration .   (rule 260)

    $default	reduce using rule 260 (looped_declaration)



state 1029

    jump_statement  ->  BREAK ';' .   (rule 248)

    $default	reduce using rule 248 (jump_statement)



state 1030

    meta_control_statement1  ->  CASE constant_expression . ':' lined_declaration   (rule 809)

    ':' 	shift, and go to state 1252



state 1031

    jump_statement  ->  CONTINUE ';' .   (rule 249)

    $default	reduce using rule 249 (jump_statement)



state 1032

    meta_control_statement1  ->  DEFAULT ':' . lined_declaration   (rule 810)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1253
    line	go to state 1034



state 1033

    meta_control_statement1  ->  DO lined_declaration . WHILE '(' expression ')' semi   (rule 811)

    WHILE	shift, and go to state 1254



state 1034

    lined_declaration  ->  line . declaration   (rule 262)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 350
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 351
    EXPLICIT	shift, and go to state 352
    EXPORT	shift, and go to state 353
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 354
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 356
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 970 (line)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    compound_declaration	go to state 361
    declaration	go to state 1255
    specialised_declaration	go to state 364
    block_declaration	go to state 365
    specialised_block_declaration	go to state 366
    simple_declaration	go to state 367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 368
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 369
    namespace_alias_definition	go to state 370
    namespace_declaration	go to state 371
    using_directive	go to state 372
    asm_definition	go to state 373
    linkage_specification	go to state 374
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    function_definition	go to state 378
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 381
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 382
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 384
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 385
    throw_expression	go to state 325
    segment	go to state 58
    meta_control_statement	go to state 386
    syntax_macro_definition	go to state 387
    include_declaration	go to state 388
    utility	go to state 66
    file_dependency_declaration	go to state 389
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 390
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 391
    line	go to state 393



state 1035

    meta_control_statement1  ->  FOR '(' . for_init_statement condition.opt ';' expression.opt ')' lined_declaration   (rule 816)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 959
    for_init_statement	go to state 1256
    simple_declaration	go to state 975
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 970
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    constructor_head	go to state 971
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1036

    jump_statement  ->  GOTO identifier . ';'   (rule 251)

    ';' 	shift, and go to state 1257



state 1037

    meta_control_statement1  ->  IF '(' . condition ')' lined_declaration   (rule 812)
    meta_control_statement1  ->  IF '(' . condition ')' lined_declaration ELSE lined_declaration   (rule 813)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    condition	go to state 1258
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 977
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1038

    jump_statement  ->  RETURN expression.opt . ';'   (rule 250)

    ';' 	shift, and go to state 1259



state 1039

    meta_control_statement1  ->  SWITCH '(' . expression ')' lined_declaration   (rule 814)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1260
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1040

    meta_control_statement1  ->  WHILE '(' . condition ')' lined_declaration   (rule 815)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    condition	go to state 1261
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 977
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1041

    templated_and_expression  ->  templated_and_expression '&' . templated_equality_expression   (rule 198)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 1047
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1042

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    templated_relational_expression  ->  templated_relational_expression LE shift_expression .   (rule 192)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 192 (templated_relational_expression)



state 1043

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    templated_relational_expression  ->  templated_relational_expression GE shift_expression .   (rule 193)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 193 (templated_relational_expression)



state 1044

    shift_expression  ->  shift_expression . SHL additive_expression   (rule 148)
    shift_expression  ->  shift_expression . SHR additive_expression   (rule 149)
    templated_relational_expression  ->  templated_relational_expression '<' shift_expression .   (rule 191)

    SHL 	shift, and go to state 533
    SHR 	shift, and go to state 534

    $default	reduce using rule 191 (templated_relational_expression)



state 1045

    templated_relational_expression  ->  templated_relational_expression . '<' shift_expression   (rule 191)
    templated_relational_expression  ->  templated_relational_expression . LE shift_expression   (rule 192)
    templated_relational_expression  ->  templated_relational_expression . GE shift_expression   (rule 193)
    templated_equality_expression  ->  templated_equality_expression EQ templated_relational_expression .   (rule 195)

    LE  	shift, and go to state 745
    GE  	shift, and go to state 746
    '<' 	shift, and go to state 747

    $default	reduce using rule 195 (templated_equality_expression)



state 1046

    templated_relational_expression  ->  templated_relational_expression . '<' shift_expression   (rule 191)
    templated_relational_expression  ->  templated_relational_expression . LE shift_expression   (rule 192)
    templated_relational_expression  ->  templated_relational_expression . GE shift_expression   (rule 193)
    templated_equality_expression  ->  templated_equality_expression NE templated_relational_expression .   (rule 196)

    LE  	shift, and go to state 745
    GE  	shift, and go to state 746
    '<' 	shift, and go to state 747

    $default	reduce using rule 196 (templated_equality_expression)



state 1047

    templated_equality_expression  ->  templated_equality_expression . EQ templated_relational_expression   (rule 195)
    templated_equality_expression  ->  templated_equality_expression . NE templated_relational_expression   (rule 196)
    templated_and_expression  ->  templated_and_expression '&' templated_equality_expression .   (rule 198)

    EQ  	shift, and go to state 748
    NE  	shift, and go to state 749

    $default	reduce using rule 198 (templated_and_expression)



state 1048

    templated_abstract_declaration  ->  templated_and_expression '&' abstract_pointer_declaration .   (rule 440)

    $default	reduce using rule 440 (templated_abstract_declaration)



state 1049

    templated_and_expression  ->  templated_and_expression . '&' templated_equality_expression   (rule 198)
    templated_exclusive_or_expression  ->  templated_exclusive_or_expression '^' templated_and_expression .   (rule 200)

    '&' 	shift, and go to state 1041

    $default	reduce using rule 200 (templated_exclusive_or_expression)



state 1050

    templated_exclusive_or_expression  ->  templated_exclusive_or_expression . '^' templated_and_expression   (rule 200)
    templated_inclusive_or_expression  ->  templated_inclusive_or_expression '|' templated_exclusive_or_expression .   (rule 202)

    '^' 	shift, and go to state 751

    $default	reduce using rule 202 (templated_inclusive_or_expression)



state 1051

    templated_inclusive_or_expression  ->  templated_inclusive_or_expression . '|' templated_exclusive_or_expression   (rule 202)
    templated_logical_and_expression  ->  templated_logical_and_expression LOG_AND templated_inclusive_or_expression .   (rule 204)

    '|' 	shift, and go to state 752

    $default	reduce using rule 204 (templated_logical_and_expression)



state 1052

    templated_logical_and_expression  ->  templated_logical_and_expression . LOG_AND templated_inclusive_or_expression   (rule 204)
    templated_logical_or_expression  ->  templated_logical_or_expression LOG_OR templated_logical_and_expression .   (rule 206)

    LOG_AND	shift, and go to state 753

    $default	reduce using rule 206 (templated_logical_or_expression)



state 1053

    templated_expression  ->  templated_assignment_expression .   (rule 212)
    templated_expression_list  ->  templated_assignment_expression .   (rule 214)

    $default	reduce using rule 212 (templated_expression)



state 1054

    templated_conditional_expression  ->  templated_logical_or_expression '?' templated_expression . ':' templated_assignment_expression   (rule 208)

    ':' 	shift, and go to state 1262



state 1055

    templated_expression  ->  templated_expression_list . ',' templated_assignment_expression   (rule 213)
    templated_expression_list  ->  templated_expression_list . ',' templated_assignment_expression   (rule 215)

    ',' 	shift, and go to state 1263



state 1056

    templated_assignment_expression  ->  templated_logical_or_expression assignment_operator templated_assignment_expression .   (rule 210)

    $default	reduce using rule 210 (templated_assignment_expression)



state 1057

    templated_parameter_declaration  ->  templated_abstract_declaration '=' templated_assignment_expression .   (rule 436)

    $default	reduce using rule 436 (templated_parameter_declaration)



state 1058

    template_argument_list  ->  template_argument_list ',' template_argument .   (rule 571)

    $default	reduce using rule 571 (template_argument_list)



state 1059

    enumerator  ->  identifier .   (rule 372)

    $default	reduce using rule 372 (enumerator)



state 1060

    enumerator_list  ->  enumerator_list_head enumerator_definition .   (rule 369)

    $default	reduce using rule 369 (enumerator_list)



state 1061

    enumerator_definition  ->  enumerator .   (rule 370)
    enumerator_definition  ->  enumerator . '=' constant_expression   (rule 371)

    '=' 	shift, and go to state 1264

    $default	reduce using rule 370 (enumerator_definition)



state 1062

    enumerator_clause  ->  '{' enumerator_list ',' . enumerator_definition_ecarb   (rule 360)
    enumerator_list_head  ->  enumerator_list ',' . enumerator_definition_filler   (rule 368)

    '}' 	shift, and go to state 1265

    error	reduce using rule 969 (bang)
    STATIC	reduce using rule 969 (bang)
    WHILE	reduce using rule 969 (bang)
    ELLIPSIS	reduce using rule 969 (bang)
    RAMMARG	reduce using rule 969 (bang)
    '#' 	reduce using rule 969 (bang)
    $default	reduce using rule 365 (enumerator_definition_filler)

    enumerator_definition_ecarb	go to state 1266
    enumerator_definition_filler	go to state 1267
    bang	go to state 1268



state 1063

    enumerator_clause  ->  '{' enumerator_list enumerator_list_ecarb .   (rule 359)

    $default	reduce using rule 359 (enumerator_clause)



state 1064

    enumerator_list_ecarb  ->  bang . error_ecarb   (rule 362)

    error	shift, and go to state 1269

    error_ecarb	go to state 1066



state 1065

    enumerator_definition_filler  ->  bang error . ','   (rule 366)
    error_ecarb  ->  error . '}'   (rule 964)
    error_ecarb  ->  error . '#'   (rule 965)

    '}' 	shift, and go to state 1270
    '#' 	shift, and go to state 1271
    ',' 	shift, and go to state 1272



state 1066

    enumerator_list_ecarb  ->  bang error_ecarb .   (rule 362)

    $default	reduce using rule 362 (enumerator_list_ecarb)



state 1067

    abstract_declarator.opt  ->  ptr_operator . abstract_declarator.opt   (rule 408)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134

    $default	reduce using rule 407 (abstract_declarator.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 1079
    global_scope	go to state 1080
    id_scope	go to state 1081
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 1067
    abstract_declarator.opt	go to state 1273
    direct_abstract_declarator.opt	go to state 1070
    direct_abstract_declarator	go to state 1071
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1068

    type_id  ->  type_specifier type_id .   (rule 406)

    $default	reduce using rule 406 (type_id)



state 1069

    type_id  ->  type_specifier abstract_declarator.opt .   (rule 405)

    $default	reduce using rule 405 (type_id)



state 1070

    direct_abstract_declarator  ->  direct_abstract_declarator.opt . parenthesis_clause   (rule 412)
    direct_abstract_declarator  ->  direct_abstract_declarator.opt . '[' ']'   (rule 413)
    direct_abstract_declarator  ->  direct_abstract_declarator.opt . '[' constant_expression ']'   (rule 414)

    '[' 	shift, and go to state 1274
    '(' 	shift, and go to state 130

    parenthesis_clause	go to state 1275
    parameters_clause	go to state 183



state 1071

    abstract_declarator.opt  ->  direct_abstract_declarator .   (rule 409)
    direct_abstract_declarator.opt  ->  direct_abstract_declarator .   (rule 411)

    $default	reduce using rule 409 (abstract_declarator.opt)



state 1072

    postfix_expression  ->  CONST_CAST '<' type_id '>' . '(' expression ')'   (rule 101)

    '(' 	shift, and go to state 1276



state 1073

    postfix_expression  ->  DYNAMIC_CAST '<' type_id '>' . '(' expression ')'   (rule 98)

    '(' 	shift, and go to state 1277



state 1074

    new_initializer.opt  ->  '(' expression_list.opt . ')'   (rule 134)

    ')' 	shift, and go to state 1278



state 1075

    expression_list.opt  ->  expression_list .   (rule 104)
    expression_list  ->  expression_list . ',' assignment_expression   (rule 106)

    ',' 	shift, and go to state 1279

    $default	reduce using rule 104 (expression_list.opt)



state 1076

    expression_list  ->  assignment_expression .   (rule 105)

    $default	reduce using rule 105 (expression_list)



state 1077

    direct_new_declarator  ->  '[' expression . ']'   (rule 131)

    ']' 	shift, and go to state 1280



state 1078

    direct_new_declarator  ->  direct_new_declarator '[' . constant_expression ']'   (rule 132)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 163
    conditional_expression	go to state 164
    constant_expression	go to state 1281
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1079

    id_scope  ->  id . SCOPE   (rule 32)

    SCOPE	shift, and go to state 420



state 1080

    ptr_operator  ->  global_scope . nested_ptr_operator   (rule 396)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 1079
    id_scope	go to state 1081
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 513
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1081

    nested_ptr_operator  ->  id_scope . nested_ptr_operator   (rule 393)

    TEMPLATE	shift, and go to state 78
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '*' 	shift, and go to state 133

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 1079
    id_scope	go to state 1081
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 518
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1082

    new_declarator  ->  ptr_operator new_declarator .   (rule 129)

    $default	reduce using rule 129 (new_declarator)



state 1083

    ptr_operator_seq.opt  ->  ptr_operator ptr_operator_seq.opt .   (rule 400)

    $default	reduce using rule 400 (ptr_operator_seq.opt)



state 1084

    new_expression  ->  NEW parameters_clause new_type_id new_initializer.opt .   (rule 123)

    $default	reduce using rule 123 (new_expression)



state 1085

    new_expression  ->  NEW parameters_clause parameters_clause new_initializer.opt .   (rule 125)

    $default	reduce using rule 125 (new_expression)



state 1086

    postfix_expression  ->  REINTERPRET_CAST '<' type_id '>' . '(' expression ')'   (rule 100)

    '(' 	shift, and go to state 1282



state 1087

    postfix_expression  ->  STATIC_CAST '<' type_id '>' . '(' expression ')'   (rule 99)

    '(' 	shift, and go to state 1283



state 1088

    expression_list  ->  expression_list ',' assignment_expression .   (rule 106)
    expression  ->  expression_list ',' assignment_expression .   (rule 188)

    $default	reduce using rule 188 (expression)



state 1089

    parameter_declaration_list  ->  parameter_declaration_list ',' parameter_declaration .   (rule 422)

    $default	reduce using rule 422 (parameter_declaration_list)



state 1090

    pseudo_destructor_id  ->  TEMPLATE pseudo_destructor_id .   (rule 54)

    $default	reduce using rule 54 (pseudo_destructor_id)



state 1091

    built_in_type_id  ->  built_in_type_id . built_in_type_specifier   (rule 51)
    pseudo_destructor_id  ->  '~' built_in_type_id .   (rule 53)

    BuiltInTypeSpecifier	shift, and go to state 13

    $default	reduce using rule 53 (pseudo_destructor_id)

    built_in_type_specifier	go to state 80



state 1092

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    pseudo_destructor_id  ->  TEMPLATE . pseudo_destructor_id   (rule 54)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 1092
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 1093

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 1090
    built_in_type_specifier	go to state 52
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 1093

    pseudo_destructor_id  ->  '~' . built_in_type_id   (rule 53)

    BuiltInTypeSpecifier	shift, and go to state 13

    built_in_type_id	go to state 1091
    built_in_type_specifier	go to state 52



state 1094

    scoped_pseudo_destructor_id  ->  global_scope . scoped_pseudo_destructor_id   (rule 58)

    TEMPLATE	shift, and go to state 1284
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 1093

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 1079
    global_scope	go to state 1094
    id_scope	go to state 1285
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 814
    nested_pseudo_destructor_id	go to state 815
    scoped_pseudo_destructor_id	go to state 1095
    built_in_type_specifier	go to state 52
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1095

    scoped_pseudo_destructor_id  ->  global_scope scoped_pseudo_destructor_id .   (rule 58)

    $default	reduce using rule 58 (scoped_pseudo_destructor_id)



state 1096

    destructor_id  ->  TEMPLATE . destructor_id   (rule 38)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    pseudo_destructor_id  ->  TEMPLATE . pseudo_destructor_id   (rule 54)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 1096
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 806

    identifier_word	go to state 47
    identifier	go to state 69
    destructor_id	go to state 803
    special_function_id	go to state 428
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 1090
    built_in_type_specifier	go to state 52
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 1097

    nested_pseudo_destructor_id  ->  id_scope nested_pseudo_destructor_id .   (rule 56)

    $default	reduce using rule 56 (nested_pseudo_destructor_id)



state 1098

    pseudo_destructor_id  ->  built_in_type_id SCOPE . '~' built_in_type_id   (rule 52)

    '~' 	shift, and go to state 1286



state 1099

    postfix_expression  ->  postfix_expression '[' expression.opt ']' .   (rule 91)

    $default	reduce using rule 91 (postfix_expression)



state 1100

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' . type1_parameters mark '{' error   (rule 88)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' . type1_parameters mark error   (rule 89)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' . error   (rule 90)

    error	shift, and go to state 1287
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    type1_parameters	go to state 1288
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 1289
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1101

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '-' .   (rule 87)

    $default	reduce using rule 87 (postfix_expression)



state 1102

    conditional_expression  ->  logical_or_expression '?' expression ':' . assignment_expression   (rule 169)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1290
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1103

    exception_specification  ->  THROW '(' . ')'   (rule 584)
    exception_specification  ->  THROW '(' . type_id_list ')'   (rule 585)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    ')' 	shift, and go to state 1291
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    type_id	go to state 1292
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    type_id_list	go to state 1293
    segment	go to state 58
    utility	go to state 66



state 1104

    class_specifier  ->  class_specifier_head nest declaration_seq.opt '}' .   (rule 477)

    $default	reduce using rule 477 (class_specifier)



state 1105

    declaration_seq.opt  ->  declaration_seq.opt util . looping_declaration   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt util . looping_declaration '#' bang error ';'   (rule 257)
    class_specifier  ->  class_specifier_head nest declaration_seq.opt util . looping_declaration '#' bang error_ecarb   (rule 478)

    $default	reduce using rule 974 (start_search1)

    looping_declaration	go to state 1294
    start_search1	go to state 91



state 1106

    base_specifier  ->  AUTO base_specifier .   (rule 492)

    $default	reduce using rule 492 (base_specifier)



state 1107

    base_specifier  ->  VIRTUAL base_specifier .   (rule 490)

    $default	reduce using rule 490 (base_specifier)



state 1108

    base_specifier  ->  '!' VIRTUAL . base_specifier   (rule 491)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier	go to state 1295
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1109

    class_specifier_head  ->  class_key ':' base_specifier_list '{' .   (rule 471)

    $default	reduce using rule 471 (class_specifier_head)



state 1110

    base_specifier_list  ->  base_specifier_list ',' . base_specifier   (rule 487)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier	go to state 1296
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1111

    base_specifier  ->  access_specifier base_specifier .   (rule 489)

    $default	reduce using rule 489 (base_specifier)



state 1112

    elaborated_class_specifier  ->  class_key scoped_id colon_mark error .   (rule 469)

    $default	reduce using rule 469 (elaborated_class_specifier)



state 1113

    class_specifier_head  ->  class_key scoped_id colon_mark base_specifier_list . '{'   (rule 470)
    base_specifier_list  ->  base_specifier_list . ',' base_specifier   (rule 487)

    '{' 	shift, and go to state 1297
    ',' 	shift, and go to state 1110



state 1114

    file_name  ->  string .   (rule 937)

    $default	reduce using rule 937 (file_name)



state 1115

    file_name  ->  file_name . '/' INTERFACE   (rule 938)
    file_name  ->  file_name . '/' IMPLEMENTATION   (rule 939)
    file_name  ->  file_name . '/' TEMPLATE   (rule 940)
    file_name  ->  file_name . '/' utility   (rule 941)
    file_name  ->  file_name . '/' GUARD '=' string_expr   (rule 942)
    file_name  ->  file_name . '/' NOGUARD   (rule 943)
    file_name  ->  file_name . '/' PATH '=' string_expr   (rule 944)
    file_name  ->  file_name . '/' PREFIX '=' string_expr   (rule 945)
    file_name  ->  file_name . '/' SUFFIX '=' string_expr   (rule 946)
    filespace_specifier  ->  NAMESPACE '/' FILE file_name . compound_declaration   (rule 955)

    '{' 	shift, and go to state 356
    '/' 	shift, and go to state 1298

    compound_declaration	go to state 1299



state 1116

    namespace_alias_definition  ->  NAMESPACE scoped_id '=' scoped_id . ';'   (rule 375)

    ';' 	shift, and go to state 1300



state 1117

    meta_primary_id  ->  meta_class_key meta_nested_id .   (rule 822)
    meta_expression_statement  ->  meta_class_key meta_nested_id . object_statements_clause semi   (rule 880)

    ':' 	shift, and go to state 689

    $default	reduce using rule 822 (meta_primary_id)

    object_statements_clause	go to state 1127



state 1118

    meta_primary_id  ->  meta_class_key meta_nested_id .   (rule 822)

    $default	reduce using rule 822 (meta_primary_id)



state 1119

    meta_fn_postfix_expression  ->  meta_postfix_expression '[' . ']'   (rule 828)
    meta_postfix_expression  ->  meta_postfix_expression '[' . expression ']'   (rule 831)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    ']' 	shift, and go to state 1301
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1302
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1120

    meta_fn_postfix_expression  ->  meta_postfix_expression '(' . tree_argument_list.opt ')'   (rule 827)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    $default	reduce using rule 604 (tree_arguments.head)

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 290
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 295
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_object_declaration	go to state 304
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 310
    func_definition	go to state 311
    ctor_definition	go to state 312
    constructor_head	go to state 313
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 317
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    tree_argument_list.opt	go to state 1303
    tree_argument.ctors	go to state 327
    tree_arguments.head	go to state 328
    tree_argument.ctors_comma_most	go to state 329
    tree_argument.most	go to state 330
    tree_argument.misc	go to state 331
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 333
    unterminated_tree_argument.most	go to state 334
    reserved_id	go to state 335
    token.punct	go to state 336
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345



state 1121

    meta_primary_expression  ->  '(' tree_argument_list.opt ')' .   (rule 826)

    $default	reduce using rule 826 (meta_primary_expression)



state 1122

    meta_function_definition  ->  '~' meta_fn_postfix_expression compound_tree_statement .   (rule 804)

    $default	reduce using rule 804 (meta_function_definition)



state 1123

    meta_function_definition  ->  '!' STATIC meta_function_definition .   (rule 807)

    $default	reduce using rule 807 (meta_function_definition)



state 1124

    meta_expression_statement  ->  '!' STATIC meta_expression_statement .   (rule 887)

    $default	reduce using rule 887 (meta_expression_statement)



state 1125

    object_statements_clause  ->  ':' . '{' object_statement_seq.opt '}'   (rule 747)
    object_statements_clause  ->  ':' . '{' object_statement_seq.opt looping_object_statement '#' bang error_ecarb   (rule 748)
    meta_class_specifier  ->  meta_class_key meta_nested_id ':' . base_specifier_list compound_declaration   (rule 791)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    AUTO	shift, and go to state 848
    TEMPLATE	shift, and go to state 10
    VIRTUAL	shift, and go to state 849
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 1000
    '!' 	shift, and go to state 850

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 851
    built_in_type_id	go to state 852
    built_in_type_specifier	go to state 52
    base_specifier_list	go to state 1304
    base_specifier	go to state 854
    access_specifier	go to state 855
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1126

    meta_class_specifier  ->  meta_class_key meta_nested_id compound_declaration .   (rule 790)

    $default	reduce using rule 790 (meta_class_specifier)



state 1127

    meta_expression_statement  ->  meta_class_key meta_nested_id object_statements_clause . semi   (rule 880)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1305
    bang	go to state 701



state 1128

    meta_expression_statement  ->  meta_primary_head object_statements_clause semi .   (rule 879)

    $default	reduce using rule 879 (meta_expression_statement)



state 1129

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    destructor_id  ->  TEMPLATE . destructor_id   (rule 38)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    destructor_id	go to state 803
    special_function_id	go to state 428
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 1130

    meta_postfix_expression  ->  meta_postfix_expression ARROW declarator_id .   (rule 833)

    $default	reduce using rule 833 (meta_postfix_expression)



state 1131

    meta_fn_postfix_expression  ->  meta_postfix_expression '[' ']' .   (rule 828)
    meta_expression_statement  ->  meta_postfix_expression '[' ']' . object_statements_clause semi   (rule 882)

    ':' 	shift, and go to state 689

    $default	reduce using rule 828 (meta_fn_postfix_expression)

    object_statements_clause	go to state 1306



state 1132

    meta_postfix_expression  ->  meta_postfix_expression '[' expression . ']'   (rule 831)
    meta_expression_statement  ->  meta_postfix_expression '[' expression . ']' object_statements_clause semi   (rule 883)

    ']' 	shift, and go to state 1307



state 1133

    meta_fn_postfix_expression  ->  meta_postfix_expression '(' tree_argument_list.opt . ')'   (rule 827)
    meta_expression_statement  ->  meta_postfix_expression '(' tree_argument_list.opt . ')' object_statements_clause semi   (rule 881)

    ')' 	shift, and go to state 1308



state 1134

    meta_postfix_expression  ->  meta_postfix_expression '.' declarator_id .   (rule 832)

    $default	reduce using rule 832 (meta_postfix_expression)



state 1135

    meta_multiplicative_expression  ->  meta_multiplicative_expression '/' meta_pm_expression .   (rule 850)

    $default	reduce using rule 850 (meta_multiplicative_expression)



state 1136

    meta_multiplicative_expression  ->  meta_multiplicative_expression '%' meta_pm_expression .   (rule 851)

    $default	reduce using rule 851 (meta_multiplicative_expression)



state 1137

    meta_multiplicative_expression  ->  meta_multiplicative_expression star_ptr_operator meta_pm_expression .   (rule 849)

    $default	reduce using rule 849 (meta_multiplicative_expression)



state 1138

    meta_multiplicative_expression  ->  meta_multiplicative_expression . star_ptr_operator meta_pm_expression   (rule 849)
    meta_multiplicative_expression  ->  meta_multiplicative_expression . '/' meta_pm_expression   (rule 850)
    meta_multiplicative_expression  ->  meta_multiplicative_expression . '%' meta_pm_expression   (rule 851)
    meta_additive_expression  ->  meta_additive_expression '+' meta_multiplicative_expression .   (rule 853)

    '*' 	shift, and go to state 133
    '/' 	shift, and go to state 897
    '%' 	shift, and go to state 898

    $default	reduce using rule 853 (meta_additive_expression)

    star_ptr_operator	go to state 899



state 1139

    meta_multiplicative_expression  ->  meta_multiplicative_expression . star_ptr_operator meta_pm_expression   (rule 849)
    meta_multiplicative_expression  ->  meta_multiplicative_expression . '/' meta_pm_expression   (rule 850)
    meta_multiplicative_expression  ->  meta_multiplicative_expression . '%' meta_pm_expression   (rule 851)
    meta_additive_expression  ->  meta_additive_expression '-' meta_multiplicative_expression .   (rule 854)

    '*' 	shift, and go to state 133
    '/' 	shift, and go to state 897
    '%' 	shift, and go to state 898

    $default	reduce using rule 854 (meta_additive_expression)

    star_ptr_operator	go to state 899



state 1140

    meta_additive_expression  ->  meta_additive_expression . '+' meta_multiplicative_expression   (rule 853)
    meta_additive_expression  ->  meta_additive_expression . '-' meta_multiplicative_expression   (rule 854)
    meta_shift_expression  ->  meta_shift_expression SHL meta_additive_expression .   (rule 856)

    '+' 	shift, and go to state 900
    '-' 	shift, and go to state 901

    $default	reduce using rule 856 (meta_shift_expression)



state 1141

    meta_additive_expression  ->  meta_additive_expression . '+' meta_multiplicative_expression   (rule 853)
    meta_additive_expression  ->  meta_additive_expression . '-' meta_multiplicative_expression   (rule 854)
    meta_shift_expression  ->  meta_shift_expression SHR meta_additive_expression .   (rule 857)

    '+' 	shift, and go to state 900
    '-' 	shift, and go to state 901

    $default	reduce using rule 857 (meta_shift_expression)



state 1142

    meta_shift_expression  ->  meta_shift_expression . SHL meta_additive_expression   (rule 856)
    meta_shift_expression  ->  meta_shift_expression . SHR meta_additive_expression   (rule 857)
    meta_relational_expression  ->  meta_relational_expression LE meta_shift_expression .   (rule 861)

    SHL 	shift, and go to state 902
    SHR 	shift, and go to state 903

    $default	reduce using rule 861 (meta_relational_expression)



state 1143

    meta_shift_expression  ->  meta_shift_expression . SHL meta_additive_expression   (rule 856)
    meta_shift_expression  ->  meta_shift_expression . SHR meta_additive_expression   (rule 857)
    meta_relational_expression  ->  meta_relational_expression GE meta_shift_expression .   (rule 862)

    SHL 	shift, and go to state 902
    SHR 	shift, and go to state 903

    $default	reduce using rule 862 (meta_relational_expression)



state 1144

    meta_shift_expression  ->  meta_shift_expression . SHL meta_additive_expression   (rule 856)
    meta_shift_expression  ->  meta_shift_expression . SHR meta_additive_expression   (rule 857)
    meta_relational_expression  ->  meta_relational_expression '<' meta_shift_expression .   (rule 859)

    SHL 	shift, and go to state 902
    SHR 	shift, and go to state 903

    $default	reduce using rule 859 (meta_relational_expression)



state 1145

    meta_shift_expression  ->  meta_shift_expression . SHL meta_additive_expression   (rule 856)
    meta_shift_expression  ->  meta_shift_expression . SHR meta_additive_expression   (rule 857)
    meta_relational_expression  ->  meta_relational_expression '>' meta_shift_expression .   (rule 860)

    SHL 	shift, and go to state 902
    SHR 	shift, and go to state 903

    $default	reduce using rule 860 (meta_relational_expression)



state 1146

    meta_relational_expression  ->  meta_relational_expression . '<' meta_shift_expression   (rule 859)
    meta_relational_expression  ->  meta_relational_expression . '>' meta_shift_expression   (rule 860)
    meta_relational_expression  ->  meta_relational_expression . LE meta_shift_expression   (rule 861)
    meta_relational_expression  ->  meta_relational_expression . GE meta_shift_expression   (rule 862)
    meta_equality_expression  ->  meta_equality_expression EQ meta_relational_expression .   (rule 864)

    LE  	shift, and go to state 904
    GE  	shift, and go to state 905
    '<' 	shift, and go to state 906
    '>' 	shift, and go to state 907

    $default	reduce using rule 864 (meta_equality_expression)



state 1147

    meta_relational_expression  ->  meta_relational_expression . '<' meta_shift_expression   (rule 859)
    meta_relational_expression  ->  meta_relational_expression . '>' meta_shift_expression   (rule 860)
    meta_relational_expression  ->  meta_relational_expression . LE meta_shift_expression   (rule 861)
    meta_relational_expression  ->  meta_relational_expression . GE meta_shift_expression   (rule 862)
    meta_equality_expression  ->  meta_equality_expression NE meta_relational_expression .   (rule 865)

    LE  	shift, and go to state 904
    GE  	shift, and go to state 905
    '<' 	shift, and go to state 906
    '>' 	shift, and go to state 907

    $default	reduce using rule 865 (meta_equality_expression)



state 1148

    meta_equality_expression  ->  meta_equality_expression . EQ meta_relational_expression   (rule 864)
    meta_equality_expression  ->  meta_equality_expression . NE meta_relational_expression   (rule 865)
    meta_and_expression  ->  meta_and_expression '&' meta_equality_expression .   (rule 867)

    EQ  	shift, and go to state 908
    NE  	shift, and go to state 909

    $default	reduce using rule 867 (meta_and_expression)



state 1149

    meta_and_expression  ->  meta_and_expression . '&' meta_equality_expression   (rule 867)
    meta_exclusive_or_expression  ->  meta_exclusive_or_expression '^' meta_and_expression .   (rule 869)

    '&' 	shift, and go to state 910

    $default	reduce using rule 869 (meta_exclusive_or_expression)



state 1150

    meta_exclusive_or_expression  ->  meta_exclusive_or_expression . '^' meta_and_expression   (rule 869)
    meta_inclusive_or_expression  ->  meta_inclusive_or_expression '|' meta_exclusive_or_expression .   (rule 871)

    '^' 	shift, and go to state 911

    $default	reduce using rule 871 (meta_inclusive_or_expression)



state 1151

    meta_inclusive_or_expression  ->  meta_inclusive_or_expression . '|' meta_exclusive_or_expression   (rule 871)
    meta_logical_and_expression  ->  meta_logical_and_expression LOG_AND meta_inclusive_or_expression .   (rule 873)

    '|' 	shift, and go to state 912

    $default	reduce using rule 873 (meta_logical_and_expression)



state 1152

    meta_logical_and_expression  ->  meta_logical_and_expression . LOG_AND meta_inclusive_or_expression   (rule 873)
    meta_logical_or_expression  ->  meta_logical_or_expression LOG_OR meta_logical_and_expression .   (rule 875)

    LOG_AND	shift, and go to state 913

    $default	reduce using rule 875 (meta_logical_or_expression)



state 1153

    meta_logical_or_expression  ->  meta_logical_or_expression . LOG_OR meta_logical_and_expression   (rule 875)
    meta_conditional_expression  ->  meta_logical_or_expression .   (rule 876)
    meta_conditional_expression  ->  meta_logical_or_expression . '?' meta_conditional_expression ':' meta_conditional_expression   (rule 877)

    LOG_OR	shift, and go to state 914
    '?' 	shift, and go to state 915

    $default	reduce using rule 876 (meta_conditional_expression)



state 1154

    meta_conditional_expression  ->  meta_logical_or_expression '?' meta_conditional_expression . ':' meta_conditional_expression   (rule 877)

    ':' 	shift, and go to state 1309



state 1155

    meta_expression_statement  ->  meta_logical_or_expression assignment_operator line . tree_statement   (rule 884)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 1219
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 1220
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_declarations	go to state 1221
    init_declaration	go to state 1222
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 1223
    function_definition	go to state 1224
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 1225
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    tree_statement	go to state 1310
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 1229
    unterminated_tree_argument	go to state 1311
    unterminated_tree_argument.most	go to state 1231
    reserved_id	go to state 335
    token.punct	go to state 336
    simple_tree_declaration	go to state 1232
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345



state 1156

    elaborated_enum_specifier  ->  ENUM . scoped_id   (rule 355)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 1312
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1157

    file_entity  ->  NAMESPACE . scoped_id   (rule 949)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 1313
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1158

    export_implementation  ->  EXPORT '/' IMPLEMENTATION '=' . implementation_file   (rule 928)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    implementation_file	go to state 1314
    file_name	go to state 1163
    file_entity	go to state 1164
    file_id	go to state 1165



state 1159

    file_entity  ->  declarator_id .   (rule 947)

    $default	reduce using rule 947 (file_entity)



state 1160

    file_entity  ->  elaborated_type_specifier .   (rule 948)

    $default	reduce using rule 948 (file_entity)



state 1161

    elaborated_class_specifier  ->  class_key . scoped_id   (rule 468)
    elaborated_class_specifier  ->  class_key . scoped_id colon_mark error   (rule 469)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 1315
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1162

    export_implementation  ->  EXPORT '/' IMPLEMENTATION implementation_file .   (rule 927)

    $default	reduce using rule 927 (export_implementation)



state 1163

    file_name  ->  file_name . '/' INTERFACE   (rule 938)
    file_name  ->  file_name . '/' IMPLEMENTATION   (rule 939)
    file_name  ->  file_name . '/' TEMPLATE   (rule 940)
    file_name  ->  file_name . '/' utility   (rule 941)
    file_name  ->  file_name . '/' GUARD '=' string_expr   (rule 942)
    file_name  ->  file_name . '/' NOGUARD   (rule 943)
    file_name  ->  file_name . '/' PATH '=' string_expr   (rule 944)
    file_name  ->  file_name . '/' PREFIX '=' string_expr   (rule 945)
    file_name  ->  file_name . '/' SUFFIX '=' string_expr   (rule 946)
    file_id  ->  file_name .   (rule 950)

    '/' 	shift, and go to state 1298

    $default	reduce using rule 950 (file_id)



state 1164

    implementation_file  ->  file_entity .   (rule 934)
    file_id  ->  file_entity . '/' IMPLEMENTATION   (rule 951)
    file_id  ->  file_entity . '/' INTERFACE   (rule 952)

    '/' 	shift, and go to state 1316

    $default	reduce using rule 934 (implementation_file)



state 1165

    implementation_file  ->  file_id .   (rule 933)

    $default	reduce using rule 933 (implementation_file)



state 1166

    export_interface  ->  EXPORT '/' INTERFACE '=' . interface_file   (rule 930)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    interface_file	go to state 1317
    file_name	go to state 1163
    file_entity	go to state 1168
    file_id	go to state 1169



state 1167

    export_interface  ->  EXPORT '/' INTERFACE interface_file .   (rule 929)

    $default	reduce using rule 929 (export_interface)



state 1168

    interface_file  ->  file_entity .   (rule 936)
    file_id  ->  file_entity . '/' IMPLEMENTATION   (rule 951)
    file_id  ->  file_entity . '/' INTERFACE   (rule 952)

    '/' 	shift, and go to state 1316

    $default	reduce using rule 936 (interface_file)



state 1169

    interface_file  ->  file_id .   (rule 935)

    $default	reduce using rule 935 (interface_file)



state 1170

    export_all  ->  EXPORT '/' ALL '=' . interface_file   (rule 932)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    interface_file	go to state 1318
    file_name	go to state 1163
    file_entity	go to state 1168
    file_id	go to state 1169



state 1171

    export_all  ->  EXPORT '/' ALL interface_file .   (rule 931)

    $default	reduce using rule 931 (export_all)



state 1172

    file_placement_declaration  ->  EXPORT '/' NOIMPLEMENTATION semi .   (rule 925)

    $default	reduce using rule 925 (file_placement_declaration)



state 1173

    file_placement_declaration  ->  EXPORT '/' UTILITY semi .   (rule 926)

    $default	reduce using rule 926 (file_placement_declaration)



state 1174

    explicit_specialization  ->  TEMPLATE '<' '>' declaration .   (rule 573)

    $default	reduce using rule 573 (explicit_specialization)



state 1175

    templated_type_parameter  ->  template_parameter_clause CLASS .   (rule 566)
    templated_type_parameter  ->  template_parameter_clause CLASS . identifier   (rule 567)

    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    $default	reduce using rule 566 (templated_type_parameter)

    identifier_word	go to state 47
    identifier	go to state 1319
    segment	go to state 58
    utility	go to state 66



state 1176

    template_parameter_clause  ->  TEMPLATE '<' template_parameter_list '>' .   (rule 555)

    $default	reduce using rule 555 (template_parameter_clause)



state 1177

    template_parameter_list  ->  template_parameter_list ',' . template_parameter   (rule 557)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 928
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 969 (bang)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 401
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 407
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 408
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 409
    templated_parameter_declaration	go to state 930
    templated_abstract_declaration	go to state 411
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_parameter_clause	go to state 931
    template_parameter	go to state 1320
    simple_type_parameter	go to state 934
    templated_type_parameter	go to state 935
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66
    bang	go to state 936



state 1178

    template_parameter  ->  simple_type_parameter '=' . type_id   (rule 559)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    type_id	go to state 1321
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1179

    template_parameter  ->  templated_type_parameter '=' . identifier   (rule 561)

    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 1322
    segment	go to state 58
    utility	go to state 66



state 1180

    template_parameter  ->  bang error .   (rule 563)

    $default	reduce using rule 563 (template_parameter)



state 1181

    using_directive  ->  USING NAMESPACE scoped_id ';' .   (rule 377)

    $default	reduce using rule 377 (using_directive)



state 1182

    using_implementation  ->  USING '/' IMPLEMENTATION '=' . file_use   (rule 917)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    file_use	go to state 1323
    file_name	go to state 1163
    file_entity	go to state 1184
    file_id	go to state 1185



state 1183

    using_implementation  ->  USING '/' IMPLEMENTATION file_use .   (rule 916)

    $default	reduce using rule 916 (using_implementation)



state 1184

    file_use  ->  file_entity .   (rule 921)
    file_id  ->  file_entity . '/' IMPLEMENTATION   (rule 951)
    file_id  ->  file_entity . '/' INTERFACE   (rule 952)

    '/' 	shift, and go to state 1316

    $default	reduce using rule 921 (file_use)



state 1185

    file_use  ->  file_id .   (rule 920)

    $default	reduce using rule 920 (file_use)



state 1186

    string_expr  ->  TreeLiteral .   (rule 67)

    $default	reduce using rule 67 (string_expr)



state 1187

    include_declaration  ->  USING '/' INCLUDE '/' . utility string_expr   (rule 908)

    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41

    utility	go to state 1324



state 1188

    string_expr  ->  string .   (rule 66)

    $default	reduce using rule 66 (string_expr)



state 1189

    include_declaration  ->  USING '/' INCLUDE string_expr .   (rule 907)

    $default	reduce using rule 907 (include_declaration)



state 1190

    using_interface  ->  USING '/' INTERFACE '=' . file_use   (rule 919)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    file_use	go to state 1325
    file_name	go to state 1163
    file_entity	go to state 1184
    file_id	go to state 1185



state 1191

    using_interface  ->  USING '/' INTERFACE file_use .   (rule 918)

    $default	reduce using rule 918 (using_interface)



state 1192

    include_declaration  ->  USING '/' utility string_expr .   (rule 909)

    $default	reduce using rule 909 (include_declaration)



state 1193

    asm_definition  ->  ASM '(' string ')' . ';'   (rule 378)

    ';' 	shift, and go to state 1326



state 1194

    labeled_statement  ->  CASE constant_expression ':' looping_statement .   (rule 231)

    $default	reduce using rule 231 (labeled_statement)



state 1195

    handler  ->  CATCH '(' exception_declaration ')' . compound_statement   (rule 578)

    '{' 	shift, and go to state 668

    compound_statement	go to state 1327



state 1196

    iteration_statement  ->  DO looping_statement WHILE '(' . expression ')' ';'   (rule 245)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1328
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1197

    namespace_alias_definition  ->  NAMESPACE scoped_id . '=' scoped_id ';'   (rule 375)

    '=' 	shift, and go to state 861



state 1198

    meta_expression_statement  ->  CONST . meta_expression_statement   (rule 885)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 1198
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 1199
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 1200

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 865
    utility	go to state 66



state 1199

    meta_expression_statement  ->  STATIC . meta_expression_statement   (rule 886)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 1198
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 1199
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 1200

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 867
    utility	go to state 66



state 1200

    meta_unary_expression  ->  '!' . meta_cast_expression   (rule 843)
    meta_expression_statement  ->  '!' . STATIC meta_expression_statement   (rule 887)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 1329
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 885
    utility	go to state 66



state 1201

    statement  ->  AUTO control_statement .   (rule 224)

    $default	reduce using rule 224 (statement)



state 1202

    statement  ->  AUTO meta_expression_statement .   (rule 225)

    $default	reduce using rule 225 (statement)



state 1203

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    special_function_id  ->  TEMPLATE . special_function_id   (rule 41)
    specialised_block_declaration  ->  TEMPLATE . specialised_block_declaration   (rule 289)
    suffix_built_in_decl_specifier  ->  TEMPLATE . suffix_built_in_decl_specifier   (rule 299)
    decl_specifier_prefix  ->  TEMPLATE . decl_specifier_prefix   (rule 326)
    elaborate_type_specifier  ->  TEMPLATE . elaborate_type_specifier   (rule 348)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 949
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 1203
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 715
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    OPERATOR	shift, and go to state 114
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 549

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    special_function_id	go to state 428
    specialised_block_declaration	go to state 717
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 429
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 625
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 430
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_alias_definition	go to state 370
    using_directive	go to state 372
    asm_definition	go to state 373
    cv_qualifier	go to state 307
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 1204

    try_block  ->  TRY compound_statement . handler_seq   (rule 575)

    CATCH	shift, and go to state 217

    handler_seq	go to state 1330
    handler	go to state 324



state 1205

    looped_statement  ->  advance_search '+' . looped_statement   (rule 218)

    error	shift, and go to state 349
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    NAMESPACE	shift, and go to state 949
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 950
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 951
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 715
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 355
    BREAK	shift, and go to state 730
    CASE	shift, and go to state 952
    CONST_CAST	shift, and go to state 109
    CONTINUE	shift, and go to state 732
    DEFAULT	shift, and go to state 953
    DELETE	shift, and go to state 110
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 954
    GOTO	shift, and go to state 736
    IF  	shift, and go to state 955
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    RETURN	shift, and go to state 738
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    SWITCH	shift, and go to state 956
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 957
    TYPEID	shift, and go to state 120
    WHILE	shift, and go to state 958
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 668
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 357
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 959
    looped_statement	go to state 1331
    statement	go to state 961
    control_statement	go to state 962
    labeled_statement	go to state 963
    compound_statement	go to state 964
    selection_statement	go to state 965
    iteration_statement	go to state 966
    jump_statement	go to state 967
    declaration_statement	go to state 968
    block_declaration	go to state 969
    specialised_block_declaration	go to state 366
    simple_declaration	go to state 367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 970
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_alias_definition	go to state 370
    using_directive	go to state 372
    asm_definition	go to state 373
    init_declarations	go to state 375
    init_declaration	go to state 376
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    constructor_head	go to state 971
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    try_block	go to state 972
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66
    advance_search	go to state 973



state 1206

    looped_statement  ->  advance_search '-' .   (rule 219)

    $default	reduce using rule 219 (looped_statement)



state 1207

    iteration_statement  ->  FOR '(' for_init_statement condition.opt . ';' expression.opt ')' looping_statement   (rule 246)

    ';' 	shift, and go to state 1332



state 1208

    condition.opt  ->  condition .   (rule 242)

    $default	reduce using rule 242 (condition.opt)



state 1209

    selection_statement  ->  IF '(' condition ')' . looping_statement   (rule 238)
    selection_statement  ->  IF '(' condition ')' . looping_statement ELSE looping_statement   (rule 239)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 1333
    start_search	go to state 635



state 1210

    selection_statement  ->  SWITCH '(' condition ')' . looping_statement   (rule 240)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 1334
    start_search	go to state 635



state 1211

    mem_initializer_list_head  ->  mem_initializer_list ',' .   (rule 506)

    $default	reduce using rule 506 (mem_initializer_list_head)



state 1212

    ctor_initializer  ->  ':' mem_initializer_list bang . error   (rule 503)
    mem_initializer_list_head  ->  mem_initializer_list bang . error ','   (rule 507)
    mem_initializer_list_head  ->  mem_initializer_list bang . error '#'   (rule 508)

    error	shift, and go to state 1335



state 1213

    mem_initializer_list  ->  mem_initializer_list_head mem_initializer .   (rule 505)

    $default	reduce using rule 505 (mem_initializer_list)



state 1214

    mem_initializer  ->  mem_initializer_id '(' . expression_list.opt ')'   (rule 509)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 103 (expression_list.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list.opt	go to state 1336
    expression_list	go to state 1075
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1076
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1215

    iteration_statement  ->  WHILE '(' condition ')' . looping_statement   (rule 244)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 1337
    start_search	go to state 635



state 1216

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_unterminated_tree_argument '}' .   (rule 634)

    $default	reduce using rule 634 (compound_tree_statement)



state 1217

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_unterminated_tree_argument '#' . bang error_ecarb   (rule 635)

    $default	reduce using rule 969 (bang)

    bang	go to state 1338



state 1218

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_tree_statement '#' . bang error_ecarb   (rule 636)
    tree_statement_seq.opt  ->  tree_statement_seq.opt looping_tree_statement '#' . bang error ';'   (rule 639)

    $default	reduce using rule 969 (bang)

    bang	go to state 1339



state 1219

    tree_statement  ->  ';' .   (rule 629)

    $default	reduce using rule 629 (tree_statement)



state 1220

    func_definition  ->  decl_specifier_prefix . func_definition   (rule 445)
    ctor_definition  ->  decl_specifier_prefix . ctor_definition   (rule 448)
    template_declaration  ->  decl_specifier_prefix . template_declaration   (rule 554)
    explicit_specialization  ->  decl_specifier_prefix . explicit_specialization   (rule 574)
    simple_tree_declaration  ->  decl_specifier_prefix .   (rule 741)
    simple_tree_declaration  ->  decl_specifier_prefix . simple_tree_declaration   (rule 746)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 616
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 674
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 741 (simple_tree_declaration)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 1220
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_declarations	go to state 1221
    init_declaration	go to state 1222
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 1223
    func_definition	go to state 676
    ctor_definition	go to state 677
    constructor_head	go to state 1225
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 678
    template_parameter_clause	go to state 320
    template_id	go to state 54
    explicit_specialization	go to state 679
    throw_expression	go to state 325
    simple_tree_declaration	go to state 1340
    segment	go to state 58
    utility	go to state 66



state 1221

    init_declarations  ->  init_declarations . ',' init_declaration   (rule 381)
    simple_tree_declaration  ->  init_declarations .   (rule 744)

    ',' 	shift, and go to state 722

    $default	reduce using rule 744 (simple_tree_declaration)



state 1222

    simple_tree_declaration  ->  init_declaration .   (rule 742)

    $default	reduce using rule 742 (simple_tree_declaration)



state 1223

    simple_tree_declaration  ->  special_parameter_declaration .   (rule 745)

    $default	reduce using rule 745 (simple_tree_declaration)



state 1224

    tree_statement  ->  function_definition .   (rule 632)

    $default	reduce using rule 632 (tree_statement)



state 1225

    init_declarations  ->  constructor_head . ',' bit_field_init_declaration   (rule 383)
    init_declarations  ->  constructor_head . ',' init_object_declaration   (rule 384)
    ctor_definition  ->  constructor_head . function_try_block   (rule 446)
    ctor_definition  ->  constructor_head . function_body   (rule 447)
    constructor_head  ->  constructor_head . ',' assignment_expression   (rule 450)
    simple_tree_declaration  ->  constructor_head . ',' assignment_expression   (rule 743)

    TRY 	shift, and go to state 667
    '{' 	shift, and go to state 668
    ',' 	shift, and go to state 1341

    compound_statement	go to state 670
    function_try_block	go to state 686
    function_body	go to state 687



state 1226

    looping_unterminated_tree_argument  ->  start_search looped_unterminated_tree_argument .   (rule 622)

    $default	reduce using rule 622 (looping_unterminated_tree_argument)



state 1227

    looping_tree_statement  ->  start_search looped_tree_statement .   (rule 625)

    $default	reduce using rule 625 (looping_tree_statement)



state 1228

    looped_tree_statement  ->  tree_statement .   (rule 626)

    $default	reduce using rule 626 (looped_tree_statement)



state 1229

    tree_statement  ->  terminated_tree_argument .   (rule 630)

    $default	reduce using rule 630 (tree_statement)



state 1230

    looped_unterminated_tree_argument  ->  unterminated_tree_argument .   (rule 623)
    tree_statement  ->  unterminated_tree_argument . ';'   (rule 631)

    ';' 	shift, and go to state 1342

    $default	reduce using rule 623 (looped_unterminated_tree_argument)



state 1231

    unterminated_tree_argument  ->  unterminated_tree_argument.most .   (rule 659)

    $default	reduce using rule 659 (unterminated_tree_argument)



state 1232

    unterminated_tree_argument  ->  simple_tree_declaration .   (rule 660)

    $default	reduce using rule 660 (unterminated_tree_argument)



state 1233

    looped_unterminated_tree_argument  ->  advance_search . '+' looped_unterminated_tree_argument   (rule 624)
    looped_tree_statement  ->  advance_search . '+' looped_tree_statement   (rule 627)
    looped_tree_statement  ->  advance_search . '-'   (rule 628)

    '+' 	shift, and go to state 1343
    '-' 	shift, and go to state 1344



state 1234

    bit_field_width  ->  logical_or_expression '?' bit_field_width . ':' bit_field_width   (rule 483)

    ':' 	shift, and go to state 1345



state 1235

    braced_initializer  ->  '{' '}' .   (rule 458)

    $default	reduce using rule 458 (braced_initializer)



state 1236

    braced_initializer  ->  '{' initializer_list . '}'   (rule 456)
    braced_initializer  ->  '{' initializer_list . ',' '}'   (rule 457)
    braced_initializer  ->  '{' initializer_list . ',' looping_initializer_clause '#' bang error_ecarb   (rule 460)
    initializer_list  ->  initializer_list . ',' looping_initializer_clause   (rule 462)

    '}' 	shift, and go to state 1346
    ',' 	shift, and go to state 1347



state 1237

    braced_initializer  ->  '{' looping_initializer_clause . '#' bang error_ecarb   (rule 459)
    initializer_list  ->  looping_initializer_clause .   (rule 461)

    '#' 	shift, and go to state 1348

    $default	reduce using rule 461 (initializer_list)



state 1238

    looping_initializer_clause  ->  start_search . looped_initializer_clause   (rule 463)

    error	shift, and go to state 349
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 996
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1007
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    initializer_clause	go to state 1349
    braced_initializer	go to state 1009
    looped_initializer_clause	go to state 1350
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66
    advance_search	go to state 1351



state 1239

    compound_statement  ->  '{' statement_seq.opt '}' .   (rule 233)

    $default	reduce using rule 233 (compound_statement)



state 1240

    compound_statement  ->  '{' statement_seq.opt looping_statement . '#' bang error_ecarb   (rule 234)
    statement_seq.opt  ->  statement_seq.opt looping_statement .   (rule 236)
    statement_seq.opt  ->  statement_seq.opt looping_statement . '#' bang error ';'   (rule 237)

    '#' 	shift, and go to state 1352

    $default	reduce using rule 236 (statement_seq.opt)



state 1241

    object_statements_clause  ->  ':' '{' object_statement_seq.opt . '}'   (rule 747)
    object_statements_clause  ->  ':' '{' object_statement_seq.opt . looping_object_statement '#' bang error_ecarb   (rule 748)
    object_statement_seq.opt  ->  object_statement_seq.opt . looping_object_statement   (rule 750)
    object_statement_seq.opt  ->  object_statement_seq.opt . looping_object_statement '#' bang error ';'   (rule 751)

    '}' 	shift, and go to state 1353

    $default	reduce using rule 973 (start_search)

    looping_object_statement	go to state 1354
    start_search	go to state 1355



state 1242

    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)
    tree_argument.misc  ->  decl_specifier_prefix assignment_expression .   (rule 620)

    ':' 	shift, and go to state 669

    $default	reduce using rule 620 (tree_argument.misc)

    object_statements_clause	go to state 673



state 1243

    constructor_head  ->  constructor_head ',' . assignment_expression   (rule 450)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1356
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1244

    error_semi  ->  error '#' .   (rule 967)

    $default	reduce using rule 967 (error_semi)



state 1245

    error_semi  ->  error ';' .   (rule 966)

    $default	reduce using rule 966 (error_semi)



state 1246

    translation_unit  ->  declaration_seq.opt util looping_declaration '#' bang error '#' .   (rule 71)

    $default	reduce using rule 71 (translation_unit)



state 1247

    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' bang error ';' .   (rule 257)

    $default	reduce using rule 257 (declaration_seq.opt)



state 1248

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier . '(' syntax_macro_parameter_list ')' compound_tree_statement   (rule 888)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier . '(' syntax_macro_parameter_list ')' '[' ']' compound_tree_statement   (rule 889)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier . '(' ')' compound_tree_statement   (rule 890)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier . '(' ')' '[' ']' compound_tree_statement   (rule 891)

    '(' 	shift, and go to state 1357



state 1249

    compound_declaration  ->  '{' nest declaration_seq.opt '}' .   (rule 253)

    $default	reduce using rule 253 (compound_declaration)



state 1250

    compound_declaration  ->  '{' nest declaration_seq.opt util . looping_declaration '#' bang error_ecarb   (rule 254)
    declaration_seq.opt  ->  declaration_seq.opt util . looping_declaration   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt util . looping_declaration '#' bang error ';'   (rule 257)

    $default	reduce using rule 974 (start_search1)

    looping_declaration	go to state 1358
    start_search1	go to state 91



state 1251

    simple_declaration  ->  constructor_head ',' assignment_expression ';' .   (rule 292)

    $default	reduce using rule 292 (simple_declaration)



state 1252

    meta_control_statement1  ->  CASE constant_expression ':' . lined_declaration   (rule 809)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1359
    line	go to state 1034



state 1253

    meta_control_statement1  ->  DEFAULT ':' lined_declaration .   (rule 810)

    $default	reduce using rule 810 (meta_control_statement1)



state 1254

    meta_control_statement1  ->  DO lined_declaration WHILE . '(' expression ')' semi   (rule 811)

    '(' 	shift, and go to state 1360



state 1255

    lined_declaration  ->  line declaration .   (rule 262)

    $default	reduce using rule 262 (lined_declaration)



state 1256

    meta_control_statement1  ->  FOR '(' for_init_statement . condition.opt ';' expression.opt ')' lined_declaration   (rule 816)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 241 (condition.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    condition.opt	go to state 1361
    condition	go to state 1208
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 977
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1257

    jump_statement  ->  GOTO identifier ';' .   (rule 251)

    $default	reduce using rule 251 (jump_statement)



state 1258

    meta_control_statement1  ->  IF '(' condition . ')' lined_declaration   (rule 812)
    meta_control_statement1  ->  IF '(' condition . ')' lined_declaration ELSE lined_declaration   (rule 813)

    ')' 	shift, and go to state 1362



state 1259

    jump_statement  ->  RETURN expression.opt ';' .   (rule 250)

    $default	reduce using rule 250 (jump_statement)



state 1260

    meta_control_statement1  ->  SWITCH '(' expression . ')' lined_declaration   (rule 814)

    ')' 	shift, and go to state 1363



state 1261

    meta_control_statement1  ->  WHILE '(' condition . ')' lined_declaration   (rule 815)

    ')' 	shift, and go to state 1364



state 1262

    templated_conditional_expression  ->  templated_logical_or_expression '?' templated_expression ':' . templated_assignment_expression   (rule 208)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 1365
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 1263

    templated_expression  ->  templated_expression_list ',' . templated_assignment_expression   (rule 213)
    templated_expression_list  ->  templated_expression_list ',' . templated_assignment_expression   (rule 215)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 397
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 398
    templated_relational_expression	go to state 399
    templated_equality_expression	go to state 400
    templated_and_expression	go to state 743
    templated_exclusive_or_expression	go to state 402
    templated_inclusive_or_expression	go to state 403
    templated_logical_and_expression	go to state 404
    templated_logical_or_expression	go to state 405
    templated_conditional_expression	go to state 406
    templated_assignment_expression	go to state 1366
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    templated_throw_expression	go to state 415
    segment	go to state 58
    utility	go to state 66



state 1264

    enumerator_definition  ->  enumerator '=' . constant_expression   (rule 371)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 163
    conditional_expression	go to state 164
    constant_expression	go to state 1367
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1265

    enumerator_definition_ecarb  ->  '}' .   (rule 363)

    $default	reduce using rule 363 (enumerator_definition_ecarb)



state 1266

    enumerator_clause  ->  '{' enumerator_list ',' enumerator_definition_ecarb .   (rule 360)

    $default	reduce using rule 360 (enumerator_clause)



state 1267

    enumerator_list_head  ->  enumerator_list ',' enumerator_definition_filler .   (rule 368)

    $default	reduce using rule 368 (enumerator_list_head)



state 1268

    enumerator_definition_ecarb  ->  bang . error_ecarb   (rule 364)
    enumerator_definition_filler  ->  bang . error ','   (rule 366)

    error	shift, and go to state 1065

    error_ecarb	go to state 1368



state 1269

    error_ecarb  ->  error . '}'   (rule 964)
    error_ecarb  ->  error . '#'   (rule 965)

    '}' 	shift, and go to state 1270
    '#' 	shift, and go to state 1271



state 1270

    error_ecarb  ->  error '}' .   (rule 964)

    $default	reduce using rule 964 (error_ecarb)



state 1271

    error_ecarb  ->  error '#' .   (rule 965)

    $default	reduce using rule 965 (error_ecarb)



state 1272

    enumerator_definition_filler  ->  bang error ',' .   (rule 366)

    $default	reduce using rule 366 (enumerator_definition_filler)



state 1273

    abstract_declarator.opt  ->  ptr_operator abstract_declarator.opt .   (rule 408)

    $default	reduce using rule 408 (abstract_declarator.opt)



state 1274

    direct_abstract_declarator  ->  direct_abstract_declarator.opt '[' . ']'   (rule 413)
    direct_abstract_declarator  ->  direct_abstract_declarator.opt '[' . constant_expression ']'   (rule 414)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    ']' 	shift, and go to state 1369
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 163
    conditional_expression	go to state 164
    constant_expression	go to state 1370
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1275

    direct_abstract_declarator  ->  direct_abstract_declarator.opt parenthesis_clause .   (rule 412)

    $default	reduce using rule 412 (direct_abstract_declarator)



state 1276

    postfix_expression  ->  CONST_CAST '<' type_id '>' '(' . expression ')'   (rule 101)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1371
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1277

    postfix_expression  ->  DYNAMIC_CAST '<' type_id '>' '(' . expression ')'   (rule 98)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1372
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1278

    new_initializer.opt  ->  '(' expression_list.opt ')' .   (rule 134)

    $default	reduce using rule 134 (new_initializer.opt)



state 1279

    expression_list  ->  expression_list ',' . assignment_expression   (rule 106)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1373
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1280

    direct_new_declarator  ->  '[' expression ']' .   (rule 131)

    $default	reduce using rule 131 (direct_new_declarator)



state 1281

    direct_new_declarator  ->  direct_new_declarator '[' constant_expression . ']'   (rule 132)

    ']' 	shift, and go to state 1374



state 1282

    postfix_expression  ->  REINTERPRET_CAST '<' type_id '>' '(' . expression ')'   (rule 100)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1375
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1283

    postfix_expression  ->  STATIC_CAST '<' type_id '>' '(' . expression ')'   (rule 99)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1376
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1284

    global_scope  ->  TEMPLATE . global_scope   (rule 31)
    pseudo_destructor_id  ->  TEMPLATE . pseudo_destructor_id   (rule 54)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 1284
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 1093

    identifier_word	go to state 47
    identifier	go to state 69
    global_scope	go to state 70
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 1090
    built_in_type_specifier	go to state 52
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 1285

    nested_pseudo_destructor_id  ->  id_scope . nested_pseudo_destructor_id   (rule 56)

    TEMPLATE	shift, and go to state 1377
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 1093

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 1079
    id_scope	go to state 1285
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 814
    nested_pseudo_destructor_id	go to state 1097
    built_in_type_specifier	go to state 52
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1286

    pseudo_destructor_id  ->  built_in_type_id SCOPE '~' . built_in_type_id   (rule 52)

    BuiltInTypeSpecifier	shift, and go to state 13

    built_in_type_id	go to state 1378
    built_in_type_specifier	go to state 52



state 1287

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' error .   (rule 90)

    $default	reduce using rule 90 (postfix_expression)



state 1288

    type1_parameters  ->  type1_parameters . parameter_declaration_list ';'   (rule 84)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' type1_parameters . mark '{' error   (rule 88)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' type1_parameters . mark error   (rule 89)

    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    EXPLICIT	shift, and go to state 202
    EXTERN	shift, and go to state 394
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 395
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 396
    VIRTUAL	shift, and go to state 213
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 359

    $default	reduce using rule 971 (mark)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 499
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 500
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    parameter_declaration_list	go to state 1379
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 503
    parameter_declaration	go to state 504
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    access_specifier	go to state 412
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66
    mark	go to state 1380



state 1289

    type1_parameters  ->  parameter_declaration_list . ';'   (rule 83)
    parameter_declaration_list  ->  parameter_declaration_list . ',' parameter_declaration   (rule 422)

    ';' 	shift, and go to state 1381
    ',' 	shift, and go to state 802



state 1290

    conditional_expression  ->  logical_or_expression '?' expression ':' assignment_expression .   (rule 169)

    $default	reduce using rule 169 (conditional_expression)



state 1291

    exception_specification  ->  THROW '(' ')' .   (rule 584)

    $default	reduce using rule 584 (exception_specification)



state 1292

    type_id_list  ->  type_id .   (rule 586)

    $default	reduce using rule 586 (type_id_list)



state 1293

    exception_specification  ->  THROW '(' type_id_list . ')'   (rule 585)
    type_id_list  ->  type_id_list . ',' type_id   (rule 587)

    ')' 	shift, and go to state 1382
    ',' 	shift, and go to state 1383



state 1294

    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration .   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration . '#' bang error ';'   (rule 257)
    class_specifier  ->  class_specifier_head nest declaration_seq.opt util looping_declaration . '#' bang error_ecarb   (rule 478)

    '#' 	shift, and go to state 1384

    $default	reduce using rule 256 (declaration_seq.opt)



state 1295

    base_specifier  ->  '!' VIRTUAL base_specifier .   (rule 491)

    $default	reduce using rule 491 (base_specifier)



state 1296

    base_specifier_list  ->  base_specifier_list ',' base_specifier .   (rule 487)

    $default	reduce using rule 487 (base_specifier_list)



state 1297

    class_specifier_head  ->  class_key scoped_id colon_mark base_specifier_list '{' .   (rule 470)

    $default	reduce using rule 470 (class_specifier_head)



state 1298

    file_name  ->  file_name '/' . INTERFACE   (rule 938)
    file_name  ->  file_name '/' . IMPLEMENTATION   (rule 939)
    file_name  ->  file_name '/' . TEMPLATE   (rule 940)
    file_name  ->  file_name '/' . utility   (rule 941)
    file_name  ->  file_name '/' . GUARD '=' string_expr   (rule 942)
    file_name  ->  file_name '/' . NOGUARD   (rule 943)
    file_name  ->  file_name '/' . PATH '=' string_expr   (rule 944)
    file_name  ->  file_name '/' . PREFIX '=' string_expr   (rule 945)
    file_name  ->  file_name '/' . SUFFIX '=' string_expr   (rule 946)

    TEMPLATE	shift, and go to state 1385
    GUARD	shift, and go to state 1386
    IMPLEMENTATION	shift, and go to state 1387
    INTERFACE	shift, and go to state 1388
    NOGUARD	shift, and go to state 1389
    PATH	shift, and go to state 1390
    PREFIX	shift, and go to state 1391
    SUFFIX	shift, and go to state 1392
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41

    utility	go to state 1393



state 1299

    filespace_specifier  ->  NAMESPACE '/' FILE file_name compound_declaration .   (rule 955)

    $default	reduce using rule 955 (filespace_specifier)



state 1300

    namespace_alias_definition  ->  NAMESPACE scoped_id '=' scoped_id ';' .   (rule 375)

    $default	reduce using rule 375 (namespace_alias_definition)



state 1301

    meta_fn_postfix_expression  ->  meta_postfix_expression '[' ']' .   (rule 828)

    $default	reduce using rule 828 (meta_fn_postfix_expression)



state 1302

    meta_postfix_expression  ->  meta_postfix_expression '[' expression . ']'   (rule 831)

    ']' 	shift, and go to state 1394



state 1303

    meta_fn_postfix_expression  ->  meta_postfix_expression '(' tree_argument_list.opt . ')'   (rule 827)

    ')' 	shift, and go to state 1395



state 1304

    base_specifier_list  ->  base_specifier_list . ',' base_specifier   (rule 487)
    meta_class_specifier  ->  meta_class_key meta_nested_id ':' base_specifier_list . compound_declaration   (rule 791)

    '{' 	shift, and go to state 356
    ',' 	shift, and go to state 1110

    compound_declaration	go to state 1396



state 1305

    meta_expression_statement  ->  meta_class_key meta_nested_id object_statements_clause semi .   (rule 880)

    $default	reduce using rule 880 (meta_expression_statement)



state 1306

    meta_expression_statement  ->  meta_postfix_expression '[' ']' object_statements_clause . semi   (rule 882)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1397
    bang	go to state 701



state 1307

    meta_postfix_expression  ->  meta_postfix_expression '[' expression ']' .   (rule 831)
    meta_expression_statement  ->  meta_postfix_expression '[' expression ']' . object_statements_clause semi   (rule 883)

    ':' 	shift, and go to state 689

    $default	reduce using rule 831 (meta_postfix_expression)

    object_statements_clause	go to state 1398



state 1308

    meta_fn_postfix_expression  ->  meta_postfix_expression '(' tree_argument_list.opt ')' .   (rule 827)
    meta_expression_statement  ->  meta_postfix_expression '(' tree_argument_list.opt ')' . object_statements_clause semi   (rule 881)

    ':' 	shift, and go to state 689

    $default	reduce using rule 827 (meta_fn_postfix_expression)

    object_statements_clause	go to state 1399



state 1309

    meta_conditional_expression  ->  meta_logical_or_expression '?' meta_conditional_expression ':' . meta_conditional_expression   (rule 877)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 1153
    meta_conditional_expression	go to state 1400
    utility	go to state 66



state 1310

    meta_expression_statement  ->  meta_logical_or_expression assignment_operator line tree_statement .   (rule 884)

    $default	reduce using rule 884 (meta_expression_statement)



state 1311

    tree_statement  ->  unterminated_tree_argument . ';'   (rule 631)

    ';' 	shift, and go to state 1342



state 1312

    elaborated_enum_specifier  ->  ENUM scoped_id .   (rule 355)

    $default	reduce using rule 355 (elaborated_enum_specifier)



state 1313

    file_entity  ->  NAMESPACE scoped_id .   (rule 949)

    $default	reduce using rule 949 (file_entity)



state 1314

    export_implementation  ->  EXPORT '/' IMPLEMENTATION '=' implementation_file .   (rule 928)

    $default	reduce using rule 928 (export_implementation)



state 1315

    elaborated_class_specifier  ->  class_key scoped_id .   (rule 468)
    elaborated_class_specifier  ->  class_key scoped_id . colon_mark error   (rule 469)

    ':' 	shift, and go to state 857

    $default	reduce using rule 468 (elaborated_class_specifier)

    colon_mark	go to state 1401



state 1316

    file_id  ->  file_entity '/' . IMPLEMENTATION   (rule 951)
    file_id  ->  file_entity '/' . INTERFACE   (rule 952)

    IMPLEMENTATION	shift, and go to state 1402
    INTERFACE	shift, and go to state 1403



state 1317

    export_interface  ->  EXPORT '/' INTERFACE '=' interface_file .   (rule 930)

    $default	reduce using rule 930 (export_interface)



state 1318

    export_all  ->  EXPORT '/' ALL '=' interface_file .   (rule 932)

    $default	reduce using rule 932 (export_all)



state 1319

    templated_type_parameter  ->  template_parameter_clause CLASS identifier .   (rule 567)

    $default	reduce using rule 567 (templated_type_parameter)



state 1320

    template_parameter_list  ->  template_parameter_list ',' template_parameter .   (rule 557)

    $default	reduce using rule 557 (template_parameter_list)



state 1321

    template_parameter  ->  simple_type_parameter '=' type_id .   (rule 559)

    $default	reduce using rule 559 (template_parameter)



state 1322

    template_parameter  ->  templated_type_parameter '=' identifier .   (rule 561)

    $default	reduce using rule 561 (template_parameter)



state 1323

    using_implementation  ->  USING '/' IMPLEMENTATION '=' file_use .   (rule 917)

    $default	reduce using rule 917 (using_implementation)



state 1324

    include_declaration  ->  USING '/' INCLUDE '/' utility . string_expr   (rule 908)

    TreeLiteral	shift, and go to state 1186
    StringLiteral	shift, and go to state 127

    string	go to state 1188
    string_expr	go to state 1404



state 1325

    using_interface  ->  USING '/' INTERFACE '=' file_use .   (rule 919)

    $default	reduce using rule 919 (using_interface)



state 1326

    asm_definition  ->  ASM '(' string ')' ';' .   (rule 378)

    $default	reduce using rule 378 (asm_definition)



state 1327

    handler  ->  CATCH '(' exception_declaration ')' compound_statement .   (rule 578)

    $default	reduce using rule 578 (handler)



state 1328

    iteration_statement  ->  DO looping_statement WHILE '(' expression . ')' ';'   (rule 245)

    ')' 	shift, and go to state 1405



state 1329

    meta_expression_statement  ->  '!' STATIC . meta_expression_statement   (rule 887)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 1198
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 1199
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 1200

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 1124
    utility	go to state 66



state 1330

    try_block  ->  TRY compound_statement handler_seq .   (rule 575)

    $default	reduce using rule 575 (try_block)



state 1331

    looped_statement  ->  advance_search '+' looped_statement .   (rule 218)

    $default	reduce using rule 218 (looped_statement)



state 1332

    iteration_statement  ->  FOR '(' for_init_statement condition.opt ';' . expression.opt ')' looping_statement   (rule 246)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 185 (expression.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression.opt	go to state 1406
    expression	go to state 498
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1333

    selection_statement  ->  IF '(' condition ')' looping_statement .   (rule 238)
    selection_statement  ->  IF '(' condition ')' looping_statement . ELSE looping_statement   (rule 239)

    ELSE	shift, and go to state 1407

    $default	reduce using rule 238 (selection_statement)



state 1334

    selection_statement  ->  SWITCH '(' condition ')' looping_statement .   (rule 240)

    $default	reduce using rule 240 (selection_statement)



state 1335

    ctor_initializer  ->  ':' mem_initializer_list bang error .   (rule 503)
    mem_initializer_list_head  ->  mem_initializer_list bang error . ','   (rule 507)
    mem_initializer_list_head  ->  mem_initializer_list bang error . '#'   (rule 508)

    '#' 	shift, and go to state 1408
    ',' 	shift, and go to state 1409

    $default	reduce using rule 503 (ctor_initializer)



state 1336

    mem_initializer  ->  mem_initializer_id '(' expression_list.opt . ')'   (rule 509)

    ')' 	shift, and go to state 1410



state 1337

    iteration_statement  ->  WHILE '(' condition ')' looping_statement .   (rule 244)

    $default	reduce using rule 244 (iteration_statement)



state 1338

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_unterminated_tree_argument '#' bang . error_ecarb   (rule 635)

    error	shift, and go to state 1269

    error_ecarb	go to state 1411



state 1339

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_tree_statement '#' bang . error_ecarb   (rule 636)
    tree_statement_seq.opt  ->  tree_statement_seq.opt looping_tree_statement '#' bang . error ';'   (rule 639)

    error	shift, and go to state 1412

    error_ecarb	go to state 1413



state 1340

    simple_tree_declaration  ->  decl_specifier_prefix simple_tree_declaration .   (rule 746)

    $default	reduce using rule 746 (simple_tree_declaration)



state 1341

    init_declarations  ->  constructor_head ',' . bit_field_init_declaration   (rule 383)
    init_declarations  ->  constructor_head ',' . init_object_declaration   (rule 384)
    constructor_head  ->  constructor_head ',' . assignment_expression   (rule 450)
    simple_tree_declaration  ->  constructor_head ',' . assignment_expression   (rule 743)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    ':' 	shift, and go to state 358
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1414
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    init_object_declaration	go to state 1026
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 1027
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1342

    tree_statement  ->  unterminated_tree_argument ';' .   (rule 631)

    $default	reduce using rule 631 (tree_statement)



state 1343

    looped_unterminated_tree_argument  ->  advance_search '+' . looped_unterminated_tree_argument   (rule 624)
    looped_tree_statement  ->  advance_search '+' . looped_tree_statement   (rule 627)

    error	shift, and go to state 349
    PRIVATE	shift, and go to state 190
    PROTECTED	shift, and go to state 191
    PUBLIC	shift, and go to state 192
    CLASS	shift, and go to state 193
    ENUM	shift, and go to state 194
    NAMESPACE	shift, and go to state 195
    STRUCT	shift, and go to state 196
    TYPENAME	shift, and go to state 197
    UNION	shift, and go to state 198
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    AUTO	shift, and go to state 201
    EXPLICIT	shift, and go to state 202
    EXPORT	shift, and go to state 203
    EXTERN	shift, and go to state 204
    FRIEND	shift, and go to state 205
    INLINE	shift, and go to state 206
    MUTABLE	shift, and go to state 207
    REGISTER	shift, and go to state 208
    STATIC	shift, and go to state 209
    TEMPLATE	shift, and go to state 210
    TYPEDEF	shift, and go to state 211
    USING	shift, and go to state 212
    VIRTUAL	shift, and go to state 213
    ASM 	shift, and go to state 214
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 216
    CATCH	shift, and go to state 217
    CONST_CAST	shift, and go to state 218
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 220
    DELETE	shift, and go to state 221
    DO  	shift, and go to state 222
    DYNAMIC_CAST	shift, and go to state 223
    ELSE	shift, and go to state 224
    FALSE	shift, and go to state 112
    FOR 	shift, and go to state 225
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 227
    NEW 	shift, and go to state 228
    OPERATOR	shift, and go to state 229
    REINTERPRET_CAST	shift, and go to state 230
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 232
    STATIC_CAST	shift, and go to state 233
    SWITCH	shift, and go to state 234
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TRY 	shift, and go to state 236
    TYPEID	shift, and go to state 237
    WHILE	shift, and go to state 238
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    ELLIPSIS	shift, and go to state 239
    SCOPE	shift, and go to state 240
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 249
    DEC 	shift, and go to state 250
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 265
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 130
    ';' 	shift, and go to state 1219
    ':' 	shift, and go to state 267
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 270
    '-' 	shift, and go to state 271
    '*' 	shift, and go to state 133
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '&' 	shift, and go to state 134
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 275
    '!' 	shift, and go to state 276
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    identifier_word	go to state 285
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 286
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 287
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 360
    labeled_statement	go to state 291
    selection_statement	go to state 292
    iteration_statement	go to state 293
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    decl_specifier_affix	go to state 294
    decl_specifier_prefix	go to state 1220
    storage_class_specifier	go to state 296
    function_specifier	go to state 297
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    namespace_definition	go to state 298
    namespace_alias_definition	go to state 299
    namespace_declaration	go to state 300
    using_directive	go to state 301
    asm_definition	go to state 302
    linkage_specification	go to state 303
    init_declarations	go to state 1221
    init_declaration	go to state 1222
    init_object_declaration	go to state 377
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 305
    ptr_operator_seq	go to state 306
    cv_qualifier	go to state 307
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    abstract_pointer_declaration	go to state 308
    abstract_parameter_declaration	go to state 309
    special_parameter_declaration	go to state 1223
    function_definition	go to state 1224
    func_definition	go to state 379
    ctor_definition	go to state 380
    constructor_head	go to state 1225
    function_try_block	go to state 314
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    accessibility_specifier	go to state 315
    bit_field_declaration	go to state 316
    bit_field_init_declaration	go to state 383
    access_specifier	go to state 318
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_declaration	go to state 319
    template_parameter_clause	go to state 320
    simple_type_parameter	go to state 321
    template_id	go to state 54
    explicit_specialization	go to state 322
    handler_seq	go to state 323
    handler	go to state 324
    throw_expression	go to state 325
    looped_unterminated_tree_argument	go to state 1415
    looped_tree_statement	go to state 1416
    tree_statement	go to state 1228
    compound_tree_statement	go to state 332
    terminated_tree_argument	go to state 1229
    unterminated_tree_argument	go to state 1230
    unterminated_tree_argument.most	go to state 1231
    reserved_id	go to state 335
    token.punct	go to state 336
    simple_tree_declaration	go to state 1232
    segment	go to state 58
    include_declaration	go to state 337
    utility	go to state 66
    file_dependency_declaration	go to state 338
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 341
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 345
    advance_search	go to state 1233



state 1344

    looped_tree_statement  ->  advance_search '-' .   (rule 628)

    $default	reduce using rule 628 (looped_tree_statement)



state 1345

    bit_field_width  ->  logical_or_expression '?' bit_field_width ':' . bit_field_width   (rule 483)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 647
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    bit_field_width	go to state 1417
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1346

    braced_initializer  ->  '{' initializer_list '}' .   (rule 456)

    $default	reduce using rule 456 (braced_initializer)



state 1347

    braced_initializer  ->  '{' initializer_list ',' . '}'   (rule 457)
    braced_initializer  ->  '{' initializer_list ',' . looping_initializer_clause '#' bang error_ecarb   (rule 460)
    initializer_list  ->  initializer_list ',' . looping_initializer_clause   (rule 462)

    '}' 	shift, and go to state 1418

    $default	reduce using rule 973 (start_search)

    looping_initializer_clause	go to state 1419
    start_search	go to state 1238



state 1348

    braced_initializer  ->  '{' looping_initializer_clause '#' . bang error_ecarb   (rule 459)

    $default	reduce using rule 969 (bang)

    bang	go to state 1420



state 1349

    looped_initializer_clause  ->  initializer_clause .   (rule 464)

    $default	reduce using rule 464 (looped_initializer_clause)



state 1350

    looping_initializer_clause  ->  start_search looped_initializer_clause .   (rule 463)

    $default	reduce using rule 463 (looping_initializer_clause)



state 1351

    looped_initializer_clause  ->  advance_search . '+' looped_initializer_clause   (rule 465)
    looped_initializer_clause  ->  advance_search . '-'   (rule 466)

    '+' 	shift, and go to state 1421
    '-' 	shift, and go to state 1422



state 1352

    compound_statement  ->  '{' statement_seq.opt looping_statement '#' . bang error_ecarb   (rule 234)
    statement_seq.opt  ->  statement_seq.opt looping_statement '#' . bang error ';'   (rule 237)

    $default	reduce using rule 969 (bang)

    bang	go to state 1423



state 1353

    object_statements_clause  ->  ':' '{' object_statement_seq.opt '}' .   (rule 747)

    $default	reduce using rule 747 (object_statements_clause)



state 1354

    object_statements_clause  ->  ':' '{' object_statement_seq.opt looping_object_statement . '#' bang error_ecarb   (rule 748)
    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement .   (rule 750)
    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement . '#' bang error ';'   (rule 751)

    '#' 	shift, and go to state 1424

    $default	reduce using rule 750 (object_statement_seq.opt)



state 1355

    looping_object_statement  ->  start_search . looped_object_statement   (rule 752)

    error	shift, and go to state 349
    NAMESPACE	shift, and go to state 1425
    AUTO	shift, and go to state 1426
    EXPORT	shift, and go to state 1427
    USING	shift, and go to state 1428
    TRY 	shift, and go to state 667
    DERIVED	shift, and go to state 1429
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    '(' 	shift, and go to state 1430
    ';' 	shift, and go to state 1431
    ':' 	shift, and go to state 641
    '=' 	shift, and go to state 1432


    function_try_block	go to state 1433
    function_block	go to state 1434
    ctor_initializer.opt	go to state 643
    ctor_initializer	go to state 1435
    looped_object_statement	go to state 1436
    object_statement	go to state 1437
    function_used_block	go to state 1438
    segment	go to state 1439
    derived_clause	go to state 1440
    meta_control_statement	go to state 1441
    file_dependency_declaration	go to state 1442
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 1443
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 1444
    advance_search	go to state 1445
    line	go to state 393



state 1356

    constructor_head  ->  constructor_head ',' assignment_expression .   (rule 450)

    $default	reduce using rule 450 (constructor_head)



state 1357

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' . syntax_macro_parameter_list ')' compound_tree_statement   (rule 888)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' . syntax_macro_parameter_list ')' '[' ']' compound_tree_statement   (rule 889)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' . ')' compound_tree_statement   (rule 890)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' . ')' '[' ']' compound_tree_statement   (rule 891)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    EXPORT	shift, and go to state 1446
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    ASM 	shift, and go to state 1447
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 1448
    CONST_CAST	shift, and go to state 1449
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 1450
    DELETE	shift, and go to state 1451
    DYNAMIC_CAST	shift, and go to state 1452
    ELSE	shift, and go to state 224
    FOR 	shift, and go to state 1453
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 1454
    NEW 	shift, and go to state 1455
    REINTERPRET_CAST	shift, and go to state 1456
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 1457
    STATIC_CAST	shift, and go to state 1458
    SWITCH	shift, and go to state 1459
    TRY 	shift, and go to state 1460
    TYPEID	shift, and go to state 1461
    WHILE	shift, and go to state 1462
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 1463
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 1464
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 1465
    DEC 	shift, and go to state 1466
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 1467
    '}' 	shift, and go to state 1468
    '[' 	shift, and go to state 1469
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 1470
    ')' 	shift, and go to state 1471
    ';' 	shift, and go to state 1472
    ':' 	shift, and go to state 1473
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 1474
    '-' 	shift, and go to state 1475
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 1476
    '!' 	shift, and go to state 1477
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    ',' 	shift, and go to state 1478
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    $default	reduce using rule 969 (bang)

    identifier_word	go to state 47
    identifier	go to state 1479
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    reserved_id	go to state 1480
    token.punct	go to state 1481
    segment	go to state 58
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 1016
    meta_type	go to state 1482
    syntax_macro_parameter_list	go to state 1483
    syntax_macro_parameter	go to state 1484
    utility	go to state 66
    bang	go to state 1485



state 1358

    compound_declaration  ->  '{' nest declaration_seq.opt util looping_declaration . '#' bang error_ecarb   (rule 254)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration .   (rule 256)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration . '#' bang error ';'   (rule 257)

    '#' 	shift, and go to state 1486

    $default	reduce using rule 256 (declaration_seq.opt)



state 1359

    meta_control_statement1  ->  CASE constant_expression ':' lined_declaration .   (rule 809)

    $default	reduce using rule 809 (meta_control_statement1)



state 1360

    meta_control_statement1  ->  DO lined_declaration WHILE '(' . expression ')' semi   (rule 811)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression	go to state 1487
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1361

    meta_control_statement1  ->  FOR '(' for_init_statement condition.opt . ';' expression.opt ')' lined_declaration   (rule 816)

    ';' 	shift, and go to state 1488



state 1362

    meta_control_statement1  ->  IF '(' condition ')' . lined_declaration   (rule 812)
    meta_control_statement1  ->  IF '(' condition ')' . lined_declaration ELSE lined_declaration   (rule 813)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1489
    line	go to state 1034



state 1363

    meta_control_statement1  ->  SWITCH '(' expression ')' . lined_declaration   (rule 814)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1490
    line	go to state 1034



state 1364

    meta_control_statement1  ->  WHILE '(' condition ')' . lined_declaration   (rule 815)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1491
    line	go to state 1034



state 1365

    templated_conditional_expression  ->  templated_logical_or_expression '?' templated_expression ':' templated_assignment_expression .   (rule 208)

    $default	reduce using rule 208 (templated_conditional_expression)



state 1366

    templated_expression  ->  templated_expression_list ',' templated_assignment_expression .   (rule 213)
    templated_expression_list  ->  templated_expression_list ',' templated_assignment_expression .   (rule 215)

    $default	reduce using rule 213 (templated_expression)



state 1367

    enumerator_definition  ->  enumerator '=' constant_expression .   (rule 371)

    $default	reduce using rule 371 (enumerator_definition)



state 1368

    enumerator_definition_ecarb  ->  bang error_ecarb .   (rule 364)

    $default	reduce using rule 364 (enumerator_definition_ecarb)



state 1369

    direct_abstract_declarator  ->  direct_abstract_declarator.opt '[' ']' .   (rule 413)

    $default	reduce using rule 413 (direct_abstract_declarator)



state 1370

    direct_abstract_declarator  ->  direct_abstract_declarator.opt '[' constant_expression . ']'   (rule 414)

    ']' 	shift, and go to state 1492



state 1371

    postfix_expression  ->  CONST_CAST '<' type_id '>' '(' expression . ')'   (rule 101)

    ')' 	shift, and go to state 1493



state 1372

    postfix_expression  ->  DYNAMIC_CAST '<' type_id '>' '(' expression . ')'   (rule 98)

    ')' 	shift, and go to state 1494



state 1373

    expression_list  ->  expression_list ',' assignment_expression .   (rule 106)

    $default	reduce using rule 106 (expression_list)



state 1374

    direct_new_declarator  ->  direct_new_declarator '[' constant_expression ']' .   (rule 132)

    $default	reduce using rule 132 (direct_new_declarator)



state 1375

    postfix_expression  ->  REINTERPRET_CAST '<' type_id '>' '(' expression . ')'   (rule 100)

    ')' 	shift, and go to state 1495



state 1376

    postfix_expression  ->  STATIC_CAST '<' type_id '>' '(' expression . ')'   (rule 99)

    ')' 	shift, and go to state 1496



state 1377

    pseudo_destructor_id  ->  TEMPLATE . pseudo_destructor_id   (rule 54)
    template_id  ->  TEMPLATE . identifier '<' template_argument_list '>'   (rule 568)
    template_id  ->  TEMPLATE . template_id   (rule 569)

    TEMPLATE	shift, and go to state 1377
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43
    '~' 	shift, and go to state 1093

    identifier_word	go to state 47
    identifier	go to state 69
    built_in_type_id	go to state 813
    pseudo_destructor_id	go to state 1090
    built_in_type_specifier	go to state 52
    template_id	go to state 71
    segment	go to state 58
    utility	go to state 66



state 1378

    built_in_type_id  ->  built_in_type_id . built_in_type_specifier   (rule 51)
    pseudo_destructor_id  ->  built_in_type_id SCOPE '~' built_in_type_id .   (rule 52)

    BuiltInTypeSpecifier	shift, and go to state 13

    $default	reduce using rule 52 (pseudo_destructor_id)

    built_in_type_specifier	go to state 80



state 1379

    type1_parameters  ->  type1_parameters parameter_declaration_list . ';'   (rule 84)
    parameter_declaration_list  ->  parameter_declaration_list . ',' parameter_declaration   (rule 422)

    ';' 	shift, and go to state 1497
    ',' 	shift, and go to state 802



state 1380

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' type1_parameters mark . '{' error   (rule 88)
    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' type1_parameters mark . error   (rule 89)

    error	shift, and go to state 1498
    '{' 	shift, and go to state 1499



state 1381

    type1_parameters  ->  parameter_declaration_list ';' .   (rule 83)

    $default	reduce using rule 83 (type1_parameters)



state 1382

    exception_specification  ->  THROW '(' type_id_list ')' .   (rule 585)

    $default	reduce using rule 585 (exception_specification)



state 1383

    type_id_list  ->  type_id_list ',' . type_id   (rule 587)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    CONST	shift, and go to state 199
    VOLATILE	shift, and go to state 200
    TEMPLATE	shift, and go to state 435
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '!' 	shift, and go to state 436

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 437
    type_specifier	go to state 773
    elaborate_type_specifier	go to state 440
    simple_type_specifier	go to state 441
    built_in_type_specifier	go to state 442
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    cv_qualifier	go to state 443
    type_id	go to state 1500
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1384

    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' . bang error ';'   (rule 257)
    class_specifier  ->  class_specifier_head nest declaration_seq.opt util looping_declaration '#' . bang error_ecarb   (rule 478)

    $default	reduce using rule 969 (bang)

    bang	go to state 1501



state 1385

    file_name  ->  file_name '/' TEMPLATE .   (rule 940)

    $default	reduce using rule 940 (file_name)



state 1386

    file_name  ->  file_name '/' GUARD . '=' string_expr   (rule 942)

    '=' 	shift, and go to state 1502



state 1387

    file_name  ->  file_name '/' IMPLEMENTATION .   (rule 939)

    $default	reduce using rule 939 (file_name)



state 1388

    file_name  ->  file_name '/' INTERFACE .   (rule 938)

    $default	reduce using rule 938 (file_name)



state 1389

    file_name  ->  file_name '/' NOGUARD .   (rule 943)

    $default	reduce using rule 943 (file_name)



state 1390

    file_name  ->  file_name '/' PATH . '=' string_expr   (rule 944)

    '=' 	shift, and go to state 1503



state 1391

    file_name  ->  file_name '/' PREFIX . '=' string_expr   (rule 945)

    '=' 	shift, and go to state 1504



state 1392

    file_name  ->  file_name '/' SUFFIX . '=' string_expr   (rule 946)

    '=' 	shift, and go to state 1505



state 1393

    file_name  ->  file_name '/' utility .   (rule 941)

    $default	reduce using rule 941 (file_name)



state 1394

    meta_postfix_expression  ->  meta_postfix_expression '[' expression ']' .   (rule 831)

    $default	reduce using rule 831 (meta_postfix_expression)



state 1395

    meta_fn_postfix_expression  ->  meta_postfix_expression '(' tree_argument_list.opt ')' .   (rule 827)

    $default	reduce using rule 827 (meta_fn_postfix_expression)



state 1396

    meta_class_specifier  ->  meta_class_key meta_nested_id ':' base_specifier_list compound_declaration .   (rule 791)

    $default	reduce using rule 791 (meta_class_specifier)



state 1397

    meta_expression_statement  ->  meta_postfix_expression '[' ']' object_statements_clause semi .   (rule 882)

    $default	reduce using rule 882 (meta_expression_statement)



state 1398

    meta_expression_statement  ->  meta_postfix_expression '[' expression ']' object_statements_clause . semi   (rule 883)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1506
    bang	go to state 701



state 1399

    meta_expression_statement  ->  meta_postfix_expression '(' tree_argument_list.opt ')' object_statements_clause . semi   (rule 881)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1507
    bang	go to state 701



state 1400

    meta_conditional_expression  ->  meta_logical_or_expression '?' meta_conditional_expression ':' meta_conditional_expression .   (rule 877)

    $default	reduce using rule 877 (meta_conditional_expression)



state 1401

    elaborated_class_specifier  ->  class_key scoped_id colon_mark . error   (rule 469)

    error	shift, and go to state 1112



state 1402

    file_id  ->  file_entity '/' IMPLEMENTATION .   (rule 951)

    $default	reduce using rule 951 (file_id)



state 1403

    file_id  ->  file_entity '/' INTERFACE .   (rule 952)

    $default	reduce using rule 952 (file_id)



state 1404

    include_declaration  ->  USING '/' INCLUDE '/' utility string_expr .   (rule 908)

    $default	reduce using rule 908 (include_declaration)



state 1405

    iteration_statement  ->  DO looping_statement WHILE '(' expression ')' . ';'   (rule 245)

    ';' 	shift, and go to state 1508



state 1406

    iteration_statement  ->  FOR '(' for_init_statement condition.opt ';' expression.opt . ')' looping_statement   (rule 246)

    ')' 	shift, and go to state 1509



state 1407

    selection_statement  ->  IF '(' condition ')' looping_statement ELSE . looping_statement   (rule 239)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 1510
    start_search	go to state 635



state 1408

    mem_initializer_list_head  ->  mem_initializer_list bang error '#' .   (rule 508)

    $default	reduce using rule 508 (mem_initializer_list_head)



state 1409

    mem_initializer_list_head  ->  mem_initializer_list bang error ',' .   (rule 507)

    $default	reduce using rule 507 (mem_initializer_list_head)



state 1410

    mem_initializer  ->  mem_initializer_id '(' expression_list.opt ')' .   (rule 509)

    $default	reduce using rule 509 (mem_initializer)



state 1411

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_unterminated_tree_argument '#' bang error_ecarb .   (rule 635)

    $default	reduce using rule 635 (compound_tree_statement)



state 1412

    tree_statement_seq.opt  ->  tree_statement_seq.opt looping_tree_statement '#' bang error . ';'   (rule 639)
    error_ecarb  ->  error . '}'   (rule 964)
    error_ecarb  ->  error . '#'   (rule 965)

    '}' 	shift, and go to state 1270
    '#' 	shift, and go to state 1271
    ';' 	shift, and go to state 1511



state 1413

    compound_tree_statement  ->  '{' tree_statement_seq.opt looping_tree_statement '#' bang error_ecarb .   (rule 636)

    $default	reduce using rule 636 (compound_tree_statement)



state 1414

    init_object_declaration  ->  assignment_expression . object_statements_clause   (rule 388)
    constructor_head  ->  constructor_head ',' assignment_expression .   (rule 450)
    bit_field_declaration  ->  assignment_expression . ':' bit_field_width   (rule 480)
    simple_tree_declaration  ->  constructor_head ',' assignment_expression .   (rule 743)

    ':' 	shift, and go to state 669

    $default	reduce using rule 450 (constructor_head)

    object_statements_clause	go to state 673



state 1415

    looped_unterminated_tree_argument  ->  advance_search '+' looped_unterminated_tree_argument .   (rule 624)

    $default	reduce using rule 624 (looped_unterminated_tree_argument)



state 1416

    looped_tree_statement  ->  advance_search '+' looped_tree_statement .   (rule 627)

    $default	reduce using rule 627 (looped_tree_statement)



state 1417

    bit_field_width  ->  logical_or_expression '?' bit_field_width ':' bit_field_width .   (rule 483)

    $default	reduce using rule 483 (bit_field_width)



state 1418

    braced_initializer  ->  '{' initializer_list ',' '}' .   (rule 457)

    $default	reduce using rule 457 (braced_initializer)



state 1419

    braced_initializer  ->  '{' initializer_list ',' looping_initializer_clause . '#' bang error_ecarb   (rule 460)
    initializer_list  ->  initializer_list ',' looping_initializer_clause .   (rule 462)

    '#' 	shift, and go to state 1512

    $default	reduce using rule 462 (initializer_list)



state 1420

    braced_initializer  ->  '{' looping_initializer_clause '#' bang . error_ecarb   (rule 459)

    error	shift, and go to state 1269

    error_ecarb	go to state 1513



state 1421

    looped_initializer_clause  ->  advance_search '+' . looped_initializer_clause   (rule 465)

    error	shift, and go to state 349
    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 996
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1007
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    initializer_clause	go to state 1349
    braced_initializer	go to state 1009
    looped_initializer_clause	go to state 1514
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66
    advance_search	go to state 1351



state 1422

    looped_initializer_clause  ->  advance_search '-' .   (rule 466)

    $default	reduce using rule 466 (looped_initializer_clause)



state 1423

    compound_statement  ->  '{' statement_seq.opt looping_statement '#' bang . error_ecarb   (rule 234)
    statement_seq.opt  ->  statement_seq.opt looping_statement '#' bang . error ';'   (rule 237)

    error	shift, and go to state 1515

    error_ecarb	go to state 1516



state 1424

    object_statements_clause  ->  ':' '{' object_statement_seq.opt looping_object_statement '#' . bang error_ecarb   (rule 748)
    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement '#' . bang error ';'   (rule 751)

    $default	reduce using rule 969 (bang)

    bang	go to state 1517



state 1425

    filespace_specifier  ->  NAMESPACE . '/' FILE file_name compound_declaration   (rule 955)

    '/' 	shift, and go to state 572



state 1426

    object_statement  ->  AUTO . meta_control_statement   (rule 764)
    object_statement  ->  AUTO . meta_expression_statement   (rule 765)
    object_statement  ->  AUTO . meta_function_definition   (rule 766)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    CONST	shift, and go to state 575
    AUTO	shift, and go to state 9
    STATIC	shift, and go to state 576
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 586
    '!' 	shift, and go to state 587

    $default	reduce using rule 970 (line)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 863
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_function_definition	go to state 1518
    meta_control_statement	go to state 1519
    meta_primary_head	go to state 596
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 599
    meta_postfix_expression	go to state 600
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 613
    meta_conditional_expression	go to state 614
    meta_expression_statement	go to state 1520
    utility	go to state 66
    line	go to state 393



state 1427

    file_placement_declaration  ->  EXPORT . '/' NOIMPLEMENTATION semi   (rule 925)
    file_placement_declaration  ->  EXPORT . '/' UTILITY semi   (rule 926)
    export_implementation  ->  EXPORT . '/' IMPLEMENTATION implementation_file   (rule 927)
    export_implementation  ->  EXPORT . '/' IMPLEMENTATION '=' implementation_file   (rule 928)
    export_interface  ->  EXPORT . '/' INTERFACE interface_file   (rule 929)
    export_interface  ->  EXPORT . '/' INTERFACE '=' interface_file   (rule 930)
    export_all  ->  EXPORT . '/' ALL interface_file   (rule 931)
    export_all  ->  EXPORT . '/' ALL '=' interface_file   (rule 932)

    '/' 	shift, and go to state 618



state 1428

    function_used_block  ->  USING . file_id_list function_used_block   (rule 773)
    using_implementation  ->  USING . '/' IMPLEMENTATION file_use   (rule 916)
    using_implementation  ->  USING . '/' IMPLEMENTATION '=' file_use   (rule 917)
    using_interface  ->  USING . '/' INTERFACE file_use   (rule 918)
    using_interface  ->  USING . '/' INTERFACE '=' file_use   (rule 919)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '/' 	shift, and go to state 1521
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    file_name	go to state 1163
    file_entity	go to state 1522
    file_id	go to state 1523
    file_id_list	go to state 1524



state 1429

    derived_clause  ->  DERIVED . '(' meta_conditional_expression ')'   (rule 780)

    '(' 	shift, and go to state 1525



state 1430

    object_statement  ->  '(' . expression_list ')' ';'   (rule 759)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 1526
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1076
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1431

    object_statement  ->  ';' .   (rule 756)

    $default	reduce using rule 756 (object_statement)



state 1432

    object_statement  ->  '=' . initializer_clause ';'   (rule 758)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '{' 	shift, and go to state 996
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 1007
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    initializer_clause	go to state 1527
    braced_initializer	go to state 1009
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1433

    function_used_block  ->  function_try_block .   (rule 771)

    $default	reduce using rule 771 (function_used_block)



state 1434

    function_used_block  ->  function_block .   (rule 770)

    $default	reduce using rule 770 (function_used_block)



state 1435

    ctor_initializer.opt  ->  ctor_initializer .   (rule 501)
    function_used_block  ->  ctor_initializer . ';'   (rule 772)

    ';' 	shift, and go to state 1528

    $default	reduce using rule 501 (ctor_initializer.opt)



state 1436

    looping_object_statement  ->  start_search looped_object_statement .   (rule 752)

    $default	reduce using rule 752 (looping_object_statement)



state 1437

    looped_object_statement  ->  object_statement .   (rule 753)

    $default	reduce using rule 753 (looped_object_statement)



state 1438

    object_statement  ->  function_used_block .   (rule 757)

    $default	reduce using rule 757 (object_statement)



state 1439

    function_used_block  ->  segment . function_used_block   (rule 774)

    USING	shift, and go to state 1529
    TRY 	shift, and go to state 667
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    ':' 	shift, and go to state 641

    $default	reduce using rule 500 (ctor_initializer.opt)

    function_try_block	go to state 1433
    function_block	go to state 1434
    ctor_initializer.opt	go to state 643
    ctor_initializer	go to state 1435
    function_used_block	go to state 1530
    segment	go to state 1439



state 1440

    object_statement  ->  derived_clause . object_statement   (rule 767)
    object_statement  ->  derived_clause . ':' '{' object_statement_seq.opt '}'   (rule 768)
    object_statement  ->  derived_clause . ':' '{' object_statement_seq.opt looping_object_statement '#' bang error '#'   (rule 769)

    NAMESPACE	shift, and go to state 1425
    AUTO	shift, and go to state 1426
    EXPORT	shift, and go to state 1427
    USING	shift, and go to state 1428
    TRY 	shift, and go to state 667
    DERIVED	shift, and go to state 1429
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    '(' 	shift, and go to state 1430
    ';' 	shift, and go to state 1431
    ':' 	shift, and go to state 1531
    '=' 	shift, and go to state 1432

    $default	reduce using rule 970 (line)

    function_try_block	go to state 1433
    function_block	go to state 1434
    ctor_initializer.opt	go to state 643
    ctor_initializer	go to state 1435
    object_statement	go to state 1532
    function_used_block	go to state 1438
    segment	go to state 1439
    derived_clause	go to state 1440
    meta_control_statement	go to state 1441
    file_dependency_declaration	go to state 1442
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 1443
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 1444
    line	go to state 393



state 1441

    object_statement  ->  meta_control_statement .   (rule 763)

    $default	reduce using rule 763 (object_statement)



state 1442

    object_statement  ->  file_dependency_declaration .   (rule 760)

    $default	reduce using rule 760 (object_statement)



state 1443

    object_statement  ->  file_placement_declaration .   (rule 761)

    $default	reduce using rule 761 (object_statement)



state 1444

    object_statement  ->  filespace_specifier . semi   (rule 762)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1533
    bang	go to state 701



state 1445

    looped_object_statement  ->  advance_search . '+' looped_object_statement   (rule 754)
    looped_object_statement  ->  advance_search . '-'   (rule 755)

    '+' 	shift, and go to state 1534
    '-' 	shift, and go to state 1535



state 1446

    reserved_id  ->  EXPORT .   (rule 696)

    $default	reduce using rule 696 (reserved_id)



state 1447

    reserved_id  ->  ASM .   (rule 675)

    $default	reduce using rule 675 (reserved_id)



state 1448

    reserved_id  ->  CASE .   (rule 677)

    $default	reduce using rule 677 (reserved_id)



state 1449

    reserved_id  ->  CONST_CAST .   (rule 678)

    $default	reduce using rule 678 (reserved_id)



state 1450

    reserved_id  ->  DEFAULT .   (rule 680)

    $default	reduce using rule 680 (reserved_id)



state 1451

    reserved_id  ->  DELETE .   (rule 681)

    $default	reduce using rule 681 (reserved_id)



state 1452

    reserved_id  ->  DYNAMIC_CAST .   (rule 682)

    $default	reduce using rule 682 (reserved_id)



state 1453

    reserved_id  ->  FOR .   (rule 684)

    $default	reduce using rule 684 (reserved_id)



state 1454

    reserved_id  ->  IF .   (rule 686)

    $default	reduce using rule 686 (reserved_id)



state 1455

    reserved_id  ->  NEW .   (rule 687)

    $default	reduce using rule 687 (reserved_id)



state 1456

    reserved_id  ->  REINTERPRET_CAST .   (rule 688)

    $default	reduce using rule 688 (reserved_id)



state 1457

    reserved_id  ->  SIZEOF .   (rule 690)

    $default	reduce using rule 690 (reserved_id)



state 1458

    reserved_id  ->  STATIC_CAST .   (rule 691)

    $default	reduce using rule 691 (reserved_id)



state 1459

    reserved_id  ->  SWITCH .   (rule 692)

    $default	reduce using rule 692 (reserved_id)



state 1460

    reserved_id  ->  TRY .   (rule 693)

    $default	reduce using rule 693 (reserved_id)



state 1461

    reserved_id  ->  TYPEID .   (rule 694)

    $default	reduce using rule 694 (reserved_id)



state 1462

    reserved_id  ->  WHILE .   (rule 695)

    $default	reduce using rule 695 (reserved_id)



state 1463

    identifier_word  ->  MetaType .   (rule 2)
    meta_type  ->  MetaType .   (rule 801)

    $default	reduce using rule 801 (meta_type)



state 1464

    token.punct  ->  SCOPE .   (rule 697)

    $default	reduce using rule 697 (token.punct)



state 1465

    token.punct  ->  INC .   (rule 706)

    $default	reduce using rule 706 (token.punct)



state 1466

    token.punct  ->  DEC .   (rule 707)

    $default	reduce using rule 707 (token.punct)



state 1467

    syntax_macro_parameter  ->  '{' .   (rule 901)

    $default	reduce using rule 901 (syntax_macro_parameter)



state 1468

    syntax_macro_parameter  ->  '}' .   (rule 902)

    $default	reduce using rule 902 (syntax_macro_parameter)



state 1469

    token.punct  ->  '[' .   (rule 721)

    $default	reduce using rule 721 (token.punct)



state 1470

    syntax_macro_parameter  ->  '(' .   (rule 903)

    $default	reduce using rule 903 (syntax_macro_parameter)



state 1471

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' ')' . compound_tree_statement   (rule 890)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' ')' . '[' ']' compound_tree_statement   (rule 891)
    syntax_macro_parameter  ->  ')' .   (rule 904)

    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 1536

    $default	reduce using rule 904 (syntax_macro_parameter)

    compound_tree_statement	go to state 1537



state 1472

    syntax_macro_parameter  ->  ';' .   (rule 899)

    $default	reduce using rule 899 (syntax_macro_parameter)



state 1473

    token.punct  ->  ':' .   (rule 723)

    $default	reduce using rule 723 (token.punct)



state 1474

    token.punct  ->  '+' .   (rule 726)

    $default	reduce using rule 726 (token.punct)



state 1475

    token.punct  ->  '-' .   (rule 727)

    $default	reduce using rule 727 (token.punct)



state 1476

    token.punct  ->  '~' .   (rule 731)

    $default	reduce using rule 731 (token.punct)



state 1477

    token.punct  ->  '!' .   (rule 732)

    $default	reduce using rule 732 (token.punct)



state 1478

    syntax_macro_parameter  ->  ',' .   (rule 900)

    $default	reduce using rule 900 (syntax_macro_parameter)



state 1479

    syntax_macro_parameter  ->  identifier .   (rule 896)

    $default	reduce using rule 896 (syntax_macro_parameter)



state 1480

    syntax_macro_parameter  ->  reserved_id .   (rule 897)

    $default	reduce using rule 897 (syntax_macro_parameter)



state 1481

    syntax_macro_parameter  ->  token.punct .   (rule 898)

    $default	reduce using rule 898 (syntax_macro_parameter)



state 1482

    syntax_macro_parameter  ->  meta_type . identifier   (rule 894)
    syntax_macro_parameter  ->  meta_type . identifier '[' ']'   (rule 895)

    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    Identifier	shift, and go to state 43

    identifier_word	go to state 47
    identifier	go to state 1538
    segment	go to state 58
    utility	go to state 66



state 1483

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list . ')' compound_tree_statement   (rule 888)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list . ')' '[' ']' compound_tree_statement   (rule 889)
    syntax_macro_parameter_list  ->  syntax_macro_parameter_list . ',' syntax_macro_parameter   (rule 893)

    ')' 	shift, and go to state 1539
    ',' 	shift, and go to state 1540



state 1484

    syntax_macro_parameter_list  ->  syntax_macro_parameter .   (rule 892)

    $default	reduce using rule 892 (syntax_macro_parameter_list)



state 1485

    syntax_macro_parameter  ->  bang . error   (rule 905)

    error	shift, and go to state 1541



state 1486

    compound_declaration  ->  '{' nest declaration_seq.opt util looping_declaration '#' . bang error_ecarb   (rule 254)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' . bang error ';'   (rule 257)

    $default	reduce using rule 969 (bang)

    bang	go to state 1542



state 1487

    meta_control_statement1  ->  DO lined_declaration WHILE '(' expression . ')' semi   (rule 811)

    ')' 	shift, and go to state 1543



state 1488

    meta_control_statement1  ->  FOR '(' for_init_statement condition.opt ';' . expression.opt ')' lined_declaration   (rule 816)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 106
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 108
    CONST_CAST	shift, and go to state 109
    DELETE	shift, and go to state 110
    DYNAMIC_CAST	shift, and go to state 111
    FALSE	shift, and go to state 112
    NEW 	shift, and go to state 113
    OPERATOR	shift, and go to state 114
    REINTERPRET_CAST	shift, and go to state 115
    SIZEOF	shift, and go to state 116
    STATIC_CAST	shift, and go to state 117
    THIS	shift, and go to state 118
    THROW	shift, and go to state 235
    TRUE	shift, and go to state 119
    TYPEID	shift, and go to state 120
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 123
    DEC 	shift, and go to state 124
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '[' 	shift, and go to state 128
    '(' 	shift, and go to state 130
    '+' 	shift, and go to state 131
    '-' 	shift, and go to state 132
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 134
    '~' 	shift, and go to state 135
    '!' 	shift, and go to state 136

    $default	reduce using rule 185 (expression.opt)

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 137
    id_scope	go to state 138
    nested_id	go to state 104
    scoped_id	go to state 139
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 142
    string	go to state 143
    literal	go to state 144
    boolean_literal	go to state 145
    primary_expression	go to state 146
    abstract_expression	go to state 147
    postfix_expression	go to state 148
    expression_list	go to state 495
    unary_expression	go to state 149
    delete_expression	go to state 150
    new_expression	go to state 151
    cast_expression	go to state 152
    pm_expression	go to state 153
    multiplicative_expression	go to state 154
    additive_expression	go to state 155
    shift_expression	go to state 156
    relational_expression	go to state 157
    equality_expression	go to state 158
    and_expression	go to state 159
    exclusive_or_expression	go to state 160
    inclusive_or_expression	go to state 161
    logical_and_expression	go to state 162
    logical_or_expression	go to state 288
    conditional_expression	go to state 289
    assignment_expression	go to state 496
    expression.opt	go to state 1544
    expression	go to state 498
    suffix_built_in_decl_specifier.raw	go to state 166
    suffix_built_in_decl_specifier	go to state 167
    suffix_named_decl_specifier	go to state 168
    suffix_named_decl_specifier.bi	go to state 169
    suffix_named_decl_specifiers	go to state 170
    suffix_named_decl_specifiers.sf	go to state 171
    suffix_decl_specified_ids	go to state 172
    suffix_decl_specified_scope	go to state 173
    elaborate_type_specifier	go to state 174
    built_in_type_specifier	go to state 175
    elaborated_type_specifier	go to state 176
    elaborated_enum_specifier	go to state 177
    enum_specifier	go to state 178
    star_ptr_operator	go to state 179
    nested_ptr_operator	go to state 180
    ptr_operator	go to state 181
    parenthesis_clause	go to state 182
    parameters_clause	go to state 183
    elaborated_class_specifier	go to state 184
    class_specifier_head	go to state 185
    class_key	go to state 186
    class_specifier	go to state 187
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    throw_expression	go to state 325
    segment	go to state 58
    utility	go to state 66



state 1489

    meta_control_statement1  ->  IF '(' condition ')' lined_declaration .   (rule 812)
    meta_control_statement1  ->  IF '(' condition ')' lined_declaration . ELSE lined_declaration   (rule 813)

    ELSE	shift, and go to state 1545

    $default	reduce using rule 812 (meta_control_statement1)



state 1490

    meta_control_statement1  ->  SWITCH '(' expression ')' lined_declaration .   (rule 814)

    $default	reduce using rule 814 (meta_control_statement1)



state 1491

    meta_control_statement1  ->  WHILE '(' condition ')' lined_declaration .   (rule 815)

    $default	reduce using rule 815 (meta_control_statement1)



state 1492

    direct_abstract_declarator  ->  direct_abstract_declarator.opt '[' constant_expression ']' .   (rule 414)

    $default	reduce using rule 414 (direct_abstract_declarator)



state 1493

    postfix_expression  ->  CONST_CAST '<' type_id '>' '(' expression ')' .   (rule 101)

    $default	reduce using rule 101 (postfix_expression)



state 1494

    postfix_expression  ->  DYNAMIC_CAST '<' type_id '>' '(' expression ')' .   (rule 98)

    $default	reduce using rule 98 (postfix_expression)



state 1495

    postfix_expression  ->  REINTERPRET_CAST '<' type_id '>' '(' expression ')' .   (rule 100)

    $default	reduce using rule 100 (postfix_expression)



state 1496

    postfix_expression  ->  STATIC_CAST '<' type_id '>' '(' expression ')' .   (rule 99)

    $default	reduce using rule 99 (postfix_expression)



state 1497

    type1_parameters  ->  type1_parameters parameter_declaration_list ';' .   (rule 84)

    $default	reduce using rule 84 (type1_parameters)



state 1498

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' type1_parameters mark error .   (rule 89)

    $default	reduce using rule 89 (postfix_expression)



state 1499

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' type1_parameters mark '{' . error   (rule 88)

    error	shift, and go to state 1546



state 1500

    type_id_list  ->  type_id_list ',' type_id .   (rule 587)

    $default	reduce using rule 587 (type_id_list)



state 1501

    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' bang . error ';'   (rule 257)
    class_specifier  ->  class_specifier_head nest declaration_seq.opt util looping_declaration '#' bang . error_ecarb   (rule 478)

    error	shift, and go to state 1547

    error_ecarb	go to state 1548



state 1502

    file_name  ->  file_name '/' GUARD '=' . string_expr   (rule 942)

    TreeLiteral	shift, and go to state 1186
    StringLiteral	shift, and go to state 127

    string	go to state 1188
    string_expr	go to state 1549



state 1503

    file_name  ->  file_name '/' PATH '=' . string_expr   (rule 944)

    TreeLiteral	shift, and go to state 1186
    StringLiteral	shift, and go to state 127

    string	go to state 1188
    string_expr	go to state 1550



state 1504

    file_name  ->  file_name '/' PREFIX '=' . string_expr   (rule 945)

    TreeLiteral	shift, and go to state 1186
    StringLiteral	shift, and go to state 127

    string	go to state 1188
    string_expr	go to state 1551



state 1505

    file_name  ->  file_name '/' SUFFIX '=' . string_expr   (rule 946)

    TreeLiteral	shift, and go to state 1186
    StringLiteral	shift, and go to state 127

    string	go to state 1188
    string_expr	go to state 1552



state 1506

    meta_expression_statement  ->  meta_postfix_expression '[' expression ']' object_statements_clause semi .   (rule 883)

    $default	reduce using rule 883 (meta_expression_statement)



state 1507

    meta_expression_statement  ->  meta_postfix_expression '(' tree_argument_list.opt ')' object_statements_clause semi .   (rule 881)

    $default	reduce using rule 881 (meta_expression_statement)



state 1508

    iteration_statement  ->  DO looping_statement WHILE '(' expression ')' ';' .   (rule 245)

    $default	reduce using rule 245 (iteration_statement)



state 1509

    iteration_statement  ->  FOR '(' for_init_statement condition.opt ';' expression.opt ')' . looping_statement   (rule 246)

    $default	reduce using rule 973 (start_search)

    looping_statement	go to state 1553
    start_search	go to state 635



state 1510

    selection_statement  ->  IF '(' condition ')' looping_statement ELSE looping_statement .   (rule 239)

    $default	reduce using rule 239 (selection_statement)



state 1511

    tree_statement_seq.opt  ->  tree_statement_seq.opt looping_tree_statement '#' bang error ';' .   (rule 639)

    $default	reduce using rule 639 (tree_statement_seq.opt)



state 1512

    braced_initializer  ->  '{' initializer_list ',' looping_initializer_clause '#' . bang error_ecarb   (rule 460)

    $default	reduce using rule 969 (bang)

    bang	go to state 1554



state 1513

    braced_initializer  ->  '{' looping_initializer_clause '#' bang error_ecarb .   (rule 459)

    $default	reduce using rule 459 (braced_initializer)



state 1514

    looped_initializer_clause  ->  advance_search '+' looped_initializer_clause .   (rule 465)

    $default	reduce using rule 465 (looped_initializer_clause)



state 1515

    statement_seq.opt  ->  statement_seq.opt looping_statement '#' bang error . ';'   (rule 237)
    error_ecarb  ->  error . '}'   (rule 964)
    error_ecarb  ->  error . '#'   (rule 965)

    '}' 	shift, and go to state 1270
    '#' 	shift, and go to state 1271
    ';' 	shift, and go to state 1555



state 1516

    compound_statement  ->  '{' statement_seq.opt looping_statement '#' bang error_ecarb .   (rule 234)

    $default	reduce using rule 234 (compound_statement)



state 1517

    object_statements_clause  ->  ':' '{' object_statement_seq.opt looping_object_statement '#' bang . error_ecarb   (rule 748)
    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement '#' bang . error ';'   (rule 751)

    error	shift, and go to state 1556

    error_ecarb	go to state 1557



state 1518

    object_statement  ->  AUTO meta_function_definition .   (rule 766)

    $default	reduce using rule 766 (object_statement)



state 1519

    object_statement  ->  AUTO meta_control_statement .   (rule 764)

    $default	reduce using rule 764 (object_statement)



state 1520

    object_statement  ->  AUTO meta_expression_statement .   (rule 765)

    $default	reduce using rule 765 (object_statement)



state 1521

    using_implementation  ->  USING '/' . IMPLEMENTATION file_use   (rule 916)
    using_implementation  ->  USING '/' . IMPLEMENTATION '=' file_use   (rule 917)
    using_interface  ->  USING '/' . INTERFACE file_use   (rule 918)
    using_interface  ->  USING '/' . INTERFACE '=' file_use   (rule 919)

    IMPLEMENTATION	shift, and go to state 938
    INTERFACE	shift, and go to state 940



state 1522

    file_id  ->  file_entity . '/' IMPLEMENTATION   (rule 951)
    file_id  ->  file_entity . '/' INTERFACE   (rule 952)

    '/' 	shift, and go to state 1316



state 1523

    file_id_list  ->  file_id .   (rule 953)

    $default	reduce using rule 953 (file_id_list)



state 1524

    function_used_block  ->  USING file_id_list . function_used_block   (rule 773)
    file_id_list  ->  file_id_list . ',' file_id   (rule 954)

    USING	shift, and go to state 1529
    TRY 	shift, and go to state 667
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    ':' 	shift, and go to state 641
    ',' 	shift, and go to state 1558

    $default	reduce using rule 500 (ctor_initializer.opt)

    function_try_block	go to state 1433
    function_block	go to state 1434
    ctor_initializer.opt	go to state 643
    ctor_initializer	go to state 1435
    function_used_block	go to state 1559
    segment	go to state 1439



state 1525

    derived_clause  ->  DERIVED '(' . meta_conditional_expression ')'   (rule 780)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    AUTO	shift, and go to state 9
    TEMPLATE	shift, and go to state 10
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    FALSE	shift, and go to state 112
    SIZEOF	shift, and go to state 577
    THIS	shift, and go to state 578
    TRUE	shift, and go to state 119
    FloatingLiteral	shift, and go to state 121
    IntegerLiteral	shift, and go to state 122
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 579
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    INC 	shift, and go to state 580
    DEC 	shift, and go to state 581
    CharacterLiteral	shift, and go to state 125
    Identifier	shift, and go to state 43
    NumberLiteral	shift, and go to state 126
    StringLiteral	shift, and go to state 127
    '(' 	shift, and go to state 582
    '+' 	shift, and go to state 583
    '-' 	shift, and go to state 584
    '*' 	shift, and go to state 133
    '&' 	shift, and go to state 585
    '~' 	shift, and go to state 870
    '!' 	shift, and go to state 871

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 49
    global_scope	go to state 50
    built_in_type_id	go to state 51
    string	go to state 143
    literal	go to state 588
    boolean_literal	go to state 145
    built_in_type_specifier	go to state 52
    star_ptr_operator	go to state 589
    class_key	go to state 53
    template_id	go to state 54
    segment	go to state 58
    meta_id	go to state 59
    meta_scope	go to state 60
    meta_nested_id	go to state 61
    meta_scoped_id	go to state 590
    meta_class_key	go to state 872
    meta_non_class_key	go to state 593
    meta_simple_type	go to state 65
    meta_primary_head	go to state 873
    meta_primary_id	go to state 597
    meta_primary_expression	go to state 598
    meta_fn_postfix_expression	go to state 874
    meta_postfix_expression	go to state 875
    meta_unary_expression	go to state 601
    meta_cast_expression	go to state 602
    meta_pm_expression	go to state 603
    meta_multiplicative_expression	go to state 604
    meta_additive_expression	go to state 605
    meta_shift_expression	go to state 606
    meta_relational_expression	go to state 607
    meta_equality_expression	go to state 608
    meta_and_expression	go to state 609
    meta_exclusive_or_expression	go to state 610
    meta_inclusive_or_expression	go to state 611
    meta_logical_and_expression	go to state 612
    meta_logical_or_expression	go to state 1153
    meta_conditional_expression	go to state 1560
    utility	go to state 66



state 1526

    expression_list  ->  expression_list . ',' assignment_expression   (rule 106)
    object_statement  ->  '(' expression_list . ')' ';'   (rule 759)

    ')' 	shift, and go to state 1561
    ',' 	shift, and go to state 1279



state 1527

    object_statement  ->  '=' initializer_clause . ';'   (rule 758)

    ';' 	shift, and go to state 1562



state 1528

    function_used_block  ->  ctor_initializer ';' .   (rule 772)

    $default	reduce using rule 772 (function_used_block)



state 1529

    function_used_block  ->  USING . file_id_list function_used_block   (rule 773)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    file_name	go to state 1163
    file_entity	go to state 1522
    file_id	go to state 1523
    file_id_list	go to state 1524



state 1530

    function_used_block  ->  segment function_used_block .   (rule 774)

    $default	reduce using rule 774 (function_used_block)



state 1531

    ctor_initializer  ->  ':' . mem_initializer_list   (rule 502)
    ctor_initializer  ->  ':' . mem_initializer_list bang error   (rule 503)
    object_statement  ->  derived_clause ':' . '{' object_statement_seq.opt '}'   (rule 768)
    object_statement  ->  derived_clause ':' . '{' object_statement_seq.opt looping_object_statement '#' bang error '#'   (rule 769)

    TEMPLATE	shift, and go to state 10
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 1563

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 102
    id_scope	go to state 103
    nested_id	go to state 104
    scoped_id	go to state 979
    mem_initializer_list	go to state 980
    mem_initializer_list_head	go to state 981
    mem_initializer	go to state 982
    mem_initializer_id	go to state 983
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66



state 1532

    object_statement  ->  derived_clause object_statement .   (rule 767)

    $default	reduce using rule 767 (object_statement)



state 1533

    object_statement  ->  filespace_specifier semi .   (rule 762)

    $default	reduce using rule 762 (object_statement)



state 1534

    looped_object_statement  ->  advance_search '+' . looped_object_statement   (rule 754)

    error	shift, and go to state 349
    NAMESPACE	shift, and go to state 1425
    AUTO	shift, and go to state 1426
    EXPORT	shift, and go to state 1427
    USING	shift, and go to state 1428
    TRY 	shift, and go to state 667
    DERIVED	shift, and go to state 1429
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    '(' 	shift, and go to state 1430
    ';' 	shift, and go to state 1431
    ':' 	shift, and go to state 641
    '=' 	shift, and go to state 1432


    function_try_block	go to state 1433
    function_block	go to state 1434
    ctor_initializer.opt	go to state 643
    ctor_initializer	go to state 1435
    looped_object_statement	go to state 1564
    object_statement	go to state 1437
    function_used_block	go to state 1438
    segment	go to state 1439
    derived_clause	go to state 1440
    meta_control_statement	go to state 1441
    file_dependency_declaration	go to state 1442
    using_implementation	go to state 339
    using_interface	go to state 340
    file_placement_declaration	go to state 1443
    export_implementation	go to state 342
    export_interface	go to state 343
    export_all	go to state 344
    filespace_specifier	go to state 1444
    advance_search	go to state 1445
    line	go to state 393



state 1535

    looped_object_statement  ->  advance_search '-' .   (rule 755)

    $default	reduce using rule 755 (looped_object_statement)



state 1536

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' ')' '[' . ']' compound_tree_statement   (rule 891)

    ']' 	shift, and go to state 1565



state 1537

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' ')' compound_tree_statement .   (rule 890)

    $default	reduce using rule 890 (syntax_macro_definition)



state 1538

    syntax_macro_parameter  ->  meta_type identifier .   (rule 894)
    syntax_macro_parameter  ->  meta_type identifier . '[' ']'   (rule 895)

    '[' 	shift, and go to state 1566

    $default	reduce using rule 894 (syntax_macro_parameter)



state 1539

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' . compound_tree_statement   (rule 888)
    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' . '[' ']' compound_tree_statement   (rule 889)

    '{' 	shift, and go to state 264
    '[' 	shift, and go to state 1567

    compound_tree_statement	go to state 1568



state 1540

    syntax_macro_parameter_list  ->  syntax_macro_parameter_list ',' . syntax_macro_parameter   (rule 893)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 4
    NAMESPACE	shift, and go to state 5
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 7
    UNION	shift, and go to state 8
    EXPORT	shift, and go to state 1446
    TYPEDEF	shift, and go to state 11
    USING	shift, and go to state 12
    ASM 	shift, and go to state 1447
    BREAK	shift, and go to state 215
    CASE	shift, and go to state 1448
    CONST_CAST	shift, and go to state 1449
    CONTINUE	shift, and go to state 219
    DEFAULT	shift, and go to state 1450
    DELETE	shift, and go to state 1451
    DYNAMIC_CAST	shift, and go to state 1452
    ELSE	shift, and go to state 224
    FOR 	shift, and go to state 1453
    GOTO	shift, and go to state 226
    IF  	shift, and go to state 1454
    NEW 	shift, and go to state 1455
    REINTERPRET_CAST	shift, and go to state 1456
    RETURN	shift, and go to state 231
    SIZEOF	shift, and go to state 1457
    STATIC_CAST	shift, and go to state 1458
    SWITCH	shift, and go to state 1459
    TRY 	shift, and go to state 1460
    TYPEID	shift, and go to state 1461
    WHILE	shift, and go to state 1462
    BuiltInTypeSpecifier	shift, and go to state 13
    MetaType	shift, and go to state 1463
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 1464
    SHL 	shift, and go to state 241
    SHR 	shift, and go to state 242
    EQ  	shift, and go to state 243
    NE  	shift, and go to state 244
    LE  	shift, and go to state 245
    GE  	shift, and go to state 246
    LOG_AND	shift, and go to state 247
    LOG_OR	shift, and go to state 248
    INC 	shift, and go to state 1465
    DEC 	shift, and go to state 1466
    ARROW	shift, and go to state 251
    ARROW_STAR	shift, and go to state 252
    DOT_STAR	shift, and go to state 253
    ASS_ADD	shift, and go to state 254
    ASS_AND	shift, and go to state 255
    ASS_DIV	shift, and go to state 256
    ASS_MOD	shift, and go to state 257
    ASS_MUL	shift, and go to state 258
    ASS_OR	shift, and go to state 259
    ASS_SHL	shift, and go to state 260
    ASS_SHR	shift, and go to state 261
    ASS_SUB	shift, and go to state 262
    ASS_XOR	shift, and go to state 263
    Identifier	shift, and go to state 43
    '{' 	shift, and go to state 1467
    '}' 	shift, and go to state 1468
    '[' 	shift, and go to state 1469
    ']' 	shift, and go to state 266
    '(' 	shift, and go to state 1470
    ')' 	shift, and go to state 1569
    ';' 	shift, and go to state 1472
    ':' 	shift, and go to state 1473
    '?' 	shift, and go to state 268
    '.' 	shift, and go to state 269
    '+' 	shift, and go to state 1474
    '-' 	shift, and go to state 1475
    '%' 	shift, and go to state 272
    '^' 	shift, and go to state 273
    '|' 	shift, and go to state 274
    '~' 	shift, and go to state 1476
    '!' 	shift, and go to state 1477
    '=' 	shift, and go to state 277
    '<' 	shift, and go to state 278
    '>' 	shift, and go to state 279
    ',' 	shift, and go to state 1478
    '@' 	shift, and go to state 280
    '$' 	shift, and go to state 281
    '\''	shift, and go to state 282
    '"' 	shift, and go to state 283
    '\\'	shift, and go to state 284

    $default	reduce using rule 969 (bang)

    identifier_word	go to state 47
    identifier	go to state 1479
    built_in_type_id	go to state 51
    built_in_type_specifier	go to state 52
    class_key	go to state 53
    reserved_id	go to state 1480
    token.punct	go to state 1481
    segment	go to state 58
    meta_class_key	go to state 63
    meta_non_class_key	go to state 64
    meta_simple_type	go to state 1016
    meta_type	go to state 1482
    syntax_macro_parameter	go to state 1570
    utility	go to state 66
    bang	go to state 1485



state 1541

    syntax_macro_parameter  ->  bang error .   (rule 905)

    $default	reduce using rule 905 (syntax_macro_parameter)



state 1542

    compound_declaration  ->  '{' nest declaration_seq.opt util looping_declaration '#' bang . error_ecarb   (rule 254)
    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' bang . error ';'   (rule 257)

    error	shift, and go to state 1547

    error_ecarb	go to state 1571



state 1543

    meta_control_statement1  ->  DO lined_declaration WHILE '(' expression ')' . semi   (rule 811)

    '#' 	shift, and go to state 698
    ';' 	shift, and go to state 699

    $default	reduce using rule 969 (bang)

    semi	go to state 1572
    bang	go to state 701



state 1544

    meta_control_statement1  ->  FOR '(' for_init_statement condition.opt ';' expression.opt . ')' lined_declaration   (rule 816)

    ')' 	shift, and go to state 1573



state 1545

    meta_control_statement1  ->  IF '(' condition ')' lined_declaration ELSE . lined_declaration   (rule 813)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1574
    line	go to state 1034



state 1546

    postfix_expression  ->  postfix_expression parenthesis_clause mark_type1 '+' type1_parameters mark '{' error .   (rule 88)

    $default	reduce using rule 88 (postfix_expression)



state 1547

    declaration_seq.opt  ->  declaration_seq.opt util looping_declaration '#' bang error . ';'   (rule 257)
    error_ecarb  ->  error . '}'   (rule 964)
    error_ecarb  ->  error . '#'   (rule 965)

    '}' 	shift, and go to state 1270
    '#' 	shift, and go to state 1271
    ';' 	shift, and go to state 1247



state 1548

    class_specifier  ->  class_specifier_head nest declaration_seq.opt util looping_declaration '#' bang error_ecarb .   (rule 478)

    $default	reduce using rule 478 (class_specifier)



state 1549

    file_name  ->  file_name '/' GUARD '=' string_expr .   (rule 942)

    $default	reduce using rule 942 (file_name)



state 1550

    file_name  ->  file_name '/' PATH '=' string_expr .   (rule 944)

    $default	reduce using rule 944 (file_name)



state 1551

    file_name  ->  file_name '/' PREFIX '=' string_expr .   (rule 945)

    $default	reduce using rule 945 (file_name)



state 1552

    file_name  ->  file_name '/' SUFFIX '=' string_expr .   (rule 946)

    $default	reduce using rule 946 (file_name)



state 1553

    iteration_statement  ->  FOR '(' for_init_statement condition.opt ';' expression.opt ')' looping_statement .   (rule 246)

    $default	reduce using rule 246 (iteration_statement)



state 1554

    braced_initializer  ->  '{' initializer_list ',' looping_initializer_clause '#' bang . error_ecarb   (rule 460)

    error	shift, and go to state 1269

    error_ecarb	go to state 1575



state 1555

    statement_seq.opt  ->  statement_seq.opt looping_statement '#' bang error ';' .   (rule 237)

    $default	reduce using rule 237 (statement_seq.opt)



state 1556

    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement '#' bang error . ';'   (rule 751)
    error_ecarb  ->  error . '}'   (rule 964)
    error_ecarb  ->  error . '#'   (rule 965)

    '}' 	shift, and go to state 1270
    '#' 	shift, and go to state 1271
    ';' 	shift, and go to state 1576



state 1557

    object_statements_clause  ->  ':' '{' object_statement_seq.opt looping_object_statement '#' bang error_ecarb .   (rule 748)

    $default	reduce using rule 748 (object_statements_clause)



state 1558

    file_id_list  ->  file_id_list ',' . file_id   (rule 954)

    CLASS	shift, and go to state 3
    ENUM	shift, and go to state 1156
    NAMESPACE	shift, and go to state 1157
    STRUCT	shift, and go to state 6
    TYPENAME	shift, and go to state 107
    UNION	shift, and go to state 8
    TEMPLATE	shift, and go to state 1129
    OPERATOR	shift, and go to state 114
    MetaType	shift, and go to state 14
    TreeLiteral	shift, and go to state 15
    DERIVED	shift, and go to state 16
    FILE	shift, and go to state 17
    GUARD	shift, and go to state 18
    IMPLEMENTATION	shift, and go to state 19
    INCLUDE	shift, and go to state 20
    INTERFACE	shift, and go to state 21
    ALL 	shift, and go to state 22
    PLACEHOLDER	shift, and go to state 23
    PLACEMENT	shift, and go to state 24
    NOAUTO	shift, and go to state 25
    NOGUARD	shift, and go to state 26
    NOIMPLEMENTATION	shift, and go to state 27
    OVERLOAD	shift, and go to state 28
    PATH	shift, and go to state 29
    PREFIX	shift, and go to state 30
    PURE	shift, and go to state 31
    SUFFIX	shift, and go to state 32
    BODY	shift, and go to state 33
    ENTRY	shift, and go to state 34
    EXIT	shift, and go to state 35
    POST	shift, and go to state 36
    PRE 	shift, and go to state 37
    EMIT	shift, and go to state 38
    FROZEN	shift, and go to state 39
    POOL	shift, and go to state 40
    UTILITY	shift, and go to state 41
    SCOPE	shift, and go to state 42
    Identifier	shift, and go to state 43
    StringLiteral	shift, and go to state 127
    '~' 	shift, and go to state 515

    identifier_word	go to state 47
    identifier	go to state 48
    id  	go to state 101
    global_scope	go to state 555
    id_scope	go to state 556
    nested_id	go to state 104
    scoped_id	go to state 809
    destructor_id	go to state 810
    special_function_id	go to state 140
    nested_special_function_id	go to state 141
    scoped_special_function_id	go to state 811
    declarator_id	go to state 1159
    string	go to state 1114
    elaborated_type_specifier	go to state 1160
    elaborated_enum_specifier	go to state 177
    elaborated_class_specifier	go to state 184
    class_key	go to state 1161
    conversion_function_id	go to state 188
    operator_function_id	go to state 189
    template_id	go to state 54
    segment	go to state 58
    utility	go to state 66
    file_name	go to state 1163
    file_entity	go to state 1522
    file_id	go to state 1577



state 1559

    function_used_block  ->  USING file_id_list function_used_block .   (rule 773)

    $default	reduce using rule 773 (function_used_block)



state 1560

    derived_clause  ->  DERIVED '(' meta_conditional_expression . ')'   (rule 780)

    ')' 	shift, and go to state 1578



state 1561

    object_statement  ->  '(' expression_list ')' . ';'   (rule 759)

    ';' 	shift, and go to state 1579



state 1562

    object_statement  ->  '=' initializer_clause ';' .   (rule 758)

    $default	reduce using rule 758 (object_statement)



state 1563

    object_statement  ->  derived_clause ':' '{' . object_statement_seq.opt '}'   (rule 768)
    object_statement  ->  derived_clause ':' '{' . object_statement_seq.opt looping_object_statement '#' bang error '#'   (rule 769)

    $default	reduce using rule 749 (object_statement_seq.opt)

    object_statement_seq.opt	go to state 1580



state 1564

    looped_object_statement  ->  advance_search '+' looped_object_statement .   (rule 754)

    $default	reduce using rule 754 (looped_object_statement)



state 1565

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' ')' '[' ']' . compound_tree_statement   (rule 891)

    '{' 	shift, and go to state 264

    compound_tree_statement	go to state 1581



state 1566

    syntax_macro_parameter  ->  meta_type identifier '[' . ']'   (rule 895)

    ']' 	shift, and go to state 1582



state 1567

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' '[' . ']' compound_tree_statement   (rule 889)

    ']' 	shift, and go to state 1583



state 1568

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' compound_tree_statement .   (rule 888)

    $default	reduce using rule 888 (syntax_macro_definition)



state 1569

    syntax_macro_parameter  ->  ')' .   (rule 904)

    $default	reduce using rule 904 (syntax_macro_parameter)



state 1570

    syntax_macro_parameter_list  ->  syntax_macro_parameter_list ',' syntax_macro_parameter .   (rule 893)

    $default	reduce using rule 893 (syntax_macro_parameter_list)



state 1571

    compound_declaration  ->  '{' nest declaration_seq.opt util looping_declaration '#' bang error_ecarb .   (rule 254)

    $default	reduce using rule 254 (compound_declaration)



state 1572

    meta_control_statement1  ->  DO lined_declaration WHILE '(' expression ')' semi .   (rule 811)

    $default	reduce using rule 811 (meta_control_statement1)



state 1573

    meta_control_statement1  ->  FOR '(' for_init_statement condition.opt ';' expression.opt ')' . lined_declaration   (rule 816)

    $default	reduce using rule 970 (line)

    lined_declaration	go to state 1584
    line	go to state 1034



state 1574

    meta_control_statement1  ->  IF '(' condition ')' lined_declaration ELSE lined_declaration .   (rule 813)

    $default	reduce using rule 813 (meta_control_statement1)



state 1575

    braced_initializer  ->  '{' initializer_list ',' looping_initializer_clause '#' bang error_ecarb .   (rule 460)

    $default	reduce using rule 460 (braced_initializer)



state 1576

    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement '#' bang error ';' .   (rule 751)

    $default	reduce using rule 751 (object_statement_seq.opt)



state 1577

    file_id_list  ->  file_id_list ',' file_id .   (rule 954)

    $default	reduce using rule 954 (file_id_list)



state 1578

    derived_clause  ->  DERIVED '(' meta_conditional_expression ')' .   (rule 780)

    $default	reduce using rule 780 (derived_clause)



state 1579

    object_statement  ->  '(' expression_list ')' ';' .   (rule 759)

    $default	reduce using rule 759 (object_statement)



state 1580

    object_statement_seq.opt  ->  object_statement_seq.opt . looping_object_statement   (rule 750)
    object_statement_seq.opt  ->  object_statement_seq.opt . looping_object_statement '#' bang error ';'   (rule 751)
    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt . '}'   (rule 768)
    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt . looping_object_statement '#' bang error '#'   (rule 769)

    '}' 	shift, and go to state 1585

    $default	reduce using rule 973 (start_search)

    looping_object_statement	go to state 1586
    start_search	go to state 1355



state 1581

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' ')' '[' ']' compound_tree_statement .   (rule 891)

    $default	reduce using rule 891 (syntax_macro_definition)



state 1582

    syntax_macro_parameter  ->  meta_type identifier '[' ']' .   (rule 895)

    $default	reduce using rule 895 (syntax_macro_parameter)



state 1583

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' '[' ']' . compound_tree_statement   (rule 889)

    '{' 	shift, and go to state 264

    compound_tree_statement	go to state 1587



state 1584

    meta_control_statement1  ->  FOR '(' for_init_statement condition.opt ';' expression.opt ')' lined_declaration .   (rule 816)

    $default	reduce using rule 816 (meta_control_statement1)



state 1585

    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt '}' .   (rule 768)

    $default	reduce using rule 768 (object_statement)



state 1586

    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement .   (rule 750)
    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement . '#' bang error ';'   (rule 751)
    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt looping_object_statement . '#' bang error '#'   (rule 769)

    '#' 	shift, and go to state 1588

    $default	reduce using rule 750 (object_statement_seq.opt)



state 1587

    syntax_macro_definition  ->  EXPLICIT AUTO meta_type identifier '(' syntax_macro_parameter_list ')' '[' ']' compound_tree_statement .   (rule 889)

    $default	reduce using rule 889 (syntax_macro_definition)



state 1588

    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement '#' . bang error ';'   (rule 751)
    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt looping_object_statement '#' . bang error '#'   (rule 769)

    $default	reduce using rule 969 (bang)

    bang	go to state 1589



state 1589

    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement '#' bang . error ';'   (rule 751)
    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt looping_object_statement '#' bang . error '#'   (rule 769)

    error	shift, and go to state 1590



state 1590

    object_statement_seq.opt  ->  object_statement_seq.opt looping_object_statement '#' bang error . ';'   (rule 751)
    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt looping_object_statement '#' bang error . '#'   (rule 769)

    '#' 	shift, and go to state 1591
    ';' 	shift, and go to state 1576



state 1591

    object_statement  ->  derived_clause ':' '{' object_statement_seq.opt looping_object_statement '#' bang error '#' .   (rule 769)

    $default	reduce using rule 769 (object_statement)



state 1592

    $   	go to state 1593



state 1593

    $   	go to state 1594



state 1594

    $default	accept
